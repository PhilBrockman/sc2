{"version":3,"sources":["components/UnitSelector/Unit.js","components/UnitSelector/UnitSelector.js","components/Attacker/Damage.js","components/Attacker/Attacker.js","components/Defender.js","components/Upgrade.js","components/Middle.js","App.js","components/dashboard/Dashboard.js","components/dashboard/EditUnits.js","index.js"],"names":["useUnits","checkAgain","React","useState","response","setResponse","locked","setLocked","apiURL","console","log","useEffect","a","URL","fetch","then","res","json","units","catch","err","error","getUnits","Unit","props","unit","unitCard","className","name","style","display","minWidth","minHeight","children","inlineStyle","img","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","UnitImg","label","factions","terran","icon","production","commandCenter","barracks","factory","starport","zerg","hatchery","lair","protoss","nexus","gateway","roboticsFacility","stargate","camel2str","str","result","replace","charAt","toUpperCase","slice","RandomButton","button","randomize","randomText","onClick","ResetButton","setUnit","ButtonGroup","randomizeUnit","showUnits","subUnits","currentUnit","classes","map","index","tmpClasses","join","Production","structure","path","hidden","setHidden","filter","Faction","data","height","Object","entries","FactionFlipper","showFactions","InputText","searchText","setSearchText","type","placeholder","onChange","e","target","value","InputArea","tags","setTags","showTags","Tag","tag","highlight","cns","push","includes","toggleTagging","item","arr","Math","floor","random","length","toggle","types","UnitSelector","followup","setShowFactions","reset","absent","forEach","toLowerCase","fontSize","textAlign","key","intersection","b","setA","Set","setB","x","has","Array","from","canAttackTargetDefender","attack","defender","targets","Damage","attacker","research","guardian","totalDamage","def","att","base","shields","damageInflicted","armorDefense","eliminate","newValues","oneShot","count","health","JSON","parse","stringify","armor","faked","results","undefined","weapon","damageSum","i","repeats","d","damage","overkill","toFixed","attackResearch","shieldsResearch","armorResearch","this","Spell","Hallucinated","Corrupted","Hardened","Prismatic","bonusDamage","bonuses","bonus","to","reduce","total","amount","baseDamage","researchBonus","damageDealt","defenseAvailable","defenseApplied","damageReceived","damageCapped","min","max","AttackerErrorBoundary","state","errorInfo","setState","whiteSpace","toString","componentStack","Component","Bonus","textstyle","modifier","baseText","bonusText","textDecoration","Bullet","animate","Attacks","setAttackingWeapon","Attack","available","selected","attacks","attackMap","Attacker","setAttacker","Defender","researchSrcs","Upgrade","researchKind","updateResearch","incrementByAmount","decrement","increment","aria-label","animateValidAttacks","cname","keep","document","getElementsByClassName","elem","classList","add","remove","validAttacks","validAttackExists","DPS","doubleReroll","text","setDefender","flexDirection","position","updateHealth","newDefender","find","Vitality","shieldResearch","baseTypes","healthColor","setAttribute","val","attr","newBase","parseInt","UpdateAttr","updater","holderValue","setHolderValue","editing","setEditing","newStyle","justifyContent","width","border","padding","armorResearchImg","color","AllUpgrades","setAttackResearch","setShieldsResearch","setArmorResearch","targetable","attackerDamage","Loading","showImgs","setShowImgs","imgs","IMG","src","delay","setTimeout","Middle","large","backup","shieldresearch","opacity","App","setShieldsResearch1","setArmorResearch1","setAttackResearch1","autoSelected","setAutoSelected","loadingUnits","setUnits","setWindowWidth","updateDimensions","window","innerWidth","addEventListener","removeEventListener","equipWeapon","ainfo","middle","dinfo","Dashboard","Userfront","init","SignupForm","build","toolId","LoginForm","UpdateAttribute","updateFunction","attributeValue","clicks","setValue","dirty","setDirty","String","backgroundColor","assign","property","newObject","UpdateBonus","prefix","EditAttack","id","bid","EditArray","elements","add_element","EditUnit","og_unit","updates","setUpdates","updateUnit","attribute","operation","url","_id","method","headers","mode","body","maxWidth","EditUnits","sort","nameA","nameB","Purpose","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.346b7fb3.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Unit.css\"\n\nexport const useUnits = (checkAgain) => {\n  // console.log(\"beingcalled\")\n  const [response, setResponse] = React.useState(null)\n  const [locked, setLocked] = React.useState(false)\n\n  const apiURL = process.env.NODE_ENV ===\"development\"? 'http://localhost:5000/' : \"https://sc2-meleee.herokuapp.com/\";\n  console.log('apiURL', apiURL)\n\n  React.useEffect(() => {\n    setLocked(true)\n    const getUnits = async () =>{\n      if(locked) {return []}\n      const URL =apiURL + 'api/units';\n      console.log('URL', URL)\n        fetch(URL)\n          .then(res => res.json())\n          .then(res =>  {\n            setResponse(res.units)\n          })\n          .catch(err => {\n            console.error(\"error fetching\", err)\n          })\n    }\n\n    getUnits()\n  }, [locked, apiURL])\n\n  return [locked, response]\n}\n\nexport const Unit = (props) => {\n  const unit = props.unit;\n\n  const unitCard = unit? <div className={\"unit-card\"}>\n          <div className={\"unit-name\"}>{unit.name}</div>\n          <div style={{display: \"flex\"}}>\n            <div style={{minWidth:\"200px\", minHeight:\"200px\"}}><UnitImg unit={unit} /></div>\n            <div className={\"attributes\"}>\n            {props.children}\n            </div>\n          </div>\n        </div>  \n      : null;\n  \n  return <>{unitCard}</>\n      \n}\n\n\nexport const inlineStyle = (img) => {\n  return {\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'right',\n    backgroundImage: `url(${ img})`,\n    minWidth: '50px',\n  }\n}\nexport const UnitImg = ({unit, label}) => {\n  return <div style={inlineStyle(unit.img)} className={\"unit-img\"}>\n    <div className={\"unit-img-label\"}><h1>{label}</h1></div>\n  </div>\n}\n\n\n","import React from \"react\"\nimport {Unit, inlineStyle} from \"./Unit\"\n// import { useSpring, animated } from 'react-spring'\n\nimport \"./UnitSelector.css\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      commandCenter: \"/commandcenter.png\",\n      barracks: \"/barracks.png\",\n      factory: \"/factory.png\",\n      starport: \"/starport.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {\n      hatchery: \"/hatchery.png\",\n      lair: \"/lair.png\",\n      // hive: \"/hive.png\"\n    }\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      nexus: \"/nexus.png\",\n      gateway: \"/gateway.png\",\n      roboticsFacility: \"/robo.png\",\n      stargate: \"/stargate.png\"\n    }\n  }\n}\nconst camel2str = (str) => {\n   // adding space between strings\n  const result = str.replace(/([A-Z])/g,' $1');\n\n  // converting first character to uppercase and join it to the final string\n  const final = result.charAt(0).toUpperCase()+result.slice(1);\n  return final\n}\n\nexport const RandomButton = ({display, randomize, randomText }) => {\n  let button;\n\n  if(display){\n    button = <span onClick={() => randomize()}>\n                {randomText || <>🎲</>}\n            </span>\n  } else {\n    button = <button>Loading...</button>\n  }\n\n  return <div className={\"random-button\"}>\n      {button}\n    </div>\n}\n\nconst ResetButton = ({unit, setUnit}) => {\nreturn <div className={\"reset-button\"} onClick={() => setUnit(null)}>\n        ↻\n      </div>\n}\n\nconst ButtonGroup = ({unit, setUnit, randomizeUnit, display}) => {\n  return <div className={\"button-group\"}> \n    <RandomButton display={display} randomize={randomizeUnit} /> \n    {unit ? <ResetButton setUnit={setUnit} /> : null}\n  </div>\n}\n\nconst showUnits = (subUnits, currentUnit, setUnit) => {\n  const classes = [\"unit-selection\"]\n  return subUnits.map((unit,index) => {\n    let tmpClasses = classes\n    if( currentUnit?.name === unit.name){      \n      tmpClasses = [...classes, \"active-unit\"]\n    } else {\n      tmpClasses = classes\n    }\n\n    return <div key={index} \n                onClick={() => setUnit(unit)} \n                className={tmpClasses.join(\" \")} \n                style={inlineStyle(unit.img)}>\n      <header><h1>{unit.name}</h1></header>\n    </div>\n  })\n}\n\nconst Production = ({structure, path, units, unit, setUnit}) => {\n  const [hidden, setHidden] = React.useState(true)\n  const subUnits = units ? units.filter(unit => unit.structure === structure) : null;\n\n  let display = hidden? <></> :\n    <div className={\"units-selector\"}>{showUnits(subUnits, unit, setUnit)}</div>;\n\n  if(!units) return null;\n\n  return <div>\n      <div className={\"production-facility\"} style={inlineStyle(path)} onClick={() => setHidden(!hidden)}>\n        <header><h1>{camel2str(structure)}</h1></header>\n      </div>\n\n      <div>{display}</div>\n  </div>\n}\n\nconst Faction = ({data, units, unit, setUnit}) => {\n  const [hidden, setHidden] = React.useState(true);\n\n  return <div >\n    \n    <div onClick={() => setHidden(!hidden)}>\n      <div>{}</div>\n      <div style={{...inlineStyle(data.icon), height:\"150px\", \n  backgroundPosition: 'left',}} ></div>\n      </div>\n      {hidden ? null : \n      <div>\n        {\n          Object.entries(data.production).map(([structure, path]) => {\n            return <Production \n                      key={structure} \n                      structure={structure} \n                      path={path}\n                      units={units}\n                      unit={unit}\n                      setUnit={setUnit} />\n          })\n        }\n      </div>\n    }\n    </div>\n}\n\nconst FactionFlipper = ({ showFactions}) => {\n  if(showFactions) {\n    return \"hide ⟰ units\"\n  } else {  \n    return \"show ⟱ units\"\n  }\n}\n\nconst InputText = ({searchText, setSearchText}) => {\n  return <input key={\"inputter\"} className={\"unit-search\"} \n  type={\"search\"} placeholder={\"... unit name\"} \n  onChange={(e) => setSearchText(e.target.value)} value={searchText}/>\n}\n\nconst InputArea = ({units, currentUnit, setUnit, setSearchText, searchText, tags, setTags, showTags}) => {\n  const Tag = ({tag, highlight}) => {\n    const cns = [\"tagged-attribute\"]\n    cns.push(highlight && tags.includes(tag) ? \"used-tag\" : \"\")\n    return <div className={cns.join(\" \")} key={tag} onClick={() => toggleTagging(tag)}>{tag}</div>;\n  }\n  \n  const randomizeUnit = () => {\n    const randomElement = (arr) => {\n      return arr[Math.floor(Math.random()*arr.length)]\n    }\n    setUnit(randomElement(units))\n  }\n\n  const toggleTagging = (type) => {\n    if(tags.includes(type)){\n      setTags(tags.filter(item => item !== type))\n    } else {\n      setTags([...tags, type])\n    }\n  }\n  return <div>\n    <div className={\"input-area\"}>\n      <InputText setSearchText={setSearchText} searchText={searchText}/>\n      <ButtonGroup display={units} unit={currentUnit} setUnit={setUnit} randomizeUnit={randomizeUnit} />\n    </div>\n    <div className={\"row search-by-tag\"}>\n      {tags.map(tag => <Tag key={tag} tag={tag} toggle={toggleTagging} />)}\n      {tags.length > 0 ? <h1 className={\"clear-tags\"} onClick={() => setTags([])}>🚫</h1> : null}\n      </div>\n    <div>\n      <Unit unit={currentUnit} setUnit={setUnit}>\n        <div className={\"attributes\"}>\n            {showTags && currentUnit?.types.map((( tag, index ) => {\n                return <Tag key={tag} tag={tag} toggle={toggleTagging} highlight={true}/>\n              }))}\n\n              {showTags && currentUnit?\n                !currentUnit.types.includes(\"Air\") ? \n                  <button onClick={() => setUnit({...currentUnit, types:[...currentUnit.types, \"Air\"]})}>Take to the Air</button> :\n                  !currentUnit.types.includes(\"Ground\") ? \n                    <button onClick={() => setUnit({...currentUnit, types:[...currentUnit.types, \"Ground\"]})}>Bind to the Ground</button> :\n                     null\n                : null\n              }\n              \n            </div>\n      </Unit>\n    </div>\n  </div>\n}\n\nexport const UnitSelector = (props) => {\n  const [setUnit, currentUnit, units, showTags] = [props.setUnit, props.currentUnit, props.units, props.showTags]\n\n  const [tags, setTags] = React.useState([])\n  const [showFactions, setShowFactions] = React.useState(false)\n  const [searchText, setSearchText] = React.useState(\"\")\n\n  let  followup; \n  if(units){\n    const reset = <div className={\"button column\"} onClick={() => {setTags([]); setSearchText(\"\")}}><div> Clear filters</div></div>;\n\n    if(searchText.length > 0 || tags.length > 0){\n      let subUnits = units.filter(unit => {\n        let absent = false\n        tags.forEach(tag => {\n          if(!unit.types.includes(tag)){\n            absent = true;\n          }\n        })\n        return !absent\n      }).filter(unit => unit.name.toLowerCase().includes(searchText.toLowerCase()))\n      followup =  <>        \n        {showUnits(subUnits, currentUnit, setUnit).length >0 ? <><h1 style={{fontSize: \"2em\"}}>Filtered Results:</h1>{showUnits(subUnits, currentUnit, setUnit)} </>: <></>}\n        {reset}\n      </>\n    } else {\n      followup = <>\n        <div onClick={() => setShowFactions(!showFactions)} className={\"selector\"} style={{textAlign:\"center\", fontSize:\"1.5em\"}}><FactionFlipper showFactions={showFactions}/></div>\n          {showFactions ? \n              Object.entries(factions).map( ([key, value]) => {\n              return (\n                <div key={key} className={\"faction\"}>\n                  <Faction data={value} label={key} units={units} unit={currentUnit} setUnit={setUnit}/>\n                </div>\n              );\n            }) : null\n          }\n      </>\n    }\n    return <>\n      <InputArea showTags={showTags}\n        units={units} currentUnit={currentUnit} setUnit={setUnit}\n        setSearchText={setSearchText} searchText={searchText}\n        tags={tags} setTags={setTags} />\n        {props.children}\n      {followup}\n    </>\n  } else {\n    return \"Loading\"\n  }\n  \n  \n  \n}","export const groundAirTargetingValidation = (attack, defender) => {\n return intersection(intersection(attack.targets, defender.types), [\"Ground\", \"Air\"])\n}\n\nfunction intersection(a, b) {\n  var setA = new Set(a);\n  var setB = new Set(b);\n  var intersection = new Set([...setA].filter(x => setB.has(x)));\n  return Array.from(intersection);\n}\n\n\nexport const canAttackTargetDefender = (attack, defender) => {\n  if(attack && defender){\n    const overlap = intersection(intersection(attack.targets, defender.types), [\"Ground\", \"Air\"]);\n    return overlap.length > 0\n  } else {\n    return false\n  }\n}\n// d = Damage(unit, defender, attack, attackResearch, armorResearch, shieldsResearch)\n// Damage.oneStep(unit, defender)\nexport class Damage{\n  constructor( attacker, defender, research, guardian=0) {\n    if(!attacker || !defender){return null}\n\n  const [attackResearch, shieldsResearch, armorResearch] = research\n  this.research = {\n    attack: attackResearch,\n    armor: armorResearch,\n    shields: shieldsResearch\n  }\n\n  this.att = JSON.parse(JSON.stringify(attacker));\n  this.def = JSON.parse(JSON.stringify(defender));\n\n  let Spell = 1\n  let Hallucinated = 1\n  let Corrupted = 1\n  let Hardened = 900\n  let Prismatic = 1\n\n  this.bonusDamage = () => {\n    return this.att.weapon.bonuses.filter(bonus => this.def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total+amount.baseDamage+amount.researchBonus*this.research.attack\n    }, 0)\n  }\n\n  this.damageDealt = () => {\n    const attack = this.att?.weapon\n    if(this.att && this.def && attack){\n      return (\n        attack.baseDamage +\n        this.research.attack*attack.researchBonus +\n        this.bonusDamage()\n      )  \n    } else {\n      return \"\";\n    }\n  }\n\n  this.armorDefense = () => {\n    return this.def.base.armor + this.research.armor\n  }\n\n  this.defenseAvailable = () => {\n    if(this.def.base?.shields > 0){\n      return this.research.shields\n    } else {\n      return this.armorDefense(this.def)\n    }\n  }\n\n  this.defenseApplied = () => {\n    return this.defenseAvailable()*Spell*(2-Hallucinated)\n  }\n\nthis.damageReceived = () => {\n    return this.damageDealt()*Corrupted*Hallucinated*Prismatic - this.defenseApplied();\n  }\n\n\n  this.damageCapped = (att, def) => {\n    return Math.min(\n      this.damageReceived(att, def),\n      Hardened*Corrupted*Hallucinated+900*(1-Spell)\n    );\n  }\n\n  this.damageInflicted = (att, def) => {\n    return Math.max(\n      .5,\n      this.damageCapped(att, def) - guardian\n    );\n  }\n\n\n}\n\ntotalDamage = () => {\n  const def = this.def\n  const att = this.att\n\n  if(def.base.shields > 0 && this.damageInflicted(att, def) > def.base.shields + this.armorDefense(def)){\n    return this.damageInflicted(att, def)-this.armorDefense(def)\n  } else {\n    return this.damageInflicted(att, def)\n  }\n}\n\n\neliminate = () => {\n  let newValues = this.oneShot();\n  if(!newValues){return 0}\n  let count = 1;\n  while(newValues?.health > 0){\n    count++;\n\n      if(newValues){\n        const defender = {\n          ...this.def,\n          base: {\n            ...this.def.base,\n            health: newValues.health,\n            shields: newValues.shields,\n          }\n        }\n        const d =  new Damage(this.att,\n          JSON.parse(JSON.stringify(defender)), \n          [ this.research.attack, this.research.shields, this.research.armor])\n        newValues= d.oneShot()\n      }\n      \n    }\n    return count;\n}\n\n\noneShot = (faked=true) => {\n  let att; let def;\n  if(faked){\n    att = JSON.parse(JSON.stringify(this.att));\n    def = JSON.parse(JSON.stringify(this.def));\n  } else {\n    att = this.att\n    def = this.def\n  }\n\n  let results = null\n  let log\n\n  if(att.weapon === undefined || !def){\n    return \"👀 no attacker or attack not found\"\n  } if(!canAttackTargetDefender(att.weapon, def)){\n    return \"can't shoot\"\n  }\n  if(def.base.health > 0){\n    let damageSum=0;\n\n    for(var i = 0; i < att.weapon.repeats; i++){\n      console.log(\"repaeting attack\", att.weapon)\n      const d =  new Damage(att,\n        JSON.parse(JSON.stringify(def)),\n        [ this.research.attack, this.research.shields, this.research.armor])\n      let damage = d.totalDamage();\n      if(def.base?.shields > 0){\n        if(damage <= def.base.shields){\n          def.base.shields -= damage\n          log = `${damage} to shields. (${def.base.shields} remaining)`\n        } else {\n          def.base.health -= damage - def.base.shields;\n          def.base.shields = 0;\n          log = `${damage} has overloaded shields. (${def.base.health} health remaining)`\n        }\n      } else {\n        def.base.health -= damage;\n        log = `${damage} damage. (${def.base.health} HP)`\n      }\n      damageSum += damage;\n      if(def.base.health < 0){\n        const overkill = (100*-def.base.health/damageSum).toFixed(1)\n        log += ` (${overkill}% attack wasted)`\n      }\n      results = ({health: def.base.health, shields: def.base.shields, totalDamage: damageSum, log: log})\n    }\n  }\n  console.log(\"results\", results)\n  return results\n}\n}\n","import React from 'react'\nimport { UnitSelector } from '../UnitSelector/UnitSelector'\nimport {canAttackTargetDefender} from \"./Damage\"\nimport \"./Attacker.css\"\n\nclass AttackerErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrhap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}\n\n\nconst Bonus = ({attack, defender, textstyle}) => {\n\n  return attack.bonuses.map((bonus, index) => {\n    let baseText = <>Anti-{bonus.to}:</>\n    let bonusText = <>{bonus.baseDamage} (+{bonus.researchBonus})</>;\n    let modifier;\n    \n    if(!defender){\n      modifier = <span>{bonusText}</span>\n    } else {\n      // const overlap = false;//groundAirTargetingValidation(attack, defender);\n      // if (overlap.length === 0){\n      //   modifier = <span> {bonusText} </span>\n      // }else{\n        if (defender.types.includes(bonus.to) ){\n          modifier=  <span>{bonusText} 🎯</span>\n        } else {\n          modifier= <span style={{textDecoration: \"wavy line-through red\"}}>{ bonusText}</span>\n        }\n      // }\n    }\n\n    return <div key={index}>\n      {baseText}\n      <span className={textstyle}>\n      {modifier}\n      </span>\n    </div>\n  })  \n}\n\nconst Bullet = ({animate, display}) => {\n  if(display){\n    if (animate){\n      return <span className={\"bullet\"}>➡</span>\n    } else {\n      return <>➡</>\n    }\n  } else {\n    return <></>\n  }\n}\n\n// const WeaponDisplay = ({available, selected, classes}) => {\n//   return <>\"weapon\"</>\n//   // const cns = []\n//   // cns.push(index === attacker.weapon ? \"main-weapon\" : \"other-choice\");\n//   // cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n//   // const attacks = [\"attack-name\"]\n//   // attacks.push(available? \"alt-weapon\": \"unavailable\")\n//   // attacks.push(available && (defaultIndex === null) ? \"pulse\": \"\")\n//   // console.log('attacks', attacks)\n//   // console.log('defaultIndex', defaultIndex)\n//   // return <div key={index} onClick={() => toggleIndex(index)} className={cns.join(\" \")}>\n//   //   <>\n//   //     <div className={classes.join(\" \")} >\n//   //       <Bullet animate={available && (defaultIndex === null)} display={(true)}/>\n//   //           {attack.name} {attack.repeats > 1 ? <>(x {attack.repeats})</>: null}\n//   //     {index === defaultIndex ?\n//   //       <div>\n//   //         <>Base Damage: <span className={cn}>{attack.baseDamage} (+{attack.researchBonus})</span></>\n//   //         <Bonus attack={attack} defender={defender} textstyle={cn}/>\n//   //       </div>\n//   //       : null\n//   //       }\n//   //       </div>\n//   //   </>\n//   // </div>\n// }\n\nconst Attacks = ({attacker, defender, setAttackingWeapon}) => {\n  if(!attacker) return null;\n  const Attack = ({attack, available, selected}) => {\n    const cns = []\n    cns.push(attacker?.weapon?.name === attack?.name ? \"main-weapon\" : \"other-choice\");\n    cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n    const attacks = [\"attack-name\"]\n    attacks.push(available? \"alt-weapon\": \"unavailable\")\n    attacks.push(available && (!attacker.weapon ? \"pulse\": \"\"))\n    console.log('attacks', attacks)\n    return <div onClick={() => setAttackingWeapon(attack)} className={cns.join(\" \")}>\n      <>\n        <div className={attacks.join(\" \")} >\n          <Bullet animate={attacks.includes(\"pulse\")} display={(true)}/>\n              {attack.name} {attack.repeats > 1 ? <>(x {attack.repeats})</>: null}\n        {selected ?\n          <div>\n            <>Base Damage: <span className={attacks.includes(\"pulse\") ? \"bullet\" : \"\"}>{attack.baseDamage} (+{attack.researchBonus})</span></>\n            <Bonus attack={attack} defender={defender} textstyle={\"yellow\"}/>\n          </div>\n          : null\n          }\n          </div>\n      </>\n    </div>\n  }\n\n  const attackMap =  attacker?.attacks.map((attack) => {\n    const available = canAttackTargetDefender(attack, defender)\n    return <div key={attack.name}><Attack attack={attack} available={available}\n                           selected={attack === attacker.weapon} /></div>\n    \n  \n  })\n\n  return <div className={\"attacks\"}>\n    <h1>{\n\n    attacker.attacks.length > 0 ? \"Attacks\" : \"Pacifist\"}</h1>\n      {attacker? attackMap : null} \n  </div>\n}\n\nexport const Attacker = ({attacker, defender, setAttacker, units}) => {\n\n  const setAttackingWeapon = (weapon) => {\n  if(weapon !== attacker.weapon){\n      setAttacker({\n        ...attacker,\n        weapon: weapon\n      })\n    } else {\n      setAttacker({\n        ...attacker,\n        weapon: null\n      })\n    }\n    return null;\n  }\n  return <AttackerErrorBoundary>\n  <UnitSelector setUnit={setAttacker} currentUnit={attacker} units={units}> \n      <Attacks attacker={attacker} \n      setAttackingWeapon={setAttackingWeapon} \n      defender={defender} /> \n  </UnitSelector>\n  </AttackerErrorBoundary>\n}\n","import React from 'react'\nimport {UnitSelector} from \"./UnitSelector/UnitSelector\"\n\nexport const Defender = ({unit, setUnit, units}) => {\n    return <UnitSelector setUnit={setUnit} currentUnit={unit} units={units} showTags={true}>\n    </UnitSelector>\n  }\n        \n","import { inlineStyle } from \"./UnitSelector/Unit\";\nimport \"./Upgrade.css\"\n\n// import styles from '../features/counter/Counter.module.css';\n\nconst researchSrcs = {\n  attack: \"/attack.png\",\n  armor: \"/armor.png\",\n  shields: \"/shield.png\"\n};\n\nexport const Upgrade = ({researchKind, value, updateResearch})=> {\n  const incrementByAmount = (amount) => {\n    updateResearch(value + amount)\n  }\n\n  if(value === null){\n    return <></>\n  }\n\n  const decrement = value > 0 ? \"can-change\" : \"locked\";\n  const increment = value < 10 ? \"can-change\" : \"locked\";\n\n  return <>\n  <div className={\"research\"}>\n    <div className={\"incrementer\"}>\n      \n      <div className={\"research-img\"} style={{...inlineStyle(researchSrcs[researchKind]), backgroundPosition: \"center\"}}>\n      <div\n        aria-label=\"Increment value\"\n        onClick={() => (incrementByAmount(1))}\n        className={increment}\n      >   ⨁ </div>\n        <h1>{value}</h1>\n        \n        <div\n          aria-label=\"Decrement value\"\n          onClick={() => (incrementByAmount(-1))}\n          className={decrement}\n        > ⊖  </div>\n      </div>\n    </div>\n  </div> </>\n}","import React from \"react\"\nimport {Upgrade} from \"./Upgrade\"\nimport {canAttackTargetDefender, Damage} from \"./Attacker/Damage\"\nimport { UnitImg, inlineStyle } from './UnitSelector/Unit'\nimport {RandomButton} from \"./UnitSelector/UnitSelector\"\nimport \"./Middle.css\"\n \nconst animateValidAttacks = (cname, keep) => {\n  Array.from(document.getElementsByClassName(cname)).forEach(elem => {\n    if(keep){\n      elem.classList.add(\"pulse\") \n    } else{\n      elem.classList.remove(\"pulse\") \n    }\n  })\n}\n\n\nconst validAttacks = (attacker, defender) => {\n  return attacker?.attacks.filter(attack => {\n    return canAttackTargetDefender(attack, defender)\n  })\n}\n\nconst validAttackExists = (attacker, defender) => {\n  return validAttacks(attacker, defender).filter(item => item).length > 0\n}\n\n\nconst DPS = ({attacker, defender,  attackResearch, shieldsResearch, armorResearch, setDefender, setAttacker, units}) => {\n  let d = new Damage(attacker, defender, [ attackResearch, shieldsResearch, armorResearch])\n  const active = attacker?.weapon && defender\n  const cns = [\"button\"];\n\n  \n  let doubleReroll\n  let text \n  if(active){\n    cns.push(\"active\")\n    animateValidAttacks(\"alt-weapon\", false)\n    if(canAttackTargetDefender(attacker.weapon, defender)){\n      if(d?.oneShot()){\n        console.log(\"oneshot\", d.oneShot())\n        text = <div style={{display: \"flex\", flexDirection:\"column\"}}><div style={{fontSize:\"1.5em\"}}>Damage:</div> <div>⚔️ {d.oneShot().totalDamage} 🛡</div></div>\n      } else {\n        text = <>Victory (reset)</>\n      }\n    }else {\n      text=<>{attacker.weapon.name} cannot target {defender.name}</>\n      cns.push(\"inactive\")\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\")\n      if(validAttackExists(attacker, defender)){\n              console.log('attacker: )', validAttacks(attacker, defender) )\n              text = <span>⬅ Select a valid attack</span>\n              cns.push(\"pulse\")\n              animateValidAttacks(\"alt-weapon\", true)\n      } else{\n        cns.push(\"invalid\")\n        text = <>{attacker.name} can't attack {defender.name}</>\n        doubleReroll=true\n      }\n\n    } else {\n      cns.push(\"waiting\")\n      if (!attacker && !defender) {cns.push(\"pulse\")}\n      text= <div>\n                 <div>Select: </div>\n                <div>{!attacker ? <div className={\"attacker row\"}><RandomButton display={units} randomize={() => setAttacker(units[Math.floor(Math.random()*units.length)])} randomText={\"🎲  ⬅ Attacker\"}/>  </div>: null}</div>\n                <div>{!defender? <div className={\"defender row\"}><RandomButton display={units} position={setDefender} randomize={() => setDefender(units[Math.floor(Math.random()*units.length)])} randomText={\"Defender ➡ 🎲 \"} /> </div>: null}</div>        \n              </div>\n    }\n  }\n\n  const resetDefender = () => {\n    if(defender?.name) {\n     setDefender(units.find(unit => unit.name === defender.name))\n     }\n  }\n\n  const updateHealth = () => {\n    if(!attacker || !defender) return;\n    let newValues = d.oneShot();\n    let newDefender = defender;\n    if(newValues && attacker.weapon){\n      for(var i = 0; i < 1; i++){\n\n          let newValues = d.oneShot();\n          if(newValues){\n            newDefender = {\n              ...newDefender,\n              base: {\n                ...newDefender.base,\n                health: newValues.health,\n                shields: newValues.shields,\n              }\n            }\n            }\n          d = new Damage(JSON.parse(JSON.stringify(attacker)),\n          JSON.parse(JSON.stringify(newDefender)),\n          [ attackResearch, shieldsResearch, armorResearch]\n            )\n            \n     }\n     setDefender(newDefender)\n    } else {\n      resetDefender()\n    }\n  }\n\n  const callback = () => {\n    if(attacker){\n      console.log('attakcer', attacker)\n      if(validAttackExists(attacker, defender)){\n        console.log(\"valid attack exists\")\n        if(!attacker.weapon){\n          const attacks = validAttacks(attacker, defender)\n          console.log('attacks from attacker', attacks)\n          setAttacker({\n            ...attacker,\n            weapon: attacks[0]\n          })\n          }\n          else {\n            if(canAttackTargetDefender(attacker.weapon, defender)){\n              updateHealth()\n              }\n          }\n      } else {\n        console.log(\"no attack exists\")\n      }\n    } else {\n      console.log(\"no attacker\", attacker)\n    }\n  }\n\n  return <div className={\"DPS\"}>\n            <div><span className={cns.join(\" \")} onClick={callback}>{text}</span></div>\n            {doubleReroll ? <>\n              <div className={\"button\"}><RandomButton display={units} position={setDefender} randomize={() => {setDefender(units[Math.floor(Math.random()*units.length)]); setAttacker(units[Math.floor(Math.random()*units.length)])}} randomText={\"Reroll 🎲 Units\"}/></div>\n            </> : null}\n        </div>\n}\n\nconst Vitality = ({defender, units, setDefender, shieldResearch, armorResearch}) => {\n  const base = units?.find(unit => defender?.name === unit.name)?.base\n  const baseTypes = units?.find(unit => defender?.name === unit.name)?.types\n  const health = defender?.base.health/base?.health\n\n  const healthColor = health > 6/7 ? \"green\" :\n                        health > 4/7 ? \"yellow\":\n                          health > 2/7 ? \"orange\":\n                                            \"red\";\n\n  const setAttribute = (val, attr,) => {\n    const newBase = {...defender.base}\n    newBase[attr] = parseInt(val)\n    console.log('newBase', newBase)\n    setDefender({\n      ...defender,\n      base: {...newBase}\n    })\n  }\n\n\n\n  React.useEffect(() => {\n    // console.log('defender', defender.base)\n  }, [defender])\n\n  const UpdateAttr = ({ val, updater, attr, followup}) => {\n    const [holderValue, setHolderValue] = React.useState(val)\n    const [editing, setEditing] = React.useState(false)\n    const newStyle = editing? {justifyContent: \"space-evenly\"} : null;\n\n    return <div className={\"row astlye\"} style={newStyle}>\n      {editing? <div className={\"row\"}>\n        <input type={\"text\"} value={holderValue} onChange={(e) => setHolderValue(e.target.value)} style={{width: \"50px\"}}/>\n        <div onClick={() => {setEditing(false)  ; updater(holderValue, attr) }}>✅</div>\n        <div onClick={() => {setHolderValue(val); setEditing(false)}}>❌</div>\n        </div>:\n        //textDecoration: \"underline\"\n      <div style={{border: \"3px solid\", padding:\"3px\"} }onClick={() => setEditing(true)}>{holderValue}</div>  }\n      <div>&nbsp;{followup}</div>\n    </div>\n    } \n    // armorResearch, shieldResearch \n\n  const armorResearchImg = <div className={\"research-img\"} style={{...inlineStyle(\"/armor.png\"), backgroundPosition: \"center\", textAlign:\"center\"}}>\n    {armorResearch}\n  </div>\n  return<>  {defender?\n    <>\n      <div className={\"vitality\"}>        \n        <div className={\"avatar\"}>\n          <UnitImg unit={defender} label={<div className={\"vitality-stats\"}>\n          {base.shields ? <>\n            <div className={\"shields\"}>\n              <div><UpdateAttr val={defender.base.shields} updater={setAttribute} attr={\"shields\"} followup={<> / {base.shields}🧊</>} /></div>\n            </div>\n            </>: null}\n            <div className={\"health\"}>\n              <div><span style={{color: healthColor}}>{<UpdateAttr val={defender.base.health} updater={setAttribute} attr={\"health\"} followup={<> / {base.health} ♥️</>}/>}</span></div>\n            </div>\n            <div className={\"row\"}><div>{defender.base.armor+defender.research.armor*armorResearch} 🛡</div>= <UpdateAttr val={defender.base.armor} updater={setAttribute} attr={\"armor\"}/> + <>{armorResearchImg}</></div>\n            <div style={{ textAlign:\"right\"}}>\n          { (defender.base !== base || defender.types !== baseTypes) ? \n              <span onClick={() => setDefender(units?.find(unit => defender?.name === unit.name))}>Reset</span> : null}\n              </div>\n        </div>}/>\n        </div>\n      </div>\n    </>: null}</>\n\n}\n\nconst AllUpgrades = ({attacker, defender, attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch})  => {\n  let d = attacker && defender ?\n              new Damage(attacker, defender, [ attackResearch, shieldsResearch, armorResearch]) :\n              null;\n  const targetable = attacker?.attacks?.filter(attack => canAttackTargetDefender(attack, defender)).length > 0\n\n  const attackerDamage = d ? (targetable && !d.damageDealt())?  \"⬅\":\n    (targetable && d.damageDealt()) ? \n    <div className={\"attacker-damage\"}><div>{d.damageDealt() }</div><div>⚔️</div></div>:\n        defender ?\n          <span className={\"fail\"}>🥊</span>:\n          <>→</>:\n                            \"\";\n  \n    return <>\n    <div className={\"unit-stats\"}>\n        <div>{attacker ? <UnitImg unit={attacker} label={(attackerDamage)} /> : null}</div>\n          <div>{attacker ? <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} /> : null }</div>\n        <div></div>\n\n        <div></div>\n        <div>\n          {defender?.base.shields >= 0 ?  <Upgrade researchKind={\"shields\"} updateResearch={setShieldsResearch} value={shieldsResearch} /> :null }\n        </div>\n        <div>{defender?.base.shields ?  <UnitImg unit={defender} label={<div className={\"attacker-damage\"}><div>{shieldsResearch}</div><div>🧊</div></div>} />: null}</div>\n\n        <div></div>\n          <div>{defender? <Upgrade researchKind={\"armor\"} updateResearch={setArmorResearch} value={armorResearch} /> : null }</div>\n        <div>{defender ? <UnitImg unit={defender} label={<div className={\"attacker-damage\"}></div>}/>: null}</div>\n      </div> \n    </>\n    }\n\nconst Loading = () => {\n  const [showImgs, setShowImgs] = React.useState(0)\n  const imgs = [\"/marine.png\", \"/zergling.png\", \"/zealot.png\"]\n\n  const IMG = ({src, delay}) => {\n    return <img src = {src } className={\"loadingicon\"} />\n  }\n\n  setTimeout(() => {\n    setShowImgs((showImgs + 1) % imgs.length)\n  }, 1250)\n\n  // setInterval(() => {\n  //   console.log('showImgs', showImgs)\n  //   setShowImgs([...showImgs, imgs[Math.floor(Math.random()*imgs.length)]])\n  // }, 2500)\n  \n  return <>\n  <div className={\"pulse\"}>Heroku Dynos are spinning up...</div>\n  <IMG src={imgs[showImgs]} />\n  </>\n  // \"Note:  Free tier!\";\n}\n\nexport const Middle = ({attacker, defender, research, setDefender, setAttacker, units, large}) => {\n  if(!research || !units){\n    return units ?  \"no research (error)\":  \n    <Loading ></Loading>\n  } else {\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research\n    \n    const backup = new Damage(JSON.parse(JSON.stringify(attacker)),\n                          JSON.parse(JSON.stringify(defender)),\n                          [ attackResearch, shieldsResearch, armorResearch]\n                          )\n    const cns = [\"middle\"]\n    if(!large) {cns.push(\"middle-row\")}\n    return <div className={cns.join(\" \")}>\n              <div>\n                <DPS attacker={attacker} defender={defender}\n                    attackResearch={attackResearch} armorResearch={armorResearch} shieldsResearch={shieldsResearch}\n                    setDefender={setDefender} setAttacker={setAttacker} units={units}  />\n\n                <Vitality defender={defender} setDefender={setDefender} units={units} armorResearch={armorResearch} shieldresearch={shieldsResearch} />\n                {canAttackTargetDefender(attacker?.weapon, defender) ? <div className={\"eliminator\"}>Eliminates in {backup.eliminate()} attack{backup.eliminate() === 1 ? \"\" : \"s\"}.</div> : null}\n              </div>\n              <div>\n                {attacker || defender ? <h2>Unit Upgrades</h2> :  <h2 style={{opacity: .2}}>Unit Upgrades</h2>  }\n                <AllUpgrades attacker={attacker} defender={defender} attackResearch={attackResearch} setAttackResearch={setAttackResearch}\n                      shieldsResearch={shieldsResearch} setShieldsResearch={setShieldsResearch} armorResearch={armorResearch} setArmorResearch={setArmorResearch} />\n              </div>\n           </div>\n\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Attacker} from \"./components/Attacker/Attacker\"\nimport {Defender} from \"./components/Defender\"\nimport {Middle} from   \"./components/Middle\"\nimport {useUnits} from \"./components/UnitSelector/Unit\"\n\nfunction App() {\n  const [shieldsResearch, setShieldsResearch1] = React.useState(0)\n  const [armorResearch, setArmorResearch1] = React.useState(0)\n  const [attackResearch, setAttackResearch1] = React.useState(0);\n\n  const setShieldsResearch = (val) =>{\n    if(val >= 0 && val <= 10){\n      setShieldsResearch1(val)\n    }\n  }\n\n  const setArmorResearch = (val) =>{\n    if(val >= 0 && val <= 10){\n      setArmorResearch1(val)\n    }\n  }\n\n  const setAttackResearch = (val) =>{\n    if(val >= 0 && val <= 10){\n      setAttackResearch1(val)\n    }\n  }\n\n  const [autoSelected, setAutoSelected] = React.useState(false)\n\n  const [locked, loadingUnits] = useUnits()\n  const [units, setUnits] = React.useState(null)\n\n  const [attacker, setAttacker] = React.useState(null)\n  const [defender, setDefender] = React.useState(null)\n\n  const [width, setWindowWidth] = React.useState(0)\n   React.useEffect(() => { \n    const updateDimensions = () => {\n      const width = window.innerWidth\n      setWindowWidth(width)\n    }\n\n     updateDimensions();\n\n     window.addEventListener(\"resize\", updateDimensions);\n     return () => \n       window.removeEventListener(\"resize\",updateDimensions);\n    }, [])\n    \n\n  React.useEffect(() => {\n    if(locked){\n      setUnits(loadingUnits)\n    }\n  }, [locked, loadingUnits])\n\n\n  const equipWeapon = (attack) => {\n    setAttacker({\n      ...attacker,\n      weapon: attack\n    })\n  }\n\n  React.useEffect(() => {\n    setAutoSelected(false)\n  }, [attacker])\n\n  React.useEffect(() => {\n    const selectAttack = (att) => {\n      if(units){\n        if(!attacker) {\n          setAutoSelected(false)\n        } else {\n          if(!autoSelected) {\n            console.log(\"setting attack\")\n            setAutoSelected(true)\n          } \n          }\n        }\n    }\n    selectAttack(attacker)\n  }, [attacker, defender, units, autoSelected])\n\n  \n\n  const large = width > 950;\n\n  const ainfo = <div className={\"container\"}>\n                  <div className={\"attacker\"}>\n                  <h1 style={{fontSize: \"1.7em\", textAlign:\"center\"}}>Attacker</h1>\n                  <Attacker\n                    attacker={attacker}\n                    defender={defender}\n                    setAttacker={setAttacker}\n                    units={units}\n                    equipWeapon={equipWeapon}\n                    />\n                    </div>\n                </div>;\n\n  const middle = <div className={\"container\"}>\n                  <Middle\n                    attacker={attacker}\n                    defender={defender}\n                    research={[attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]}\n                    setDefender={setDefender}\n                    setAttacker={setAttacker}\n                    equipWeapon={equipWeapon}\n                    units={units}\n                    large ={large}\n                  /></div>;\n\n  const dinfo = <div className={\"container\"}>\n                  <div className={\"defender\"}>\n                    <h1 style={{fontSize: \"1.7em\", textAlign:\"center\"}}>Defender</h1>\n                    <Defender unit={defender} \n                              setUnit={setDefender} \n                              units={units}/>\n                  </div> \n                </div>;\n\n    return (\n      <div className=\"App\">\n        \n          {large ? <div className={\"arena\"}>{ainfo} {middle} {dinfo} </div>: \n          <>{middle} <div className={\"arena\"}>{ainfo} {dinfo} </div></>}\n          \n        \n      </div>\n    );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport Userfront from \"@userfront/react\";\n\n\nexport const Dashboard = () => {\n  Userfront.init(\"xbrx87bw\");\n  const SignupForm = Userfront.build({\n    toolId: \"ldnoak\"\n  });\n\n  const LoginForm = Userfront.build({\n    toolId: \"klmral\"\n  });\n\n  return(\n    <>\n      <LoginForm />\n      <h2>Dashboard</h2>\n      <SignupForm />\n    </>\n  );\n}","\nimport React from \"react\"\nimport {useUnits} from \"../UnitSelector/Unit\"\nimport \"./EditUnits.css\"\n\nconst UpdateAttribute = ({updateFunction, label, attributeValue, clicks}) => {\n  const [value, setValue] = React.useState(attributeValue)\n  const [dirty, setDirty] = React.useState(false)\n\n  React.useEffect(() => {\n    if(String(value) !== String(attributeValue)){\n      setDirty(true)\n    } else{\n      setDirty(false)\n    }\n  }, [value])\n\n  React.useEffect(() => {\n    if(clicks > 0){\n      if(dirty && value !== attributeValue){\n        updateFunction(value)\n        setDirty(false)\n      }\n    }\n  }, [clicks])\n\n  const style= {\n    backgroundColor: dirty? \"rgba(255,0,0, .2)\" : \"rgba(0,255,0, .1)\",\n  }\n  \n  return <div className={\"row attr\"}>\n    <div>{label}</div>\n    <input style={style} type=\"text\" onChange={(e) => setValue(e.target.value)} value={value || \"\"} />\n  </div>\n}\n\nconst assign = (property, value) => {\n  const newObject = {};\n  newObject[property] = value;\n  return newObject;\n}\n\nconst UpdateBonus = ({bonus, prefix ,updateFunction, clicks}) => {\n  return <>\n  <UpdateAttribute label={\"To\"} \n        attributeValue={bonus?.to} \n        updateFunction={(val) => \n            updateFunction( assign(prefix+\"to\", (val)))}\n        clicks={clicks} />\n  <UpdateAttribute label={\"Research Bonus\"} \n        attributeValue={bonus?.researchBonus} \n        updateFunction={(val) => \n            updateFunction( assign(prefix+\"researchBonus\", parseInt(val)))}\n        clicks={clicks} />\n  <UpdateAttribute label={\"Base Damage\"} \n        attributeValue={bonus?.baseDamage} \n        updateFunction={(val) => \n            updateFunction( assign(prefix+\"baseDamage\", parseInt(val)))}\n        clicks={clicks} />\n  </>\n}\n\nconst EditAttack = ({attack, updateFunction, id, clicks}) => {\n  \n  return <div className={\"row\"}>\n    <div>\n      <h3>{attack.name}</h3>\n    <UpdateAttribute label={\"Attack Name\"} \n          attributeValue={attack.name} \n          updateFunction={(val) => \n              updateFunction( assign(\"attacks.\"+id+\".name\", val))}\n          clicks={clicks} />\n    <EditArray label={\"Targets\"} arr={attack.targets} updateFunction={updateFunction} prefix={\"attacks.\"+id+\".targets.\"} clicks={clicks} />\n    <UpdateAttribute label={\"Research Bonus\"} \n          attributeValue={attack.researchBonus} \n          updateFunction={(val) => \n              updateFunction( assign(\"attacks.\"+id+\".researchBonus\", parseInt(val)))}\n          clicks={clicks} />\n    <UpdateAttribute label={\"Base Damage\"} \n          attributeValue={attack.baseDamage} \n          updateFunction={(val) => \n              updateFunction( assign(\"attacks.\"+id+\".baseDamage\", parseInt(val)))}\n          clicks={clicks} />\n    <UpdateAttribute label={\"Repeats\"} \n          attributeValue={attack.repeats} \n          updateFunction={(val) => \n              updateFunction( assign(\"attacks.\"+id+\".repeats\", parseInt(val)))}\n          clicks={clicks} />\n\n       <div>\n          <button onClick={() => updateFunction(assign(\"attacks.\"+id+\".bonuses\", {baseDamage: 1}), \"$push\")}>Add Bonus</button>\n      </div>\n    </div>\n    {attack.bonuses.length > 0 ?<div>\n    \n    <h4>Bonuses</h4>\n    <div>\n      {JSON.stringify(attack.bonuses)}\n    {attack.bonuses.map((bonus, bid) => {\n      const prefix = [\"attacks\", id, \"bonuses\", bid, \"\"].join(\".\");\n      // console.log('assign(prefix+\"to\", bonus?.to)', assign(prefix+\"to\", bonus?.to))\n      return <div key={bid} className={\"row\"}><div>\n        <UpdateBonus bonus = {bonus} \n        prefix={prefix}\n        updateFunction={updateFunction}\n        clicks={clicks}/>\n        </div>\n        <div>\n        <button onClick={() => {\n            updateFunction(assign([\"attacks\", id, \"bonuses\", bid].join(\".\"),  1  ),  \"$unset\")\n              .then(() => {\n                console.log(\"inner funciton\")\n                updateFunction(assign([\"attacks\", id, \"bonuses\"].join(\".\")     , null),  \"$pull\" )})\n            }}>Remove Bonus</button>\n        </div>\n      </div>\n\n    }\n    ) }</div> </div>: null }    \n  </div>\n}\n\nconst EditArray = ({label, arr, prefix, updateFunction, clicks}) => {\n  const elements = arr.map((item, id) => {\n    return <div key={id} className={\"row\"}>\n      <div>\n        <UpdateAttribute label={null} \n            attributeValue={item} \n            updateFunction={(val) => \n                updateFunction( assign(prefix+id, val))}\n            clicks={clicks} />\n      </div>\n      <div>\n        <button onClick={() => updateFunction(assign(prefix.slice(0, -1), item), \"$pull\")}>Remove</button>\n      </div>\n    </div>\n  })\n\n  const add_element = <button onClick={() => updateFunction(assign(prefix.slice(0, -1), \"\"), \"$push\")}>Add Element</button>\n  return <>\n  <div>{label}</div>\n  <div>{elements}</div>\n  <div>{add_element}</div>\n  </>\n}\n\nconst EditUnit = ({og_unit}) => {\n  const [unit, setUnit] = React.useState(og_unit)\n  const [updates, setUpdates] = React.useState(0)\n\n  const  updateUnit = async (attribute, operation=\"$set\") => {\n    const url = \"http://localhost:5000/api/update/\" + unit._id\n\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      json: true,\n      mode: 'cors',\n      body: JSON.stringify({\n        operation: operation,\n        attribute: attribute\n      }),\n    }).then(data => data.json())\n    .then(data => {\n      setUnit(data.unit.value)\n    }, error => {\n      console.log(\"Error!\")\n    })\n  }\n\n  return <>\n  <div className={\"row edit-unit\"}>\n    <div>\n    <button className={\"update-button\"} onClick={() => setUpdates(updates+1)}><h2>{unit.name}</h2></button>\n          <UpdateAttribute label={\"Builds at: \"} \n                attributeValue={unit.structure} \n                updateFunction={(val) => \n                    updateUnit( {\"structure\" : (val)} )}\n                clicks={updates} />\n        <h2>Types</h2>\n        <EditArray arr={unit.types} updateFunction={updateUnit} prefix={\"types.\"} clicks={updates} />\n        <div>\n          <h2>Base Stats</h2>\n          <UpdateAttribute label={\"Health\"} \n                attributeValue={unit.base.health} \n                updateFunction={(val) => \n                    updateUnit( {\"base.health\" : parseInt(val)} )}\n                clicks={updates} />\n          <UpdateAttribute label={\"Armor\"} \n                attributeValue={unit.base.armor} \n                updateFunction={(val) => \n                    updateUnit( { \"base.armor\" : parseInt(val) } )}\n                clicks={updates} />\n          {unit.base.shields?\n            <UpdateAttribute label={\"Shields\"} \n                attributeValue={unit.base.shields} \n                updateFunction={(val) => \n                    updateUnit( { \"base.shields\" : parseInt(val)} )}\n                clicks={updates} />\n            : null}\n        </div>\n        <div>\n          <h2>Image</h2>\n          <UpdateAttribute label={<img src={unit.img} style={{maxWidth: \"150px\"}}/>}\n                attributeValue={unit.img} \n                updateFunction={(val) => \n                    updateUnit( {\"img\" : (val)} )}\n              clicks={updates} />\n        </div>\n    </div>\n    <div>\n        <h2>Attacks</h2>\n        {unit.attacks.map((attack ,id) => <div key={id}>\n          <EditAttack \n                attack={attack} \n                id={id}\n                clicks={updates}\n                updateFunction={updateUnit}/>\n          </div>)}\n        \n    </div>\n  </div>\n  </>\n}\n\nexport const EditUnits = () => {\n  const [locked, units] = useUnits()\n  console.log(\"I'm rerunning the call\")\n\n  return <>\n  <div className={\"container\"}>\n    {!locked ? <>wating for units to load </> : \n      units?.sort((a, b) => {\n        var nameA = a.name.toUpperCase();\n        var nameB = b.name.toUpperCase();\n        if(nameA < nameB){\n          return -1;\n        } if (nameA > nameB){\n          return 1;\n        } \n        return 0;\n      }).map(unit => <div key={unit._id}> <EditUnit og_unit={unit}/> </div>)\n    }\n  </div>\n  </>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Dashboard} from \"./components/dashboard/Dashboard\"\nimport {EditUnits} from \"./components/dashboard/EditUnits\"\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst Purpose = () => <div className=\"App\">\n  <div className={\"container middle\"}>\n    <h1> Purpose </h1> \n      <div>Calculate the number of shots needed to take out a given unit. </div>\n    <h1>Usage</h1>\n      <ul>\n        <li>Select an attacker and defender.</li>\n        <li>Select upgrades (if desired).</li>\n        <li>Select starting health/shields.</li>\n      </ul>\n    <div>Calculations are based off <a href=\"https://liquipedia.net/starcraft2/Damage_Calculation#:~:text=Performing%20the%20Calculations%5Bedit%5D,*Splash*Hallucinated*Prismatic.&text=Defense%20Available%3A%20If%20the%20defender,Points%2C%20this%20equals%20Shield%20Defense.\">this resource</a></div>\n  </div>\n</div>\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <div className=\"wrapper\">\n      <div className={\"main-title\"}>\n        <div className={\"title\"}><a href = \"/\">SC2 Monobattle Calculator</a></div>\n          <div></div>\n          <div></div>\n      </div>\n      \n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/dash\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/dashboard\">\n            <EditUnits />\n          </Route>\n          <Route path=\"/purpose\">\n            <Purpose />\n          </Route>\n          <Route path=\"/\">\n            <App />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <div className={\"main-title\"}>\n          <div>Art Assets: <a href=\"https://www.youtube.com/user/CarbotAnimations\">Carbots</a> | <a href=\"https://starcraft2.com/en-us/\">StarCraft 2</a></div>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}