{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/Unit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Unit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const useUnits = checkAgain => {\n  _s();\n\n  // console.log(\"beingcalled\")\n  const [response, setResponse] = React.useState(null);\n  const [locked, setLocked] = React.useState(false);\n\n  const getUnits = async () => {\n    if (locked) {\n      return [];\n    }\n\n    console.log(\"FETCHING\");\n    fetch('http://localhost:5000/api/units').then(res => res.json()).then(res => {\n      setResponse(res.units);\n    }).catch(err => {\n      console.error(\"error fetching\", err);\n    });\n  };\n\n  React.useEffect(() => {\n    setLocked(true);\n    getUnits();\n  }, []);\n  return [locked, response];\n};\n\n_s(useUnits, \"jOL3c7okKDE0RVKw7+VfjnGyk9A=\");\n\nexport const Unit = ({\n  setUnit,\n  unit,\n  weaknesses = []\n}) => {\n  //<UnitSelector setUnit={setDefender} currentUnit={defender}/> \n  const unitCard = unit ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-name\",\n      children: unit.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: unit.img,\n          alt: `portrait for ${unit.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes\",\n        children: unit.types.map((type, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute\",\n            children: type\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 26\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: unitCard\n  }, void 0, false);\n};\n_c = Unit;\nexport const UnitImg = ({\n  unit,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit-img\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        minWidth: \"100px\"\n      },\n      src: unit.img,\n      alt: `portrait for ${unit.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-img-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_c2 = UnitImg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Unit\");\n$RefreshReg$(_c2, \"UnitImg\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/Unit.js"],"names":["React","useUnits","checkAgain","response","setResponse","useState","locked","setLocked","getUnits","console","log","fetch","then","res","json","units","catch","err","error","useEffect","Unit","setUnit","unit","weaknesses","unitCard","name","display","img","types","map","type","index","UnitImg","label","minWidth"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport \"./Unit.css\"\n\nexport const useUnits = (checkAgain) => {\n  // console.log(\"beingcalled\")\n  const [response, setResponse] = React.useState(null)\n  const [locked, setLocked] = React.useState(false)\n\n  const getUnits = async () =>{\n    if(locked) {return []}\n    console.log(\"FETCHING\")\n      fetch('http://localhost:5000/api/units')\n        .then(res => res.json())\n        .then(res =>  {\n          setResponse(res.units)\n        })\n        .catch(err => {\n          console.error(\"error fetching\", err)\n        })\n  }\n  React.useEffect(() => {\n    setLocked(true)\n    getUnits()\n  }, [])\n\n  return [locked, response]\n}\n\nexport const Unit = ({setUnit, unit, weaknesses=[]}) => {\n  //<UnitSelector setUnit={setDefender} currentUnit={defender}/> \n  const unitCard = unit? <div className={\"unit-card\"}>\n          <div className={\"unit-name\"}>{unit.name}</div>\n          <div style={{display: \"flex\"}}>\n            <div className={\"unit-profile\"}>\n              <img src={unit.img} alt={`portrait for ${unit.name}`}></img>\n            </div>\n            <div className={\"attributes\"}>\n            {unit.types.map((( type, index ) => {\n                return <div className={\"attribute\"} key = {index}> \n                {type}\n                </div>\n              }))}\n            </div>\n          </div>\n        </div>  \n      : null;\n  \n  return <>{unitCard}</>\n      \n}\n\nexport const UnitImg = ({unit, label}) => {\n  return <div className={\"unit-img\"}>\n    <img style={{minWidth: \"100px\"}} src={unit.img} alt={`portrait for ${unit.name}`}></img>\n    <div className={\"unit-img-label\"}>{label}</div>\n  </div>\n}\n\n\n"]},"metadata":{},"sourceType":"module"}