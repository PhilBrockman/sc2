{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/Attacker.js\";\nimport React from 'react';\nimport { Unit } from \"./Unit\";\nimport { Upgrade } from \"./Upgrade\";\nimport { useSpring, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bonus = ({\n  attack,\n  defender,\n  style\n}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let bonusText = ` +${bonus.baseDamage} + (${bonus.researchBonus})`;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Anti-\", bonus.to, \":\", defender.types.includes(bonus.to) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style,\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: \"wavy line-through red\"\n          },\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  });\n};\n\n_c = Bonus;\n\nconst Bullet = ({\n  animate,\n  display\n}) => {\n  if (display) {\n    if (animate) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bullet\",\n        children: \"\\u27A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u27A1\"\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = Bullet;\n\nfunction intersection(a, b) {\n  var setA = new Set(a);\n  var setB = new Set(b);\n  var intersection = new Set([...setA].filter(x => setB.has(x)));\n  return Array.from(intersection);\n}\n\nconst canAttackTargetDefender = (attack, defender) => intersection(intersection(attack.targets, defender.types), [\"Ground\", \"Air\"]).length > 0;\n\nconst Attacks = ({\n  unit,\n  defender,\n  defaultIndex,\n  setDefaultIndex,\n  setDamage\n}) => {\n  const toggleIndex = index => {\n    if (index === defaultIndex) {\n      setDefaultIndex(null);\n      setDamage(null);\n    } else {\n      setDefaultIndex(index);\n    }\n  };\n\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main-weapon\" : \"alt-weapon\";\n    const available = canAttackTargetDefender(attack, defender);\n    const cn = available ? \"success\" : \"fail\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleIndex(index),\n      className: style,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attack-name\",\n          children: [/*#__PURE__*/_jsxDEV(Bullet, {\n            animate: defaultIndex === null,\n            display: available && defaultIndex !== index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }, this), attack.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), index === defaultIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Base Damage: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: cn,\n              children: [attack.baseDamage, \" + (\", attack.researchBonus, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Bonus, {\n            attack: attack,\n            defender: defender,\n            style: cn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c3 = Attacks;\nexport const Attacker = ({\n  unit,\n  defender,\n  research,\n  attackChoice,\n  damage,\n  setDamage\n}) => {\n  const [attack, setAttack] = attackChoice;\n  const [attackResearch, setAttackResearch] = research;\n  let damageIndicator;\n\n  if (unit.attacks.length > 0) {\n    if (damage) {\n      damageIndicator = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u2694\\uFE0F \", damage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this);\n    } else {\n      damageIndicator = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u2694\\uFE0F \\uD83D\\uDC40 \"\n      }, void 0, false);\n    }\n  } else {\n    damageIndicator = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  Damage.oneStep(unit, defender);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Unit, {\n        type: unit,\n        children: damageIndicator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Attacks, {\n        unit: unit,\n        defaultIndex: attack,\n        setDefaultIndex: setAttack,\n        defender: defender,\n        setDamage: setDamage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upgrades\",\n      children: /*#__PURE__*/_jsxDEV(Upgrade, {\n        researchKind: \"attack\",\n        updateResearch: setAttackResearch,\n        value: attackResearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_c4 = Attacker;\n\nclass Damage {\n  constructor(attacker, defender, attack, research, setDamage, guardian = 0) {\n    const bonusDamage = (att, def) => {\n      return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n        return total + amount.baseDamage + amount.researchBonus * attackResearch;\n      }, 0);\n    };\n\n    const damageDealt = (att, def) => {\n      return att.attacks[attack].baseDamage + attackResearch * att.attacks[attack].researchBonus + bonusDamage(att, def);\n    };\n\n    React.useEffect(() => {\n      if (attacker.attacks[attack]) {\n        setDamage(damageDealt(attacker, defender));\n      }\n    }, [attacker, defender, damageDealt, setDamage]);\n\n    const armorDefense = unit => {\n      return unit.base.armor + armorResearch;\n    };\n\n    const defenseAvailable = unit => {\n      var _unit$base;\n\n      if (((_unit$base = unit.base) === null || _unit$base === void 0 ? void 0 : _unit$base.shields) > 0) {\n        return shieldsResearch;\n      } else {\n        return armorDefense(unit);\n      }\n    };\n\n    const defenseApplied = unit => {\n      return defenseAvailable(unit) * Spell * (2 - Hallucinated);\n    };\n\n    const damageReceived = (att, def) => {\n      return damageDealt(att, def) * Corrupted * Hallucinated * Prismatic - defenseApplied(def);\n    };\n\n    const damageCapped = (att, def) => {\n      return Math.min(damageReceived(att, def), Hardened * Corrupted * Hallucinated + 900 * (1 - Spell));\n    };\n\n    const damageInflicted = (att, def) => {\n      return Math.max(.5, damageCapped(att, def) - guardian);\n    };\n\n    const totalDamage = (att, def) => {\n      if (def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)) {\n        console.log('def', def);\n        return damageInflicted(att, def) - armorDefense(def);\n      } else {\n        return damageInflicted(att, def);\n      }\n    };\n\n    function oneStep(att, def) {\n      const att2 = JSON.parse(JSON.stringify(att)); // Object.assign({}, att);\n\n      const def2 = JSON.parse(JSON.stringify(def)); //Object.assign({}, def);\n\n      const results = [];\n      let log;\n\n      if (att2.attacks[attack] === undefined) {\n        return \"👀\";\n      }\n\n      if (def2.base.health > 0) {\n        let damage = totalDamage(att2, def2);\n\n        for (var i = 0; i < att2.attacks[attack].repeats; i++) {\n          var _def2$base;\n\n          if (((_def2$base = def2.base) === null || _def2$base === void 0 ? void 0 : _def2$base.shields) > 0) {\n            if (damage <= def2.base.shields) {\n              def2.base.shields -= damage;\n              log = `${damage} to shields. (${def2.base.shields} remaining)`;\n            } else {\n              damage -= def2.base.shields;\n              def2.base.shields = 0;\n              def2.base.health -= damage;\n              log = `${damage} has overloaded shields. (${def2.base.health} health remaining)`;\n            }\n          } else {\n            def2.base.health -= damage;\n            log = `${damage} damage. (${def2.base.health} HP)`;\n          }\n\n          results.push(log);\n        }\n      }\n\n      return results;\n    } // const eliminate = (att, def) => {\n    //   const att2 =JSON.parse(JSON.stringify(att))// Object.assign({}, att);\n    //   const def2 = JSON.parse(JSON.stringify(def))//Object.assign({}, def);\n    //   const results = []\n    //   if(att2.attacks[attack] === undefined){\n    //     return \"👀\"\n    //   }\n    //   let shots = 0;\n    //   while(def2.base.health > 0){\n    //     let damage = totalDamage(att2, def2);\n    //     results.push([def2.base.shields, def2.base.health, \"|\", damage])\n    //     shots ++;\n    //     for(var i = 0; i < att2.attacks[attack].repeats; i++){\n    //       if(def2.base?.shields > 0){\n    //         if(damage <= def2.base.shields){\n    //           def2.base.shields -= damage\n    //         } else {\n    //           damage -= def2.base.shields;\n    //           def2.base.shields = 0;\n    //           def2.base.health -= damage;\n    //         }\n    //       } else {\n    //         def2.base.health -= damage;\n    //       }\n    //     }\n    //   }\n    //   return shots\n    // }\n    // const res = eliminate(attacker, defender);\n    // if(Number.isInteger(res)){\n    //   return <div style={{width: \"200px\"}}>\n    //           {defender.base.shields}\n    //             <div> Shots to Kill = {}</div>\n    //           </div>\n    // } else {\n    //   return <>{res}</>;\n    // }\n\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Bonus\");\n$RefreshReg$(_c2, \"Bullet\");\n$RefreshReg$(_c3, \"Attacks\");\n$RefreshReg$(_c4, \"Attacker\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/Attacker.js"],"names":["React","Unit","Upgrade","useSpring","animated","Bonus","attack","defender","style","bonuses","map","bonus","index","bonusText","baseDamage","researchBonus","to","types","includes","textDecoration","Bullet","animate","display","intersection","a","b","setA","Set","setB","filter","x","has","Array","from","canAttackTargetDefender","targets","length","Attacks","unit","defaultIndex","setDefaultIndex","setDamage","toggleIndex","attacks","available","cn","name","Attacker","research","attackChoice","damage","setAttack","attackResearch","setAttackResearch","damageIndicator","Damage","oneStep","constructor","attacker","guardian","bonusDamage","att","def","reduce","total","amount","damageDealt","useEffect","armorDefense","base","armor","armorResearch","defenseAvailable","shields","shieldsResearch","defenseApplied","Spell","Hallucinated","damageReceived","Corrupted","Prismatic","damageCapped","Math","min","Hardened","damageInflicted","max","totalDamage","console","log","att2","JSON","parse","stringify","def2","results","undefined","health","i","repeats","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Unit} from \"./Unit\"\nimport {Upgrade} from \"./Upgrade\"\nimport { useSpring, animated } from 'react-spring'\n\n\nconst Bonus = ({attack, defender, style}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let bonusText = ` +${bonus.baseDamage} + (${bonus.researchBonus})`;\n\n    return <>\n      <div key={index}>\n        Anti-{bonus.to}: \n        {defender.types.includes(bonus.to) ?\n        <span className={style}>\n          {bonusText}\n        </span>: \n        <span style={{textDecoration: \"wavy line-through red\"}}>{ bonusText}</span>\n        }\n      </div>\n    </>;\n  })\n}\n\nconst Bullet = ({animate, display}) => {\n  if(display){\n    if (animate){\n      return <span className={\"bullet\"}>➡</span>\n    } else {\n      return <>➡</>\n    }\n  } else {\n    return <></>\n  }\n}\n\nfunction intersection(a, b) {\n  var setA = new Set(a);\n  var setB = new Set(b);\n  var intersection = new Set([...setA].filter(x => setB.has(x)));\n  return Array.from(intersection);\n}\n\nconst canAttackTargetDefender = (attack, defender) => intersection(intersection(attack.targets, defender.types), [\"Ground\", \"Air\"]).length > 0\n\nconst Attacks = ({unit, defender, defaultIndex, setDefaultIndex, setDamage}) => {\n  const toggleIndex = (index) => {\n      if(index === defaultIndex){\n        setDefaultIndex(null)\n        setDamage(null)\n      } else {\n        setDefaultIndex(index)\n      }\n    }\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main-weapon\" : \"alt-weapon\";\n    const available = canAttackTargetDefender(attack, defender)\n    const cn = available ? \"success\" : \"fail\";\n\n    return <div key={index} onClick={() => toggleIndex(index)} className={style}>\n      <>\n        <div className={\"attack-name\"}><Bullet animate={defaultIndex === null} display={available && (defaultIndex !== index)}/>{attack.name}</div>\n        {index === defaultIndex ?\n          <div>\n            <>Base Damage: <span className={cn}>{attack.baseDamage} + ({attack.researchBonus})</span></>\n            <Bonus attack={attack} defender={defender} style={cn}/>\n          </div>\n          : null\n          }\n      </>\n    </div>\n  })\n}\n\n\n\nexport const Attacker = ({unit, defender, research, attackChoice, damage, setDamage}) => {\n  const [attack, setAttack] = attackChoice;\n  const [attackResearch, setAttackResearch] = research;\n\n  let damageIndicator;\n  if(unit.attacks.length > 0 ){\n    if(damage){\n      damageIndicator = <h1>⚔️ {damage}</h1>;\n    } else {\n      damageIndicator = <>⚔️ 👀 </>;\n    }\n  } else {\n    damageIndicator = <></>;\n  }\n\n\n  Damage.oneStep(unit, defender)\n\n  return <div className={\"unit\"}>\n    <div>\n    <Unit type={unit}>\n      {damageIndicator}\n    </Unit>\n      <Attacks unit={unit} defaultIndex={attack} setDefaultIndex={setAttack} defender={defender} setDamage={setDamage}/>\n    </div>\n    <div className={\"upgrades\"}>\n      <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} />\n    </div>\n  </div>\n}\n\nclass Damage{\n  constructor( attacker, defender, attack, research, setDamage, guardian=0) {\n\n  \n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total+amount.baseDamage+amount.researchBonus*attackResearch\n    }, 0)\n  }\n\n  const damageDealt = (att, def) => {\n    return (\n      att.attacks[attack].baseDamage + \n      attackResearch*att.attacks[attack].researchBonus + \n      bonusDamage(att, def)\n    )\n  }\n\n  React.useEffect(() => {\n    if(attacker.attacks[attack]) {setDamage(damageDealt(attacker, defender))}\n  }, [attacker, defender, damageDealt, setDamage])\n\n  const armorDefense = (unit) => {\n    return unit.base.armor + armorResearch\n  }\n\n  const defenseAvailable = (unit) => {\n    if(unit.base?.shields > 0){\n      return shieldsResearch\n    } else {\n      return armorDefense(unit)\n    }\n  }\n\n  const defenseApplied = (unit) => {\n    return defenseAvailable(unit)*Spell*(2-Hallucinated)\n  }\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def)*Corrupted*Hallucinated*Prismatic - defenseApplied(def);\n  }\n\n\n  const damageCapped = (att, def) => {\n    return Math.min(\n      damageReceived(att, def),\n      Hardened*Corrupted*Hallucinated+900*(1-Spell)\n    );\n  }\n\n  const damageInflicted = (att, def) => {\n    return Math.max(\n      .5,\n      damageCapped(att, def) - guardian\n    );\n  }\n\n  const totalDamage = (att, def) => {\n    if(def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)){\n      console.log('def', def)\n      return damageInflicted(att, def)-armorDefense(def)\n    } else {\n      return damageInflicted(att, def)\n    }\n  }\n\n  function oneStep(att, def) {\n    const att2 =JSON.parse(JSON.stringify(att))// Object.assign({}, att);\n    const def2 = JSON.parse(JSON.stringify(def))//Object.assign({}, def);\n    const results = []\n    let log;\n      \n    if(att2.attacks[attack] === undefined){\n      return \"👀\"\n    }\n    if(def2.base.health > 0){\n      let damage = totalDamage(att2, def2);\n      for(var i = 0; i < att2.attacks[attack].repeats; i++){\n        if(def2.base?.shields > 0){\n          if(damage <= def2.base.shields){\n            def2.base.shields -= damage\n            log = `${damage} to shields. (${def2.base.shields} remaining)`\n          } else {\n            damage -= def2.base.shields;\n            def2.base.shields = 0;\n            def2.base.health -= damage;\n            log = `${damage} has overloaded shields. (${def2.base.health} health remaining)`\n          }\n        } else {\n          def2.base.health -= damage;\n          log = `${damage} damage. (${def2.base.health} HP)`\n        }\n        results.push(log)\n      }\n    }\n    return results\n  }\n\n  // const eliminate = (att, def) => {\n  //   const att2 =JSON.parse(JSON.stringify(att))// Object.assign({}, att);\n  //   const def2 = JSON.parse(JSON.stringify(def))//Object.assign({}, def);\n  //   const results = []\n      \n  //   if(att2.attacks[attack] === undefined){\n  //     return \"👀\"\n  //   }\n  //   let shots = 0;\n  //   while(def2.base.health > 0){\n  //     let damage = totalDamage(att2, def2);\n  //     results.push([def2.base.shields, def2.base.health, \"|\", damage])\n  //     shots ++;\n  //     for(var i = 0; i < att2.attacks[attack].repeats; i++){\n  //       if(def2.base?.shields > 0){\n  //         if(damage <= def2.base.shields){\n  //           def2.base.shields -= damage\n  //         } else {\n  //           damage -= def2.base.shields;\n  //           def2.base.shields = 0;\n  //           def2.base.health -= damage;\n  //         }\n  //       } else {\n  //         def2.base.health -= damage;\n  //       }\n  //     }\n  //   }\n  //   return shots\n  // }\n\n  // const res = eliminate(attacker, defender);\n  // if(Number.isInteger(res)){\n  //   return <div style={{width: \"200px\"}}>\n  //           {defender.base.shields}\n  //             <div> Shots to Kill = {}</div>\n  //           </div>\n  // } else {\n  //   return <>{res}</>;\n  // }\n\n}\n}"]},"metadata":{},"sourceType":"module"}