{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/app/store.js"],"names":["configureStore","counterReducer","store","reducer","counter"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAGA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAClCG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEH;AADF;AADyB,CAAD,CAA5B,C,CAMP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"]},"metadata":{},"sourceType":"module"}