{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { marauder, immortal } from \"./SC2Data\";\nimport './App.css';\nimport { Attacker } from \"./components/Attacker\";\nimport { Defender } from \"./components/Defender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [shieldsResearch, setShieldsResearch] = React.useState(0);\n  const [armorResearch, setArmorResearch] = React.useState(0);\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(0);\n  const [guardian, setGuardian] = React.useState(0);\n  const attacker = marauder;\n  const defender = immortal;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arena\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Attacker, {\n            unit: attacker,\n            defender: defender,\n            research: [attackResearch, setAttackResearch],\n            attackChoice: [attack, setAttack]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Damage, {\n            attacker: attacker,\n            defender: defender,\n            attack: attack,\n            research: [attackResearch, armorResearch, shieldsResearch]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Defender, {\n            unit: defender,\n            updaters: [shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"ivzqviwNgCQ1x115gjWm3lKeuWw=\");\n\n_c = App;\n\nconst Damage = ({\n  attacker,\n  defender,\n  attack,\n  research,\n  guardian = 0\n}) => {\n  const [attackResearch, armorResearch, shieldsResearch] = research;\n  let Spell = 1;\n  let Hallucinated = 1;\n  let Corrupted = 1.2;\n  let Hardened = 10;\n  let Prismatic = 1;\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total + amount.baseDamage + amount.researchBonus * attackResearch;\n    }, 0);\n  };\n\n  const damageDealt = (att, def) => {\n    return (att.attacks[attack].baseDamage + attackResearch * att.attacks[attack].researchBonus + bonusDamage(att, def)) * Corrupted * Hallucinated * Prismatic;\n  };\n\n  const armorDefense = unit => {\n    return unit.base.armor + armorResearch;\n  };\n\n  const defenseAvailable = unit => {\n    var _unit$base;\n\n    if (((_unit$base = unit.base) === null || _unit$base === void 0 ? void 0 : _unit$base.shields) > 0) {\n      return shieldsResearch;\n    } else {\n      return armorDefense(unit);\n    }\n  };\n\n  const defenseApplied = unit => {\n    return defenseAvailable(unit) * Spell * (2 - Hallucinated);\n  };\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def) - defenseApplied(def);\n  };\n\n  const damageCapped = (att, def) => {\n    return Math.min(damageReceived(att, def), Hardened * Corrupted * Hallucinated + 900 * (1 - Spell));\n  };\n\n  const damageInflicted = (att, def) => {\n    return Math.max(.5, damageCapped(att, def) - guardian);\n  };\n\n  const totalDamage = (att, def) => {\n    if (def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)) {\n      console.log('def', def);\n      return damageInflicted(att, def) - armorDefense(def);\n    } else {\n      return damageInflicted(att, def);\n    }\n  };\n\n  const eliminate = (att, def) => {\n    const att2 = JSON.parse(JSON.stringify(att)); // Object.assign({}, att);\n\n    const def2 = JSON.parse(JSON.stringify(def)); //Object.assign({}, def);\n\n    let shots = 0;\n\n    while (def2.base.health > 0) {\n      var _def2$base;\n\n      console.log('def2', def2);\n      let damage = totalDamage(att2, def2);\n      shots++;\n\n      if (((_def2$base = def2.base) === null || _def2$base === void 0 ? void 0 : _def2$base.shields) > 0) {\n        if (damage <= def2.base.shields) {\n          def2.base.shields -= damage;\n        } else {\n          damage -= def2.base.shields;\n          def2.base.shields = 0;\n        }\n      }\n\n      def2.base.health -= damage;\n    }\n\n    return shots;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Damage Dealt = \", damageDealt(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" D Availebl = \", defenseAvailable(defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Damage Recived = \", damageReceived(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Damage Capped = \", damageCapped(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Damage Inflicted = \", damageInflicted(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Total Damage = \", totalDamage(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Shots to Kill = \", eliminate(attacker, defender)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Damage;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Damage\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/App.js"],"names":["React","marauder","immortal","Attacker","Defender","App","shieldsResearch","setShieldsResearch","useState","armorResearch","setArmorResearch","attackResearch","setAttackResearch","attack","setAttack","guardian","setGuardian","attacker","defender","Damage","research","Spell","Hallucinated","Corrupted","Hardened","Prismatic","bonusDamage","att","def","attacks","bonuses","filter","bonus","types","includes","to","reduce","total","amount","baseDamage","researchBonus","damageDealt","armorDefense","unit","base","armor","defenseAvailable","shields","defenseApplied","damageReceived","damageCapped","Math","min","damageInflicted","max","totalDamage","console","log","eliminate","att2","JSON","parse","stringify","def2","shots","health","damage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {marauder, immortal} from \"./SC2Data\"\nimport './App.css';\nimport {Attacker} from \"./components/Attacker\"\nimport {Defender} from \"./components/Defender\"\nfunction App() {\n  const [shieldsResearch, setShieldsResearch] = React.useState(0)\n  const [armorResearch, setArmorResearch] = React.useState(0)\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(0);\n\n  const [guardian, setGuardian] = React.useState(0)\n\n\n  const attacker = marauder;\n  const defender = immortal;\n  \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className={\"arena\"}>\n            <div className={\"container\"}>\n              <Attacker \n                unit={attacker} \n                defender={defender} \n                research={[attackResearch, setAttackResearch]}\n                attackChoice={[attack, setAttack]}/>\n            </div>\n            <div>\n              <Damage \n                attacker={attacker} \n                defender={defender} \n                attack={attack}\n                research={[attackResearch, armorResearch, shieldsResearch]}/>\n            </div>\n            <div className={\"container\"}\n              ><Defender \n                unit={defender} \n                updaters={[shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]}\n              /></div>\n          </div>\n        </header>\n      </div>\n    );\n}\n\nconst Damage = ({attacker, defender, attack, research, guardian=0}) => {\n  const [attackResearch, armorResearch, shieldsResearch] = research\n\n\n  let Spell = 1\n  let Hallucinated = 1\n  let Corrupted = 1.2\n  let Hardened = 10\n  let Prismatic = 1\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total+amount.baseDamage+amount.researchBonus*attackResearch\n    }, 0)\n  }\n\n  const damageDealt = (att, def) => {\n    return (\n      att.attacks[attack].baseDamage + \n      attackResearch*att.attacks[attack].researchBonus + \n      bonusDamage(att, def)\n    )*Corrupted*Hallucinated*Prismatic\n  }\n\n\n  const armorDefense = (unit) => {\n    return unit.base.armor + armorResearch\n  }\n\n  const defenseAvailable = (unit) => {\n    if(unit.base?.shields > 0){\n      return shieldsResearch\n    } else {\n      return armorDefense(unit)\n    }\n  }\n\n  const defenseApplied = (unit) => {\n    return defenseAvailable(unit)*Spell*(2-Hallucinated)\n  }\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def) - defenseApplied(def);\n  }\n\n\n  const damageCapped = (att, def) => {\n    return Math.min(\n      damageReceived(att, def),\n      Hardened*Corrupted*Hallucinated+900*(1-Spell)\n    );\n  }\n\n  const damageInflicted = (att, def) => {\n    return Math.max(\n      .5,\n      damageCapped(att, def) - guardian\n    );\n  }\n\n  const totalDamage = (att, def) => {\n    if(def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)){\n      console.log('def', def)\n      return damageInflicted(att, def)-armorDefense(def)\n    } else {\n      return damageInflicted(att, def)\n    }\n  }\n\n  const eliminate = (att, def) => {\n    const att2 =JSON.parse(JSON.stringify(att))// Object.assign({}, att);\n    const def2 = JSON.parse(JSON.stringify(def))//Object.assign({}, def);\n    let shots = 0;\n    while(def2.base.health > 0){\n      console.log('def2', def2)\n      let damage = totalDamage(att2, def2);\n      shots ++;\n      if(def2.base?.shields > 0){\n        if(damage <= def2.base.shields){\n          def2.base.shields -= damage\n        } else {\n          damage -= def2.base.shields;\n          def2.base.shields = 0;\n        }\n      }\n      def2.base.health -= damage;\n    }\n    return shots\n  }\n\n\n  return <>\n    <div> Damage Dealt = {damageDealt(attacker, defender)}</div>\n    <div> D Availebl = {defenseAvailable(defender)}</div>\n    <div> Damage Recived = {damageReceived(attacker, defender)}</div>\n    <div> Damage Capped = {damageCapped(attacker, defender)}</div>\n    <div> Damage Inflicted = {damageInflicted(attacker, defender)}</div>\n    <div> Total Damage = {totalDamage(attacker, defender)}</div>\n    <div> Shots to Kill = {eliminate(attacker, defender)}</div>\n  </>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}