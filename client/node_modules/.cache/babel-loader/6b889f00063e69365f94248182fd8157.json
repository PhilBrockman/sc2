{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { marauder, immortal } from \"./SC2Data\";\nimport './App.css';\nimport { Attacker } from \"./components/Attacker\";\nimport { Defender } from \"./components/Defender\";\nimport { UnitSelector } from './components/UnitSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [shieldsResearch, setShieldsResearch] = React.useState(0);\n  const [armorResearch, setArmorResearch] = React.useState(0);\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(null);\n  const [damage, setDamage] = React.useState(null);\n  const [guardian, setGuardian] = React.useState(0);\n  const [attacker, setAttacker] = React.useState(marauder);\n  const [defender, setDefender] = React.useState(immortal);\n\n  const setDefenderShields = value => {\n    setDefender({ ...defender,\n      base: { ...defender.base,\n        shields: value\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    setAttack(null);\n    setDamage(null);\n  }, [attacker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arena\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Attacker, {\n            unit: attacker,\n            defender: defender,\n            research: [attackResearch, setAttackResearch],\n            attackChoice: [attack, setAttack],\n            damage: damage,\n            setDamage: setDamage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UnitSelector, {\n            setUnit: setAttacker,\n            currentUnit: attacker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Damage, {\n            attacker: attacker,\n            defender: defender,\n            attack: attack,\n            research: [attackResearch, armorResearch, shieldsResearch],\n            setDamage: setDamage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Defender, {\n            unit: defender,\n            updaters: [shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch],\n            changeStats: [setDefenderShields]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UnitSelector, {\n            setUnit: setDefender,\n            currentUnit: defender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"MKUbiCnunTODjr9lFEJF6lTKzUw=\");\n\n_c = App;\n\nconst Damage = ({\n  attacker,\n  defender,\n  attack,\n  research,\n  setDamage,\n  guardian = 0\n}) => {\n  _s2();\n\n  const [attackResearch, armorResearch, shieldsResearch] = research;\n  let Spell = 1;\n  let Hallucinated = 1;\n  let Corrupted = 1;\n  let Hardened = 900;\n  let Prismatic = 1;\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total + amount.baseDamage + amount.researchBonus * attackResearch;\n    }, 0);\n  };\n\n  const damageDealt = (att, def) => {\n    return att.attacks[attack].baseDamage + attackResearch * att.attacks[attack].researchBonus + bonusDamage(att, def);\n  };\n\n  React.useEffect(() => {\n    if (attacker.attacks[attack]) {\n      setDamage(damageDealt(attacker, defender));\n    }\n  }, [attacker, defender, damageDealt, setDamage]);\n\n  const armorDefense = unit => {\n    return unit.base.armor + armorResearch;\n  };\n\n  const defenseAvailable = unit => {\n    var _unit$base;\n\n    if (((_unit$base = unit.base) === null || _unit$base === void 0 ? void 0 : _unit$base.shields) > 0) {\n      return shieldsResearch;\n    } else {\n      return armorDefense(unit);\n    }\n  };\n\n  const defenseApplied = unit => {\n    return defenseAvailable(unit) * Spell * (2 - Hallucinated);\n  };\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def) * Corrupted * Hallucinated * Prismatic - defenseApplied(def);\n  };\n\n  const damageCapped = (att, def) => {\n    return Math.min(damageReceived(att, def), Hardened * Corrupted * Hallucinated + 900 * (1 - Spell));\n  };\n\n  const damageInflicted = (att, def) => {\n    return Math.max(.5, damageCapped(att, def) - guardian);\n  };\n\n  const totalDamage = (att, def) => {\n    if (def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)) {\n      console.log('def', def);\n      return damageInflicted(att, def) - armorDefense(def);\n    } else {\n      return damageInflicted(att, def);\n    }\n  };\n\n  const eliminate = (att, def) => {\n    const att2 = JSON.parse(JSON.stringify(att)); // Object.assign({}, att);\n\n    const def2 = JSON.parse(JSON.stringify(def)); //Object.assign({}, def);\n\n    const results = [];\n\n    if (att2.attacks[attack] === undefined) {\n      return \"ðŸ‘€\";\n    }\n\n    let shots = 0;\n\n    while (def2.base.health > 0) {\n      let damage = totalDamage(att2, def2);\n      results.push([def2.base.shields, def2.base.health, \"|\", damage]);\n      shots++;\n\n      for (var i = 0; i < att2.attacks[attack].repeats; i++) {\n        var _def2$base;\n\n        if (((_def2$base = def2.base) === null || _def2$base === void 0 ? void 0 : _def2$base.shields) > 0) {\n          if (damage <= def2.base.shields) {\n            def2.base.shields -= damage;\n          } else {\n            damage -= def2.base.shields;\n            def2.base.shields = 0;\n            def2.base.health -= damage;\n          }\n        } else {\n          def2.base.health -= damage;\n        }\n      }\n    }\n\n    return shots;\n  };\n\n  const res = eliminate(attacker, defender);\n\n  if (Number.isInteger(res)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"200px\"\n      },\n      children: [defender.base.shields, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Shots to Kill = \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: res\n    }, void 0, false);\n  }\n};\n\n_s2(Damage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Damage;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Damage\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/App.js"],"names":["React","marauder","immortal","Attacker","Defender","UnitSelector","App","shieldsResearch","setShieldsResearch","useState","armorResearch","setArmorResearch","attackResearch","setAttackResearch","attack","setAttack","damage","setDamage","guardian","setGuardian","attacker","setAttacker","defender","setDefender","setDefenderShields","value","base","shields","useEffect","Damage","research","Spell","Hallucinated","Corrupted","Hardened","Prismatic","bonusDamage","att","def","attacks","bonuses","filter","bonus","types","includes","to","reduce","total","amount","baseDamage","researchBonus","damageDealt","armorDefense","unit","armor","defenseAvailable","defenseApplied","damageReceived","damageCapped","Math","min","damageInflicted","max","totalDamage","console","log","eliminate","att2","JSON","parse","stringify","def2","results","undefined","shots","health","push","i","repeats","res","Number","isInteger","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {marauder, immortal} from \"./SC2Data\"\nimport './App.css';\nimport {Attacker} from \"./components/Attacker\"\nimport {Defender} from \"./components/Defender\"\nimport { UnitSelector } from './components/UnitSelector';\nfunction App() {\n  const [shieldsResearch, setShieldsResearch] = React.useState(0)\n  const [armorResearch, setArmorResearch] = React.useState(0)\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(null);\n  const [damage, setDamage] = React.useState(null);\n\n\n  const [guardian, setGuardian] = React.useState(0)\n\n  const [attacker, setAttacker] = React.useState(marauder)\n  const [defender, setDefender] = React.useState(immortal)\n\n  const setDefenderShields = (value) => {\n    setDefender({\n      ...defender,\n      base:{\n        ...defender.base,\n        shields: value\n      }\n    })\n  }\n\n  React.useEffect(() => {\n    setAttack(null)\n    setDamage(null)\n  }, [attacker])\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className={\"arena\"}>\n            <div className={\"container\"}>\n              <Attacker \n                unit={attacker} \n                defender={defender} \n                research={[attackResearch, setAttackResearch]}\n                attackChoice={[attack, setAttack]}\n                damage={damage}\n                setDamage={setDamage}/>\n                <UnitSelector setUnit={setAttacker} currentUnit={attacker}/>\n            </div>\n            <div>\n              <Damage \n                attacker={attacker} \n                defender={defender} \n                attack={attack}\n                research={[attackResearch, armorResearch, shieldsResearch]}\n                setDamage={setDamage}/>\n            </div>\n            <div className={\"container\"}>\n              <Defender \n                unit={defender} \n                updaters={[shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]}\n                changeStats={[setDefenderShields]}\n              />\n              <UnitSelector setUnit={setDefender} currentUnit={defender}/>\n            </div>\n          </div>\n        </header>\n      </div>\n    );\n}\n\nconst Damage = ({attacker, defender, attack, research, setDamage, guardian=0}) => {\n  const [attackResearch, armorResearch, shieldsResearch] = research\n  let Spell = 1\n  let Hallucinated = 1\n  let Corrupted = 1\n  let Hardened = 900\n  let Prismatic = 1\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total+amount.baseDamage+amount.researchBonus*attackResearch\n    }, 0)\n  }\n\n  const damageDealt = (att, def) => {\n    return (\n      att.attacks[attack].baseDamage + \n      attackResearch*att.attacks[attack].researchBonus + \n      bonusDamage(att, def)\n    )\n  }\n\n  React.useEffect(() => {\n    if(attacker.attacks[attack]) {setDamage(damageDealt(attacker, defender))}\n  }, [attacker, defender, damageDealt, setDamage])\n\n  const armorDefense = (unit) => {\n    return unit.base.armor + armorResearch\n  }\n\n  const defenseAvailable = (unit) => {\n    if(unit.base?.shields > 0){\n      return shieldsResearch\n    } else {\n      return armorDefense(unit)\n    }\n  }\n\n  const defenseApplied = (unit) => {\n    return defenseAvailable(unit)*Spell*(2-Hallucinated)\n  }\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def)*Corrupted*Hallucinated*Prismatic - defenseApplied(def);\n  }\n\n\n  const damageCapped = (att, def) => {\n    return Math.min(\n      damageReceived(att, def),\n      Hardened*Corrupted*Hallucinated+900*(1-Spell)\n    );\n  }\n\n  const damageInflicted = (att, def) => {\n    return Math.max(\n      .5,\n      damageCapped(att, def) - guardian\n    );\n  }\n\n  const totalDamage = (att, def) => {\n    if(def.base.shields && damageInflicted(att, def) > def.base.shields + armorDefense(def)){\n      console.log('def', def)\n      return damageInflicted(att, def)-armorDefense(def)\n    } else {\n      return damageInflicted(att, def)\n    }\n  }\n\n  const eliminate = (att, def) => {\n    const att2 =JSON.parse(JSON.stringify(att))// Object.assign({}, att);\n    const def2 = JSON.parse(JSON.stringify(def))//Object.assign({}, def);\n    const results = []\n      \n    if(att2.attacks[attack] === undefined){\n      return \"ðŸ‘€\"\n    }\n    let shots = 0;\n    while(def2.base.health > 0){\n      let damage = totalDamage(att2, def2);\n      results.push([def2.base.shields, def2.base.health, \"|\", damage])\n      shots ++;\n      for(var i = 0; i < att2.attacks[attack].repeats; i++){\n        if(def2.base?.shields > 0){\n          if(damage <= def2.base.shields){\n            def2.base.shields -= damage\n          } else {\n            damage -= def2.base.shields;\n            def2.base.shields = 0;\n            def2.base.health -= damage;\n          }\n        } else {\n          def2.base.health -= damage;\n        }\n      }\n    }\n    return shots\n  }\n\n  const res = eliminate(attacker, defender);\n  if(Number.isInteger(res)){\n    return <div style={{width: \"200px\"}}>\n            {defender.base.shields}\n              <div> Shots to Kill = {}</div>\n            </div>\n  } else {\n    return <>{res}</>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}