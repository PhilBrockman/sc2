{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { marauder, immortal } from \"./SC2Data\";\nimport './App.css';\nimport { Attacker } from \"./components/Attacker\";\nimport { Defender } from \"./components/Defender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [shieldsResearch, setShieldsResearch] = React.useState(0);\n  const [armorResearch, setArmorResearch] = React.useState(0);\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(0);\n  const [guardian, setGuardian] = React.useState(0);\n  const attacker = marauder;\n  const defender = immortal;\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total + amount.baseDamage + amount.researchBonus * attackResearch;\n    }, 0);\n  };\n\n  const damageDealt = (att, def) => {\n    return att.attacks[attack].baseDamage + attackResearch * att.attacks[attack].researchBonus + bonusDamage(att, def);\n  };\n\n  const armorDefense = unit => {\n    return unit.base.armor + armorResearch;\n  };\n\n  const defenseAvailable = unit => {\n    var _unit$base;\n\n    if (((_unit$base = unit.base) === null || _unit$base === void 0 ? void 0 : _unit$base.shields) > 0) {\n      return shieldsResearch;\n    } else {\n      return armorDefense(unit);\n    }\n  };\n\n  const defenseApplied = unit => {\n    return defenseAvailable(unit);\n  };\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def) - defenseApplied(def);\n  }; // let Spell = 1\n  // let Hallucinated = 1\n  // let Corrupted = 1.2\n  // let Hardened = 10 \n  // const damageCapped = () => {\n  //   return Math.min(\n  //     damageReceived(),\n  //     Hardened*Corrupted*Hallucinated+900*(1-Spell)\n  //   );\n  // }\n  // const damageInflicted = () => {\n  //   return Math.max(\n  //     .5,\n  //     damageCapped() - guardian\n  //   );\n  // }\n  // const totalDamage = () => {\n  //   if(defender.base?.shields + armorDefense(defender)){\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arena\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Attacker, {\n            unit: attacker,\n            defender: defender,\n            research: [attackResearch, setAttackResearch],\n            attackChoice: [attack, setAttack]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" Damage Dealt = \", damageDealt(attacker, defender)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" D Availebl = \", defenseAvailable(defender)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Damage Recived = damageReceived()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Damage Capped = damageCapped()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Damage Inflicted = amageInflicted()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Defender, {\n            unit: defender,\n            updaters: [shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"ivzqviwNgCQ1x115gjWm3lKeuWw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/App.js"],"names":["React","marauder","immortal","Attacker","Defender","App","shieldsResearch","setShieldsResearch","useState","armorResearch","setArmorResearch","attackResearch","setAttackResearch","attack","setAttack","guardian","setGuardian","attacker","defender","bonusDamage","att","def","attacks","bonuses","filter","bonus","types","includes","to","reduce","total","amount","baseDamage","researchBonus","damageDealt","armorDefense","unit","base","armor","defenseAvailable","shields","defenseApplied","damageReceived"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,WAAjC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,QAAR,QAAuB,uBAAvB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA1C;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCZ,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA5C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA5B;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAhC;AAGA,QAAMS,QAAQ,GAAGhB,QAAjB;AACA,QAAMiB,QAAQ,GAAGhB,QAAjB;;AAEA,QAAMiB,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,WAAOD,GAAG,CAACE,OAAJ,CAAYT,MAAZ,EAAoBU,OAApB,CAA4BC,MAA5B,CAAmCC,KAAK,IAAIJ,GAAG,CAACK,KAAJ,CAAUC,QAAV,CAAmBF,KAAK,CAACG,EAAzB,CAA5C,EAA0EC,MAA1E,CAAiF,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzG,aAAOD,KAAK,GAACC,MAAM,CAACC,UAAb,GAAwBD,MAAM,CAACE,aAAP,GAAqBtB,cAApD;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD,GAJD;;AAMA,QAAMuB,WAAW,GAAG,CAACd,GAAD,EAAMC,GAAN,KAAc;AAChC,WAAOD,GAAG,CAACE,OAAJ,CAAYT,MAAZ,EAAoBmB,UAApB,GAAiCrB,cAAc,GAACS,GAAG,CAACE,OAAJ,CAAYT,MAAZ,EAAoBoB,aAApE,GAAoFd,WAAW,CAACC,GAAD,EAAMC,GAAN,CAAtG;AACD,GAFD;;AAKA,QAAMc,YAAY,GAAIC,IAAD,IAAU;AAC7B,WAAOA,IAAI,CAACC,IAAL,CAAUC,KAAV,GAAkB7B,aAAzB;AACD,GAFD;;AAIA,QAAM8B,gBAAgB,GAAIH,IAAD,IAAU;AAAA;;AACjC,QAAG,eAAAA,IAAI,CAACC,IAAL,0DAAWG,OAAX,IAAqB,CAAxB,EAA0B;AACxB,aAAOlC,eAAP;AACD,KAFD,MAEO;AACL,aAAO6B,YAAY,CAACC,IAAD,CAAnB;AACD;AACF,GAND;;AAQA,QAAMK,cAAc,GAAIL,IAAD,IAAU;AAC/B,WAAOG,gBAAgB,CAACH,IAAD,CAAvB;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,CAACtB,GAAD,EAAMC,GAAN,KAAc;AACnC,WAAOa,WAAW,CAACd,GAAD,EAAMC,GAAN,CAAX,GAAwBoB,cAAc,CAACpB,GAAD,CAA7C;AACD,GAFD,CAvCa,CA6Cb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE,WAAhB;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,IAAI,EAAEJ,QADR;AAEE,YAAA,QAAQ,EAAEC,QAFZ;AAGE,YAAA,QAAQ,EAAE,CAACP,cAAD,EAAiBC,iBAAjB,CAHZ;AAIE,YAAA,YAAY,EAAE,CAACC,MAAD,EAASC,SAAT;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,kCACE;AAAA,2CAAsBoB,WAAW,CAACjB,QAAD,EAAWC,QAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,yCAAoBqB,gBAAgB,CAACrB,QAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAK,UAAA,SAAS,EAAE,WAAhB;AAAA,iCACG,QAAC,QAAD;AACC,YAAA,IAAI,EAAEA,QADP;AAEC,YAAA,QAAQ,EAAE,CAACZ,eAAD,EAAkBC,kBAAlB,EAAsCE,aAAtC,EAAqDC,gBAArD;AAFX;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BH;;GAlGQL,G;;KAAAA,G;AAoGT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport {marauder, immortal} from \"./SC2Data\"\nimport './App.css';\nimport {Attacker} from \"./components/Attacker\"\nimport {Defender} from \"./components/Defender\"\nfunction App() {\n  const [shieldsResearch, setShieldsResearch] = React.useState(0)\n  const [armorResearch, setArmorResearch] = React.useState(0)\n  const [attackResearch, setAttackResearch] = React.useState(0);\n  const [attack, setAttack] = React.useState(0);\n\n  const [guardian, setGuardian] = React.useState(0)\n\n\n  const attacker = marauder;\n  const defender = immortal\n\n  const bonusDamage = (att, def) => {\n    return att.attacks[attack].bonuses.filter(bonus => def.types.includes(bonus.to)).reduce((total, amount) => {\n      return total+amount.baseDamage+amount.researchBonus*attackResearch\n    }, 0)\n  }\n\n  const damageDealt = (att, def) => {\n    return att.attacks[attack].baseDamage + attackResearch*att.attacks[attack].researchBonus + bonusDamage(att, def)\n  }\n\n\n  const armorDefense = (unit) => {\n    return unit.base.armor + armorResearch\n  }\n\n  const defenseAvailable = (unit) => {\n    if(unit.base?.shields > 0){\n      return shieldsResearch\n    } else {\n      return armorDefense(unit)\n    }\n  }\n\n  const defenseApplied = (unit) => {\n    return defenseAvailable(unit)\n  }\n\n  const damageReceived = (att, def) => {\n    return damageDealt(att, def) - defenseApplied(def);\n  }\n  \n\n\n  // let Spell = 1\n  // let Hallucinated = 1\n  // let Corrupted = 1.2\n  // let Hardened = 10 \n\n  // const damageCapped = () => {\n  //   return Math.min(\n  //     damageReceived(),\n  //     Hardened*Corrupted*Hallucinated+900*(1-Spell)\n  //   );\n  // }\n\n  // const damageInflicted = () => {\n  //   return Math.max(\n  //     .5,\n  //     damageCapped() - guardian\n  //   );\n  // }\n\n\n  // const totalDamage = () => {\n  //   if(defender.base?.shields + armorDefense(defender)){\n      \n  //   }\n  // }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className={\"arena\"}>\n            <div className={\"container\"}>\n              <Attacker \n                unit={attacker} \n                defender={defender} \n                research={[attackResearch, setAttackResearch]}\n                attackChoice={[attack, setAttack]}/>\n            </div>\n            <div>\n              <div> Damage Dealt = {damageDealt(attacker, defender)}</div>\n              <div> D Availebl = {defenseAvailable(defender)}</div>\n              <div> Damage Recived = damageReceived()</div>\n              <div> Damage Capped = damageCapped()</div>\n              <div> Damage Inflicted = amageInflicted()</div>\n            </div>\n            <div className={\"container\"}\n              ><Defender \n                unit={defender} \n                updaters={[shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch]}\n              /></div>\n          </div>\n        </header>\n      </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}