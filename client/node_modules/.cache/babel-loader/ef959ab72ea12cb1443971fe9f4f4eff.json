{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/UnitSelector.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Unit, inlineStyle } from \"./Unit\"; // import { useSpring, animated } from 'react-spring'\n\nimport \"./UnitSelector.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      barracks: \"/barracks.png\",\n      factory: \"/factory.png\",\n      starport: \"/starport.png\"\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {}\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n};\n\nconst camel2str = str => {\n  // adding space between strings\n  const result = str.replace(/([A-Z])/g, ' $1'); // converting first character to uppercase and join it to the final string\n\n  const final = result.charAt(0).toUpperCase() + result.slice(1);\n  return final;\n};\n\nexport const RandomButton = ({\n  display,\n  randomize,\n  randomText\n}) => {\n  let button;\n\n  if (display) {\n    button = /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => randomize(),\n      children: randomText || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\uD83C\\uDFB2\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-button\",\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_c = RandomButton;\n\nconst ResetButton = ({\n  unit,\n  setUnit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-button\",\n    onClick: () => setUnit(null),\n    children: \"\\u21BB\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 8\n  }, this);\n};\n\n_c2 = ResetButton;\n\nconst ButtonGroup = ({\n  unit,\n  setUnit,\n  randomizeUnit,\n  display\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group\",\n    children: [/*#__PURE__*/_jsxDEV(RandomButton, {\n      display: display,\n      randomize: randomizeUnit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), unit ? /*#__PURE__*/_jsxDEV(ResetButton, {\n      setUnit: setUnit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = ButtonGroup;\n\nconst showUnits = (subUnits, currentUnit, setUnit) => {\n  const classes = [\"unit-selection\"];\n  console.log('currentUnit', currentUnit);\n  return subUnits.map((unit, index) => {\n    let tmpClasses = classes;\n\n    if ((currentUnit === null || currentUnit === void 0 ? void 0 : currentUnit.name) === unit.name) {\n      console.log('tmpClasses', unit.name, tmpClasses);\n      tmpClasses = [...classes, \"active-unit\"];\n    } else {\n      tmpClasses = classes;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setUnit(unit),\n      className: tmpClasses.join(\" \"),\n      style: inlineStyle(unit.img),\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: unit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  });\n};\n\nconst Production = ({\n  structure,\n  path,\n  units,\n  unit,\n  setUnit\n}) => {\n  _s();\n\n  const [hidden, setHidden] = React.useState(true);\n  const subUnits = units ? units.filter(unit => unit.structure === structure) : null;\n  let display = hidden ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"units-selector\",\n    children: showUnits(subUnits, unit, setUnit)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n  if (!units) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"production-facility\",\n      style: inlineStyle(path),\n      onClick: () => setHidden(!hidden),\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: camel2str(structure)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Production, \"AHukDmvlvAKpCWxJH/sCJAE9HAk=\");\n\n_c4 = Production;\n\nconst Faction = ({\n  data,\n  units,\n  unit,\n  setUnit\n}) => {\n  _s2();\n\n  const [hidden, setHidden] = React.useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setHidden(!hidden),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: { ...inlineStyle(data.icon),\n          height: \"150px\",\n          backgroundPosition: 'left'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), hidden ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(data.production).map(([structure, path]) => {\n        return /*#__PURE__*/_jsxDEV(Production, {\n          structure: structure,\n          path: path,\n          units: units,\n          unit: unit,\n          setUnit: setUnit\n        }, structure, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Faction, \"AHukDmvlvAKpCWxJH/sCJAE9HAk=\");\n\n_c5 = Faction;\n\nconst FactionFlipper = ({\n  showFactions\n}) => {\n  if (showFactions) {\n    return \"hide ⟰ units\";\n  } else {\n    return \"show ⟱ units\";\n  }\n};\n\n_c6 = FactionFlipper;\nexport const UnitSelector = props => {\n  _s3();\n\n  const [setUnit, currentUnit, units] = [props.setUnit, props.currentUnit, props.units];\n  const [tags, setTags] = React.useState([]);\n  const [showFactions, setShowFactions] = React.useState(false);\n  const [searchText, setSearchText] = React.useState(\"\");\n\n  const inputText = /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"unit-search\",\n    type: \"search\",\n    placeholder: \"...unit name\",\n    onChange: e => setSearchText(e.target.value),\n    value: searchText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 21\n  }, this);\n\n  const randomElement = arr => {\n    return arr[Math.floor(Math.random() * arr.length)];\n  };\n\n  const randomizeUnit = () => {\n    setUnit(randomElement(units));\n  };\n\n  const toggleTagging = type => {\n    if (tags.includes(type)) {\n      setTags(tags.filter(item => item !== type));\n    } else {\n      setTags([...tags, type]);\n    }\n  };\n\n  const Tag = ({\n    tag,\n    highlight\n  }) => {\n    const cns = [\"tagged-attribute\"];\n    cns.push(highlight && tags.includes(tag) ? \"used-tag\" : \"\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cns.join(\" \"),\n      onClick: () => toggleTagging(tag),\n      children: tag\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  };\n\n  const inputArea = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [inputText, \" \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        display: units,\n        unit: currentUnit,\n        setUnit: setUnit,\n        randomizeUnit: randomizeUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row search-by-tag\",\n      children: [tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n        tag: tag,\n        toggle: toggleTagging\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 24\n      }, this)), tags.length > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"clear-tags\",\n        onClick: () => setTags([]),\n        children: \"\\uD83D\\uDEAB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 26\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Unit, {\n        unit: currentUnit,\n        setUnit: setUnit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attributes\",\n          children: currentUnit === null || currentUnit === void 0 ? void 0 : currentUnit.types.map((tag, index) => {\n            return /*#__PURE__*/_jsxDEV(Tag, {\n              tag: tag,\n              toggle: toggleTagging,\n              highlight: true\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 21\n  }, this);\n\n  if (units) {\n    const reset = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button column\",\n      onClick: () => {\n        setTags([]);\n        setSearchText(\"\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Clear filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 101\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }, this);\n\n    if (searchText.length > 0 || tags.length > 0) {\n      let subUnits = units.filter(unit => {\n        let absent = false;\n        tags.forEach(tag => {\n          if (!unit.types.includes(tag)) {\n            absent = true;\n          }\n        });\n        return !absent;\n      }).filter(unit => unit.name.toLowerCase().includes(searchText.toLowerCase()));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: inputArea\n        }, void 0, false), showUnits(subUnits, currentUnit, setUnit).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: \"2em\"\n            },\n            children: \"Filtered Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 66\n          }, this), showUnits(subUnits, currentUnit, setUnit), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), reset]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [inputArea, /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setShowFactions(!showFactions),\n          className: \"selector\",\n          style: {\n            textAlign: \"center\",\n            fontSize: \"1.5em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FactionFlipper, {\n            showFactions: showFactions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 131\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), showFactions ? Object.entries(factions).map(([key, value]) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"faction\",\n            children: /*#__PURE__*/_jsxDEV(Faction, {\n              data: value,\n              label: key,\n              units: units,\n              unit: currentUnit,\n              setUnit: setUnit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this);\n        }) : null]\n      }, void 0, true);\n    }\n  } else {\n    console.log('units from selector', units);\n    return \"Loading\";\n  }\n};\n\n_s3(UnitSelector, \"y4/zQYBzbrTy8h/rSHJkiH9bVpE=\");\n\n_c7 = UnitSelector;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"RandomButton\");\n$RefreshReg$(_c2, \"ResetButton\");\n$RefreshReg$(_c3, \"ButtonGroup\");\n$RefreshReg$(_c4, \"Production\");\n$RefreshReg$(_c5, \"Faction\");\n$RefreshReg$(_c6, \"FactionFlipper\");\n$RefreshReg$(_c7, \"UnitSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/UnitSelector.js"],"names":["React","Unit","inlineStyle","factions","terran","icon","production","barracks","factory","starport","zerg","protoss","roboticsFacility","camel2str","str","result","replace","final","charAt","toUpperCase","slice","RandomButton","display","randomize","randomText","button","ResetButton","unit","setUnit","ButtonGroup","randomizeUnit","showUnits","subUnits","currentUnit","classes","console","log","map","index","tmpClasses","name","join","img","Production","structure","path","units","hidden","setHidden","useState","filter","Faction","data","height","backgroundPosition","Object","entries","FactionFlipper","showFactions","UnitSelector","props","tags","setTags","setShowFactions","searchText","setSearchText","inputText","e","target","value","randomElement","arr","Math","floor","random","length","toggleTagging","type","includes","item","Tag","tag","highlight","cns","push","inputArea","types","children","reset","absent","forEach","toLowerCase","fontSize","textAlign","key"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Unit, inlineStyle} from \"./Unit\"\n// import { useSpring, animated } from 'react-spring'\n\nimport \"./UnitSelector.css\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      barracks: \"/barracks.png\",\n      factory: \"/factory.png\",\n      starport: \"/starport.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {\n\n    }\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n}\nconst camel2str = (str) => {\n   // adding space between strings\n  const result = str.replace(/([A-Z])/g,' $1');\n\n  // converting first character to uppercase and join it to the final string\n  const final = result.charAt(0).toUpperCase()+result.slice(1);\n  return final\n}\n\nexport const RandomButton = ({display, randomize, randomText }) => {\n  let button;\n\n  if(display){\n    button = <span onClick={() => randomize()}>\n                {randomText || <>🎲</>}\n            </span>\n  } else {\n    button = <button>Loading...</button>\n  }\n\n  return <div className={\"random-button\"}>\n      {button}\n    </div>\n}\n\nconst ResetButton = ({unit, setUnit}) => {\nreturn <div className={\"reset-button\"} onClick={() => setUnit(null)}>\n        ↻\n      </div>\n}\n\nconst ButtonGroup = ({unit, setUnit, randomizeUnit, display}) => {\n  return <div className={\"button-group\"}> \n    <RandomButton display={display} randomize={randomizeUnit} /> \n    {unit ? <ResetButton setUnit={setUnit} /> : null}\n  </div>\n}\n\nconst showUnits = (subUnits, currentUnit, setUnit) => {\n  const classes = [\"unit-selection\"]\n\n  console.log('currentUnit', currentUnit)\n  return subUnits.map((unit,index) => {\n    let tmpClasses = classes\n    if( currentUnit?.name === unit.name){\n      console.log('tmpClasses',unit.name, tmpClasses)\n      \n      tmpClasses = [...classes, \"active-unit\"]\n    } else {\n      tmpClasses = classes\n    }\n\n    return <div key={index} \n                onClick={() => setUnit(unit)} \n                className={tmpClasses.join(\" \")} \n                style={inlineStyle(unit.img)}>\n      <header><h1>{unit.name}</h1></header>\n    </div>\n  })\n}\n\nconst Production = ({structure, path, units, unit, setUnit}) => {\n  const [hidden, setHidden] = React.useState(true)\n  const subUnits = units ? units.filter(unit => unit.structure === structure) : null;\n\n  let display = hidden? <></> :\n    <div className={\"units-selector\"}>{showUnits(subUnits, unit, setUnit)}</div>;\n\n  if(!units) return null;\n\n  return <div>\n      <div className={\"production-facility\"} style={inlineStyle(path)} onClick={() => setHidden(!hidden)}>\n        <header><h1>{camel2str(structure)}</h1></header>\n      </div>\n\n      <div>{display}</div>\n  </div>\n}\n\nconst Faction = ({data, units, unit, setUnit}) => {\n  const [hidden, setHidden] = React.useState(true);\n\n  return <div >\n    \n    <div onClick={() => setHidden(!hidden)}>\n      <div>{}</div>\n      <div style={{...inlineStyle(data.icon), height:\"150px\", \n  backgroundPosition: 'left',}} ></div>\n      </div>\n      {hidden ? null : \n      <div>\n        {\n          Object.entries(data.production).map(([structure, path]) => {\n            return <Production \n                      key={structure} \n                      structure={structure} \n                      path={path}\n                      units={units}\n                      unit={unit}\n                      setUnit={setUnit} />\n          })\n        }\n      </div>\n    }\n    </div>\n}\n\nconst FactionFlipper = ({ showFactions}) => {\n  if(showFactions) {\n    return \"hide ⟰ units\"\n  } else {  \n    return \"show ⟱ units\"\n  }\n}\n\nexport const UnitSelector = (props) => {\n  const [setUnit, currentUnit, units] = [props.setUnit, props.currentUnit, props.units]\n\n  const [tags, setTags] = React.useState([])\n  const [showFactions, setShowFactions] = React.useState(false)\n  const [searchText, setSearchText] = React.useState(\"\")\n  const inputText = <input className={\"unit-search\"} type={\"search\"} placeholder={\"...unit name\"} onChange={(e) => setSearchText(e.target.value)} value={searchText}/>\n\n\n  const randomElement = (arr) => {\n    return arr[Math.floor(Math.random()*arr.length)]\n  }\n  \n  const randomizeUnit = () => {\n    setUnit(randomElement(units))\n  }\n\n  const toggleTagging = (type) => {\n    if(tags.includes(type)){\n      setTags(tags.filter(item => item !== type))\n    } else {\n      setTags([...tags, type])\n    }\n  }\n\n  const Tag = ({tag, highlight}) => {\n    const cns = [\"tagged-attribute\"]\n    cns.push(highlight && tags.includes(tag) ? \"used-tag\" : \"\")\n    return <div className={cns.join(\" \")} key={tag} onClick={() => toggleTagging(tag)}>{tag}</div>;\n  }\n\n  const inputArea = <div>\n    <div className={\"input-area\"}>{inputText} <ButtonGroup display={units} unit={currentUnit} setUnit={setUnit} randomizeUnit={randomizeUnit}/></div>\n    <div className={\"row search-by-tag\"}>\n      {tags.map(tag => <Tag key={tag} tag={tag} toggle={toggleTagging} />)}\n      {tags.length > 0 ? <h1 className={\"clear-tags\"} onClick={() => setTags([])}>🚫</h1> : null}\n      </div>\n    <div>\n      <Unit unit={currentUnit} setUnit={setUnit}>\n         <div className={\"attributes\"}>\n            {currentUnit?.types.map((( tag, index ) => {\n                return <Tag key={tag} tag={tag} toggle={toggleTagging} highlight={true}/>\n              }))}\n            </div>\n      </Unit>\n      {props.children}\n    </div>\n  </div>\n\n  if(units){\n    const reset = <div className={\"button column\"} onClick={() => {setTags([]); setSearchText(\"\")}}><div> Clear filters</div></div>;\n\n    if(searchText.length > 0 || tags.length > 0){\n      let subUnits = units.filter(unit => {\n        let absent = false\n        tags.forEach(tag => {\n          if(!unit.types.includes(tag)){\n            absent = true;\n          }\n        })\n        return !absent\n      }).filter(unit => unit.name.toLowerCase().includes(searchText.toLowerCase()))\n      return <>\n      <>{inputArea}</>\n        \n        {showUnits(subUnits, currentUnit, setUnit).length >0 ? <><h1 style={{fontSize: \"2em\"}}>Filtered Results:</h1>{showUnits(subUnits, currentUnit, setUnit)} </>: <></>}\n        {reset}\n      </>\n    } else {\n      return <>\n        {inputArea}\n        <div onClick={() => setShowFactions(!showFactions)} className={\"selector\"} style={{textAlign:\"center\", fontSize:\"1.5em\"}}><FactionFlipper showFactions={showFactions}/></div>\n          {showFactions ? \n              Object.entries(factions).map( ([key, value]) => {\n              return (\n                <div key={key} className={\"faction\"}>\n                  <Faction data={value} label={key} units={units} unit={currentUnit} setUnit={setUnit}/>\n                </div>\n              );\n            }) : null\n          }\n      </>\n    }\n  } else {\n    console.log('units from selector', units)\n    return \"Loading\"\n  }\n  \n  \n  \n}"]},"metadata":{},"sourceType":"module"}