{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Middle.js\";\nimport { Upgrade } from \"./Upgrade\";\nimport { canAttackTargetDefender, Damage } from \"./Attacker/Damage\";\nimport { UnitImg } from './UnitSelector/Unit';\nimport { RandomButton } from \"./UnitSelector/UnitSelector\";\nimport \"./Middle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst animateValidAttacks = (cname, keep) => {\n  Array.from(document.getElementsByClassName(cname)).forEach(elem => {\n    if (keep) {\n      elem.classList.add(\"pulse\");\n    } else {\n      elem.classList.remove(\"pulse\");\n    }\n  });\n};\n\nconst DPS = ({\n  attacker,\n  defender,\n  aidx,\n  attackResearch,\n  shieldsResearch,\n  armorResearch,\n  setDefender,\n  setAttacker,\n  units\n}) => {\n  let d = new Damage(attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n  const active = (attacker === null || attacker === void 0 ? void 0 : attacker.attacks) ? canAttackTargetDefender(attacker.attacks[aidx], defender) : null;\n  const cns = [\"button\"];\n  let text;\n  let doubleReroll;\n\n  if (active) {\n    cns.push(\"active\");\n    animateValidAttacks(\"alt-weapon\", false);\n\n    if (d.oneShot()) {\n      text = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"1.5em\"\n          },\n          children: \"Damage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 69\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2694\\uFE0F \", d.oneShot().totalDamage, \" \\uD83D\\uDEE1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 115\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    } else {\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Victory (reset)\"\n      }, void 0, false);\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\");\n\n      if (attacker.attacks.map(attack => {\n        return canAttackTargetDefender(attack, defender);\n      }).filter(item => item).length > 0) {\n        text = /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"\",\n          children: \"\\u2B05 Select a valid attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 22\n        }, this);\n        animateValidAttacks(\"alt-weapon\", true);\n      } else {\n        cns.push(\"invalid\");\n        text = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [attacker.name, \" can't attack \", defender.name]\n        }, void 0, true);\n        doubleReroll = true;\n      }\n    } else {\n      cns.push(\"waiting\");\n      text = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !attacker ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attacker row\",\n            children: [/*#__PURE__*/_jsxDEV(RandomButton, {\n              display: units,\n              randomize: () => setAttacker(units[Math.floor(Math.random() * units.length)]),\n              randomText: \"🎲  ⬅ Attacker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 67\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 35\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !defender ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"defender row\",\n            children: [/*#__PURE__*/_jsxDEV(RandomButton, {\n              display: units,\n              position: setDefender,\n              randomize: () => setDefender(units[Math.floor(Math.random() * units.length)]),\n              randomText: \"Defender ➡ 🎲 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 66\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 34\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  const resetDefender = () => {\n    if (defender === null || defender === void 0 ? void 0 : defender.name) {\n      setDefender(units.find(unit => unit.name === defender.name));\n    }\n  };\n\n  const updateHealth = () => {\n    if (!attacker || !defender) return;\n    let newValues = d.oneShot();\n    console.log('newValues', newValues);\n    let newDefender = defender;\n    console.log('aidx', aidx);\n\n    if (newValues && aidx !== undefined && aidx !== null) {\n      console.log('staritng for loop'); // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n      // console.log('looping', i)\n\n      if (newValues.health > 0 || true) {\n        console.log(\"updatinghealth\");\n        let newValues = d.oneShot();\n\n        if (newValues) {\n          newDefender = { ...newDefender,\n            base: { ...newDefender.base,\n              health: newValues.health,\n              shields: newValues.shields\n            }\n          };\n        }\n\n        console.log('newDefender', newDefender);\n        d = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(newDefender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n      } else {\n        console.log(\">>>>>failed health chi\");\n      } //  }\n\n\n      setDefender(newDefender);\n    } else {\n      resetDefender();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DPS\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cns.join(\" \"),\n        onClick: () => updateHealth(),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), doubleReroll ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"defender\",\n        children: /*#__PURE__*/_jsxDEV(RandomButton, {\n          display: units,\n          position: setDefender,\n          randomize: () => {\n            setDefender(units[Math.floor(Math.random() * units.length)]);\n            setAttacker(units[Math.floor(Math.random() * units.length)]);\n          },\n          randomText: \"Reroll 🎲 Units\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n\n_c = DPS;\n\nconst Vitality = ({\n  defender,\n  units,\n  setDefender\n}) => {\n  var _units$find, _units$find2;\n\n  const baseShields = units === null || units === void 0 ? void 0 : (_units$find = units.find(unit => (defender === null || defender === void 0 ? void 0 : defender.name) === unit.name)) === null || _units$find === void 0 ? void 0 : _units$find.base.shields;\n  const baseHealth = units === null || units === void 0 ? void 0 : (_units$find2 = units.find(unit => (defender === null || defender === void 0 ? void 0 : defender.name) === unit.name)) === null || _units$find2 === void 0 ? void 0 : _units$find2.base.health;\n  const health = (defender === null || defender === void 0 ? void 0 : defender.base.health) / baseHealth;\n  const healthColor = health > 6 / 7 ? \"green\" : health > 4 / 7 ? \"yellow\" : health > 2 / 7 ? \"orange\" : \"red\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"  \", defender ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vitality\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: defender,\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vitality-stats\",\n              children: [baseShields ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"shields\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [defender.base.shields, \" / \", baseShields, /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: \"\\uD83E\\uDDCA\"\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"health\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: healthColor\n                    },\n                    children: [defender.base.health, \" / \", baseHealth, \" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: \"\\u2665\\uFE0F\"\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 20\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: defender.base.health !== baseHealth || defender.base.shields !== baseShields ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => setDefender(units === null || units === void 0 ? void 0 : units.find(unit => (defender === null || defender === void 0 ? void 0 : defender.name) === unit.name)),\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 15\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true);\n};\n\n_c2 = Vitality;\nexport const Middle = ({\n  attacker,\n  defender,\n  aidx,\n  research,\n  setDefender,\n  setAttacker,\n  units\n}) => {\n  if (!research || !units) {\n    return units ? \"no rsearch\" : \"or no units\";\n  } else {\n    var _attacker$attacks;\n\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research;\n    let d = attacker && defender ? new Damage(attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]) : null;\n    const targetable = (attacker === null || attacker === void 0 ? void 0 : (_attacker$attacks = attacker.attacks) === null || _attacker$attacks === void 0 ? void 0 : _attacker$attacks.filter(attack => canAttackTargetDefender(attack, defender)).length) > 0;\n    const attackerDamage = d ? targetable && !d.damageDealt() ? \"⬅\" : targetable && d.damageDealt() ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attacker-damage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: d.damageDealt()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u2694\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this) : defender ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fail\",\n      children: \"\\uD83E\\uDD4A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"\\u2192\"\n    }, void 0, false) : \"\";\n\n    const unitStats = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: attacker ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: attacker,\n            label: attackerDamage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 28\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: attacker ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"attack\",\n            updateResearch: setAttackResearch,\n            value: attackResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 30\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (defender === null || defender === void 0 ? void 0 : defender.base.shields) ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"shields\",\n            updateResearch: setShieldsResearch,\n            value: shieldsResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 40\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (defender === null || defender === void 0 ? void 0 : defender.base.shields) ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: defender,\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attacker-damage\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: shieldsResearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 110\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\uD83E\\uDDCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 138\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 43\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: defender ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"armor\",\n            updateResearch: setArmorResearch,\n            value: armorResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: defender ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: defender,\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attacker-damage\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: defender.base.armor + armorResearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 95\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\uD83D\\uDEE1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 141\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 28\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n\n    const backup = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(defender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DPS, {\n          attacker: attacker,\n          defender: defender,\n          aidx: aidx,\n          attackResearch: attackResearch,\n          armorResearch: armorResearch,\n          shieldsResearch: shieldsResearch,\n          setDefender: setDefender,\n          setAttacker: setAttacker,\n          units: units\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Vitality, {\n          defender: defender,\n          setDefender: setDefender,\n          units: units\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), canAttackTargetDefender(attacker.attacks[aidx], defender) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Eliminates in \", backup.eliminate(), \" attack\", backup.eliminate() === 1 ? \"\" : \"s\", \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 70\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [attacker || defender ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unit Upgrades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            opacity: .2\n          },\n          children: \"Unit Upgrades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 59\n        }, this), unitStats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 12\n    }, this);\n  } // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n  // return(\n  //   );\n\n};\n_c3 = Middle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DPS\");\n$RefreshReg$(_c2, \"Vitality\");\n$RefreshReg$(_c3, \"Middle\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Middle.js"],"names":["Upgrade","canAttackTargetDefender","Damage","UnitImg","RandomButton","animateValidAttacks","cname","keep","Array","from","document","getElementsByClassName","forEach","elem","classList","add","remove","DPS","attacker","defender","aidx","attackResearch","shieldsResearch","armorResearch","setDefender","setAttacker","units","d","active","attacks","cns","text","doubleReroll","push","oneShot","display","flexDirection","fontSize","totalDamage","map","attack","filter","item","length","name","Math","floor","random","resetDefender","find","unit","updateHealth","newValues","console","log","newDefender","undefined","health","base","shields","JSON","parse","stringify","join","Vitality","baseShields","baseHealth","healthColor","color","textAlign","Middle","research","setAttackResearch","setShieldsResearch","setArmorResearch","targetable","attackerDamage","damageDealt","unitStats","armor","backup","eliminate","opacity"],"mappings":"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","sourcesContent":["import {Upgrade} from \"./Upgrade\"\nimport {canAttackTargetDefender, Damage} from \"./Attacker/Damage\"\nimport { UnitImg } from './UnitSelector/Unit'\nimport {RandomButton} from \"./UnitSelector/UnitSelector\"\nimport \"./Middle.css\"\n\nconst animateValidAttacks = (cname, keep) => {\n  Array.from(document.getElementsByClassName(cname)).forEach(elem => {\n    if(keep){\n      elem.classList.add(\"pulse\") \n    } else{\n      elem.classList.remove(\"pulse\") \n    }\n  })\n}\n\nconst DPS = ({attacker, defender, aidx,  attackResearch, shieldsResearch, armorResearch, setDefender, setAttacker, units}) => {\n  let d = new Damage(attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n  const active = attacker?.attacks? canAttackTargetDefender(attacker.attacks[aidx], defender) : null;\n  const cns = [\"button\"];\n\n  let text\n  let doubleReroll\n  if(active){\n    cns.push(\"active\")\n    animateValidAttacks(\"alt-weapon\", false)\n    if(d.oneShot()){\n      text = <div style={{display: \"flex\", flexDirection:\"column\"}}><div style={{fontSize:\"1.5em\"}}>Damage:</div> <div>⚔️ {d.oneShot().totalDamage} 🛡</div></div>\n    } else {\n      text = <>Victory (reset)</>\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\")\n      if(attacker.attacks.map(attack => {\n              return canAttackTargetDefender(attack, defender)\n            }).filter(item => item).length > 0){\n              text = <span className={\"\"}>⬅ Select a valid attack</span>\n              animateValidAttacks(\"alt-weapon\", true)\n            }\n      else{\n        cns.push(\"invalid\")\n        text = <>{attacker.name} can't attack {defender.name}</>\n        doubleReroll=true\n      }\n\n    } else {\n      cns.push(\"waiting\")\n      text= <div>\n                 <div>Select: </div>\n                <div>{!attacker ? <div className={\"attacker row\"}><RandomButton display={units} randomize={() => setAttacker(units[Math.floor(Math.random()*units.length)])} randomText={\"🎲  ⬅ Attacker\"}/>  </div>: null}</div>\n                <div>{!defender? <div className={\"defender row\"}><RandomButton display={units} position={setDefender} randomize={() => setDefender(units[Math.floor(Math.random()*units.length)])} randomText={\"Defender ➡ 🎲 \"} /> </div>: null}</div>        \n              </div>\n    }\n  }\n\n  const resetDefender = () => {\n    if(defender?.name) {\n     setDefender(units.find(unit => unit.name === defender.name))\n     }\n  }\n\n  const updateHealth = () => {\n    if(!attacker || !defender) return;\n    let newValues = d.oneShot();\n    console.log('newValues', newValues)\n    let newDefender = defender;\n    console.log('aidx', aidx)\n    if(newValues && aidx !== undefined && aidx !== null){\n      console.log('staritng for loop')\n      // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n        // console.log('looping', i)\n        if(newValues.health > 0 || true){\n        console.log(\"updatinghealth\")\n          let newValues = d.oneShot();\n          if(newValues){\n            newDefender = {\n              ...newDefender,\n              base: {\n                ...newDefender.base,\n                health: newValues.health,\n                shields: newValues.shields,\n              }\n            }\n            }\n            console.log('newDefender', newDefender)\n          d = new Damage(JSON.parse(JSON.stringify(attacker)),\n          JSON.parse(JSON.stringify(newDefender)), aidx,\n          [ attackResearch, shieldsResearch, armorResearch]\n            )\n            } else {\n              console.log(\">>>>>failed health chi\")\n            }\n    //  }\n     setDefender(newDefender)\n    } else {\n      resetDefender()\n    }\n  }\n\n  return <div className={\"DPS\"}>\n            <div><span className={cns.join(\" \")} onClick={() => updateHealth()}>{text}</span></div>\n            {doubleReroll ? <>\n              <div className={\"defender\"}><RandomButton display={units} position={setDefender} randomize={() => {setDefender(units[Math.floor(Math.random()*units.length)]); setAttacker(units[Math.floor(Math.random()*units.length)])}} randomText={\"Reroll 🎲 Units\"}/></div>\n            </> : null}\n        </div>\n}\n\nconst Vitality = ({defender, units, setDefender}) => {\n  const baseShields = units?.find(unit => defender?.name === unit.name)?.base.shields\n  const baseHealth = units?.find(unit => defender?.name === unit.name)?.base.health\n\n  const health = defender?.base.health/baseHealth\n  const healthColor = health > 6/7 ? \"green\" :\n                        health > 4/7 ? \"yellow\":\n                          health > 2/7 ? \"orange\":\n                                            \"red\";\n\n\n  return<>  {defender?\n    <>\n      <div className={\"vitality\"}>\n        \n        <div className={\"avatar\"}>\n          <UnitImg unit={defender} label={<div className={\"vitality-stats\"}>\n          {baseShields ? <>\n            <div className={\"shields\"}>\n              \n              <div>{defender.base.shields} / {baseShields}<>🧊</></div>\n            </div>\n            \n            </>: null}\n            <div className={\"health\"}>\n              <div><span style={{color: healthColor}}>{defender.base.health} / {baseHealth} <>♥️</></span></div>\n            </div>\n            <div style={{ textAlign:\"right\"}}>\n          { (defender.base.health !== baseHealth || defender.base.shields !== baseShields) ? \n              <span onClick={() => setDefender(units?.find(unit => defender?.name === unit.name))}>Reset</span> : null}\n              </div>\n        </div>}/>\n        </div>\n      </div>\n    </>: null}</>\n\n}\n\nexport const Middle = ({attacker, defender, aidx, research, setDefender, setAttacker, units}) => {\n\n  if(!research || !units){\n    return units ?  \"no rsearch\":  \"or no units\";\n  } else {\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research\n    let d = attacker && defender ?\n              new Damage(attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch]) :\n              null;\n\n    const targetable = attacker?.attacks?.filter(attack => canAttackTargetDefender(attack, defender)).length > 0\n\n    const attackerDamage = d ? (targetable && !d.damageDealt())?  \"⬅\":\n      (targetable && d.damageDealt()) ? \n      <div className={\"attacker-damage\"}><div>{d.damageDealt() }</div><div>⚔️</div></div>:\n          defender ?\n            <span className={\"fail\"}>🥊</span>:\n            <>→</>:\n                              \"\";\n\n\n    const unitStats = <>\n      <div className={\"unit-stats\"}>\n          <div>{attacker ? <UnitImg unit={attacker} label={(attackerDamage)} /> : null}</div>\n            <div>{attacker ? <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} /> : null }</div>\n          <div></div>\n\n          <div></div>\n          <div>\n            {defender?.base.shields ?  <Upgrade researchKind={\"shields\"} updateResearch={setShieldsResearch} value={shieldsResearch} /> :null }\n          </div>\n          <div>{defender?.base.shields ?  <UnitImg unit={defender} label={<div className={\"attacker-damage\"}><div>{shieldsResearch}</div><div>🧊</div></div>} />: null}</div>\n\n          <div></div>\n            <div>{defender? <Upgrade researchKind={\"armor\"} updateResearch={setArmorResearch} value={armorResearch} /> : null }</div>\n          <div>{defender ? <UnitImg unit={defender} label={<div className={\"attacker-damage\"}><div>{defender.base.armor+armorResearch}</div><div>🛡</div></div>}/>: null}</div>\n        </div> \n      </>\n    const backup = new Damage(JSON.parse(JSON.stringify(attacker)),\n    JSON.parse(JSON.stringify(defender)), aidx,\n    [ attackResearch, shieldsResearch, armorResearch]\n    )\n              \n    return <div className={\"middle\"}>\n      <div>\n        <DPS attacker={attacker} defender={defender} aidx={aidx}\n            attackResearch={attackResearch} armorResearch={armorResearch} shieldsResearch={shieldsResearch}\n            setDefender={setDefender} setAttacker={setAttacker} units={units}/>\n\n        <Vitality defender={defender} setDefender={setDefender} units={units}/>\n        {canAttackTargetDefender(attacker.attacks[aidx], defender) ? <div>Eliminates in {backup.eliminate()} attack{backup.eliminate() === 1 ? \"\" : \"s\"}.</div> : null}\n        \n      </div>\n\n\n      <div>\n        {attacker || defender ? <h2>Unit Upgrades</h2> :  <h2 style={{opacity: .2}}>Unit Upgrades</h2>  }\n        {unitStats}\n        </div>\n\n      \n      </div>\n\n  }\n\n  // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n\n  // return(\n\n  //   );\n}"]},"metadata":{},"sourceType":"module"}