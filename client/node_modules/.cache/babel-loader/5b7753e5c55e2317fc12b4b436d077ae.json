{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Attacker/Attacker.js\";\nimport React from 'react';\nimport { UnitSelector } from '../UnitSelector/UnitSelector';\nimport { groundAirTargetingValidation, canAttackTargetDefender } from \"./Damage\";\nimport \"./Attacker.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bonus = ({\n  attack,\n  defender,\n  textstyle\n}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let baseText = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Anti-\", bonus.to, \":\"]\n    }, void 0, true);\n\n    let bonusText = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [bonus.baseDamage, \" (+\", bonus.researchBonus, \")\"]\n    }, void 0, true);\n\n    let modifier;\n\n    if (!defender) {\n      modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n        children: bonusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this);\n    } else {\n      // const overlap = false;//groundAirTargetingValidation(attack, defender);\n      // if (overlap.length === 0){\n      //   modifier = <span> {bonusText} </span>\n      // }else{\n      if (defender.types.includes(bonus.to)) {\n        modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [bonusText, \" \\uD83C\\uDFAF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 22\n        }, this);\n      } else {\n        modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: \"wavy line-through red\"\n          },\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      } // }\n\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [baseText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: textstyle,\n        children: modifier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c = Bonus;\n\nconst Bullet = ({\n  animate,\n  display\n}) => {\n  if (display) {\n    if (animate) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bullet\",\n        children: \"\\u27A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u27A1\"\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = Bullet;\n\nconst Attacks = ({\n  unit,\n  defender,\n  defaultIndex,\n  setDefaultIndex\n}) => {\n  var _unit$attacks, _unit$attacks2;\n\n  const toggleIndex = index => {\n    if (!index) return;\n\n    if (index === defaultIndex) {\n      setDefaultIndex(null);\n    } else {\n      setDefaultIndex(index);\n    }\n  };\n\n  const attackMap = unit === null || unit === void 0 ? void 0 : (_unit$attacks = unit.attacks) === null || _unit$attacks === void 0 ? void 0 : _unit$attacks.map((attack, index) => {\n    const cns = [];\n    cns.push(index === defaultIndex ? \"main-weapon\" : \"other-choice\");\n    const available = canAttackTargetDefender(attack, defender);\n    cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n    const cn = available ? \"success\" : \"fail\";\n    const attacks = [\"attack-name\"];\n    attacks.push(available ? \"alt-weapon\" : \"unavailable\");\n    attacks.push(available && defaultIndex === null ? \"pulse\" : \"\");\n    console.log('attacks', attacks);\n    console.log('defaultIndex', defaultIndex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleIndex(index),\n      className: cns.join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: attacks.join(\" \"),\n          children: [/*#__PURE__*/_jsxDEV(Bullet, {\n            animate: available && defaultIndex === null,\n            display: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), attack.name, \" \", attack.repeats > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"(x \", attack.repeats, \")\"]\n          }, void 0, true) : null, index === defaultIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Base Damage: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: cn,\n                children: [attack.baseDamage, \" (+\", attack.researchBonus, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Bonus, {\n              attack: attack,\n              defender: defender,\n              textstyle: cn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attacks\",\n    children: [(unit === null || unit === void 0 ? void 0 : (_unit$attacks2 = unit.attacks) === null || _unit$attacks2 === void 0 ? void 0 : _unit$attacks2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attacks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this) : null, attackMap]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Attacks;\nexport const Attacker = ({\n  unit,\n  defender,\n  setUnit,\n  attackIndex,\n  setAttackIndex,\n  units\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UnitSelector, {\n      setUnit: setUnit,\n      currentUnit: unit,\n      units: units,\n      children: /*#__PURE__*/_jsxDEV(Attacks, {\n        unit: unit,\n        defaultIndex: attackIndex,\n        setDefaultIndex: setAttackIndex,\n        defender: defender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_c4 = Attacker;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Bonus\");\n$RefreshReg$(_c2, \"Bullet\");\n$RefreshReg$(_c3, \"Attacks\");\n$RefreshReg$(_c4, \"Attacker\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Attacker/Attacker.js"],"names":["React","UnitSelector","groundAirTargetingValidation","canAttackTargetDefender","Bonus","attack","defender","textstyle","bonuses","map","bonus","index","baseText","to","bonusText","baseDamage","researchBonus","modifier","types","includes","textDecoration","Bullet","animate","display","Attacks","unit","defaultIndex","setDefaultIndex","toggleIndex","attackMap","attacks","cns","push","available","cn","console","log","join","name","repeats","length","Attacker","setUnit","attackIndex","setAttackIndex","units"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { UnitSelector } from '../UnitSelector/UnitSelector'\nimport {groundAirTargetingValidation, canAttackTargetDefender} from \"./Damage\"\nimport \"./Attacker.css\"\n\nconst Bonus = ({attack, defender, textstyle}) => {\n\n  return attack.bonuses.map((bonus, index) => {\n    let baseText = <>Anti-{bonus.to}:</>\n    let bonusText = <>{bonus.baseDamage} (+{bonus.researchBonus})</>;\n    let modifier;\n    \n    if(!defender){\n      modifier = <span>{bonusText}</span>\n    } else {\n      // const overlap = false;//groundAirTargetingValidation(attack, defender);\n      // if (overlap.length === 0){\n      //   modifier = <span> {bonusText} </span>\n      // }else{\n        if (defender.types.includes(bonus.to) ){\n          modifier=  <span>{bonusText} 🎯</span>\n        } else {\n          modifier= <span style={{textDecoration: \"wavy line-through red\"}}>{ bonusText}</span>\n        }\n      // }\n    }\n\n    return <div key={index}>\n      {baseText}\n      <span className={textstyle}>\n      {modifier}\n      </span>\n    </div>\n  })  \n}\n\nconst Bullet = ({animate, display}) => {\n  if(display){\n    if (animate){\n      return <span className={\"bullet\"}>➡</span>\n    } else {\n      return <>➡</>\n    }\n  } else {\n    return <></>\n  }\n}\n\nconst Attacks = ({unit, defender, defaultIndex, setDefaultIndex}) => {\n  const toggleIndex = (index) => {\n      if(!index) return; \n      if(index === defaultIndex){\n        setDefaultIndex(null)\n      } else {\n        setDefaultIndex(index)\n      }\n    }\n  const attackMap = unit?.attacks?.map((attack, index) => {\n    const cns = []\n    cns.push(index === defaultIndex ? \"main-weapon\" : \"other-choice\");\n    const available = canAttackTargetDefender(attack, defender);\n    cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n    const cn = available ? \"success\" : \"fail\";\n\n    const attacks = [\"attack-name\"]\n    attacks.push(available? \"alt-weapon\": \"unavailable\")\n    attacks.push(available && (defaultIndex === null) ? \"pulse\": \"\")\n    console.log('attacks', attacks)\n    console.log('defaultIndex', defaultIndex)\n\n    return <div key={index} onClick={() => toggleIndex(index)} className={cns.join(\" \")}>\n      <>\n        <div className={attacks.join(\" \")} >\n          <Bullet animate={available && (defaultIndex === null)} display={(true)}/>\n              {attack.name} {attack.repeats > 1 ? <>(x {attack.repeats})</>: null}\n        {index === defaultIndex ?\n          <div>\n            <>Base Damage: <span className={cn}>{attack.baseDamage} (+{attack.researchBonus})</span></>\n            <Bonus attack={attack} defender={defender} textstyle={cn}/>\n          </div>\n          : null\n          }\n          </div>\n      </>\n    </div>\n  })\n\n  return <div className={\"attacks\"}>\n    {unit?.attacks?.length > 0 ?\n      <h1>Attacks</h1> : null}\n\n      {attackMap}\n  </div>\n}\n\nexport const Attacker = ({unit, defender, setUnit, attackIndex, setAttackIndex, units}) => {\n\n  return <>\n  <UnitSelector setUnit={setUnit} currentUnit={unit} units={units}> \n      <Attacks unit={unit} defaultIndex={attackIndex} setDefaultIndex={setAttackIndex} defender={defender} />\n  </UnitSelector>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}