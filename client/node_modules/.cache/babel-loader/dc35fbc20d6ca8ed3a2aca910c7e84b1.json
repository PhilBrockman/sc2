{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/Attacker.js\";\nimport React from 'react';\nimport { Unit } from \"./Unit\";\nimport { Upgrade } from \"./Upgrade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bonus = ({\n  attack,\n  defender,\n  style\n}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let bonusText = ` +${bonus.baseDamage} + (${bonus.researchBonus})`;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Anti-\", bonus.to, \":\", defender.types.includes(bonus.to) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"damage\",\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: \"wavy line-through red\"\n          },\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  });\n};\n\n_c = Bonus;\n\nconst Bullet = ({\n  animate,\n  display\n}) => {\n  if (display) {\n    if (animate) {\n      let style = {\n        backgroundColor: \"red\",\n        transition: \"all .5s ease\",\n        WebkitTransition: \"all .5s ease\",\n        MozTransition: \"all .5s ease\"\n      };\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bullet\",\n        style: style,\n        children: \"\\u27A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u27A1\"\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = Bullet;\n\nconst Attacks = ({\n  unit,\n  defender,\n  defaultIndex,\n  setDefaultIndex\n}) => {\n  const toggleIndex = index => {\n    if (index === defaultIndex) {\n      setDefaultIndex(null);\n    } else {\n      setDefaultIndex(index);\n    }\n  };\n\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main-weapon\" : \"alt-weapon\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleIndex(index),\n      className: style,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attack-name\",\n          children: [/*#__PURE__*/_jsxDEV(Bullet, {\n            animate: defaultIndex === null,\n            display: defaultIndex !== index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 40\n          }, this), attack.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), index === defaultIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Base Damage: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"damage\",\n              children: [attack.baseDamage, \" + (\", attack.researchBonus, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Bonus, {\n            attack: attack,\n            defender: defender,\n            style: style\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c3 = Attacks;\nexport const Attacker = ({\n  unit,\n  defender,\n  research,\n  attackChoice,\n  damage\n}) => {\n  const [attack, setAttack] = attackChoice;\n  const [attackResearch, setAttackResearch] = research;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Unit, {\n        type: unit,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u2694\\uFE0F \", damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Attacks, {\n        unit: unit,\n        defaultIndex: attack,\n        setDefaultIndex: setAttack,\n        defender: defender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upgrades\",\n      children: /*#__PURE__*/_jsxDEV(Upgrade, {\n        researchKind: \"attack\",\n        updateResearch: setAttackResearch,\n        value: attackResearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_c4 = Attacker;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Bonus\");\n$RefreshReg$(_c2, \"Bullet\");\n$RefreshReg$(_c3, \"Attacks\");\n$RefreshReg$(_c4, \"Attacker\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/Attacker.js"],"names":["React","Unit","Upgrade","Bonus","attack","defender","style","bonuses","map","bonus","index","bonusText","baseDamage","researchBonus","to","types","includes","textDecoration","Bullet","animate","display","backgroundColor","transition","WebkitTransition","MozTransition","Attacks","unit","defaultIndex","setDefaultIndex","toggleIndex","attacks","name","Attacker","research","attackChoice","damage","setAttack","attackResearch","setAttackResearch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Unit} from \"./Unit\"\nimport {Upgrade} from \"./Upgrade\"\n\nconst Bonus = ({attack, defender, style}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let bonusText = ` +${bonus.baseDamage} + (${bonus.researchBonus})`;\n\n    return <>\n      <div key={index}>\n        Anti-{bonus.to}: \n        {defender.types.includes(bonus.to) ?\n        <span className={\"damage\"}>\n          {bonusText}\n        </span>: \n        <span style={{textDecoration: \"wavy line-through red\"}}>{ bonusText}</span>\n        }\n      </div>\n    </>;\n  })\n}\n\nconst Bullet = ({animate, display}) => {\n  if(display){\n    if (animate){\n      let style={\n        backgroundColor: \"red\" ,\n        transition: \"all .5s ease\",\n        WebkitTransition: \"all .5s ease\",\n        MozTransition: \"all .5s ease\"\n      }\n\n      return <span className={\"bullet\"} style={style}>➡</span>\n    } else {\n      return <>➡</>\n    }\n  } else {\n    return <></>\n  }\n}\n\nconst Attacks = ({unit, defender, defaultIndex, setDefaultIndex}) => {\n  const toggleIndex = (index) => {\n    if(index === defaultIndex){\n      setDefaultIndex(null)\n    } else {\n      setDefaultIndex(index)\n    }\n    \n  }\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main-weapon\" : \"alt-weapon\";\n    return <div key={index} onClick={() => toggleIndex(index)} className={style}>\n      <>\n        <div className={\"attack-name\"}><Bullet animate={defaultIndex === null} display={defaultIndex !== index}/>{attack.name}</div>\n        {index === defaultIndex ?\n          <div>\n            <>Base Damage: <span className={\"damage\"}>{attack.baseDamage} + ({attack.researchBonus})</span></>\n            <Bonus attack={attack} defender={defender} style={style}/>\n          </div>\n          : null\n          }\n      </>\n    </div>\n  })\n}\n\n\nexport const Attacker = ({unit, defender, research, attackChoice, damage}) => {\n  const [attack, setAttack] = attackChoice;\n  const [attackResearch, setAttackResearch] = research;\n\n\n\n  return <div className={\"unit\"}>\n    <div>\n      <Unit type={unit}>\n        <h1>⚔️ {damage}</h1>\n      </Unit>\n      <Attacks unit={unit} defaultIndex={attack} setDefaultIndex={setAttack} defender={defender}/>\n    </div>\n    <div className={\"upgrades\"}>\n      <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} />\n    </div>\n  </div>\n}"]},"metadata":{},"sourceType":"module"}