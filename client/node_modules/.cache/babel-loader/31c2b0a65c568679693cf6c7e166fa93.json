{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/UnitSelector.js\";\nimport React from \"react\";\nimport { units } from \"../SC2Data\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\"\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {}\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n};\nexport const UnitSelector = ({\n  setUnit\n}) => {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const Production = ({\n    structure,\n    path\n  }) => {\n    _s();\n\n    const [hidden, setHidden] = React.useState(false);\n    const subUnits = units.filter(unit => unit.structure === structure);\n    let display;\n\n    if (hidden) {\n      display = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"units-selector\",\n        children: subUnits.map((unit, index) => {\n          let Background = unit.img;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setUnit(unit),\n            style: {\n              backgroundImage: `url(${Background})`\n            },\n            children: unit.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: path,\n        onClick: () => setHidden(!hidden)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), display]\n    }, void 0, true);\n  };\n\n  _s(Production, \"kQt600tPsTduHMlWvIDJn56wzAI=\");\n\n  const Faction = ({\n    data\n  }) => {\n    _s2();\n\n    const [hidden, setHidden] = React.useState(false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.icon,\n        onClick: () => setHidden(!hidden)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), hidden ? \"\" : Object.entries(data.production).map(([structure, path]) => {\n        return /*#__PURE__*/_jsxDEV(Production, {\n          structure: structure,\n          path: path\n        }, structure, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true);\n  };\n\n  _s2(Faction, \"kQt600tPsTduHMlWvIDJn56wzAI=\");\n\n  return Object.entries(factions).map(([key, value]) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faction\",\n      children: /*#__PURE__*/_jsxDEV(Faction, {\n        data: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  });\n};\n_c = UnitSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/UnitSelector.js"],"names":["React","units","factions","terran","icon","production","factory","barracks","zerg","protoss","roboticsFacility","UnitSelector","setUnit","Production","structure","path","hidden","setHidden","useState","subUnits","filter","unit","display","map","index","Background","img","backgroundImage","name","Faction","data","Object","entries","key","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {units} from \"../SC2Data\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {\n\n    }\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n}\n\nexport const UnitSelector = ({setUnit}) => {\n  const Production = ({structure, path}) => {\n    const [hidden, setHidden] = React.useState(false)\n    const subUnits = units.filter(unit => unit.structure === structure)\n    let display;\n\n    if(hidden){\n      display = <></>\n    } else {\n      display = <div className={\"units-selector\"}>\n      {subUnits.map((unit,index) => {\n        let Background = unit.img;\n        return <div key={index} onClick={() => setUnit(unit)} style={{backgroundImage: `url(${Background})`}}>\n          {unit.name}\n\n        </div>\n      })}\n      </div>\n    }\n\n    return <>\n    <img src={path} onClick={() => setHidden(!hidden)}></img>\n    {display}\n    </>\n  }\n\n  const Faction = ({data}) => {\n    const [hidden, setHidden] = React.useState(false)\n\n    return <>\n      <img src={data.icon} onClick={() => setHidden(!hidden)}></img>\n        {hidden ? \"\" : \n        Object.entries(data.production).map(([structure, path]) => {\n          return (\n            <Production key={structure} structure={structure} path={path} />\n          );\n        })\n      }\n      </>\n  }\n\n  return Object.entries(factions).map( ([key, value]) => {\n    return (\n      <div key={key} className={\"faction\"}>\n        <Faction data={value} />\n      </div>\n    );\n  })\n  \n  \n}"]},"metadata":{},"sourceType":"module"}