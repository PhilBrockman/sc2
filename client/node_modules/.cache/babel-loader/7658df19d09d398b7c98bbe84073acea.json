{"ast":null,"code":"import e from \"axios\";\nimport t from \"js-cookie\";\n\nfunction n(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst {\n  apiUrl: r,\n  privateIPRegex: o\n} = {\n  apiUrl: \"https://api.userfront.com/v0/\",\n  privateIPRegex: /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g\n};\nlet i = [];\n\nconst a = e => {\n  try {\n    const t = e || window.location.hostname;\n    return !(!t.match(/localhost/g) && !t.match(o));\n  } catch (e) {\n    return !0;\n  }\n},\n      s = {\n  mode: a() ? \"test\" : \"live\"\n};\n\nfunction c(e) {\n  if (window.location.href && !(window.location.href.indexOf(e + \"=\") < 0)) return decodeURIComponent(window.location.href.split(e + \"=\")[1].split(\"&\")[0]);\n}\n\nfunction u(e) {\n  if (!e) throw new Error(\"Missing provider\");\n  if (!s.tenantId) throw new Error(\"Missing tenant ID\");\n  return `https://api.userfront.com/v0/auth/${e}/login?tenant_id=${s.tenantId}&origin=${window.location.origin}&pathname=${window.location.pathname}`;\n}\n\nfunction d(e) {\n  if (!e) return;\n  const t = document.createElement(\"a\");\n  t.href = e, t.pathname !== window.location.pathname && (window.location.href = `${t.pathname}${t.hash}${t.search}`);\n}\n\nfunction h(e, n, r) {\n  const o = `${r}.${s.tenantId}`;\n  n = n || {\n    secure: \"live\" === s.mode,\n    sameSite: \"Lax\"\n  }, \"refresh\" === r && (n.sameSite = \"Strict\"), t.set(o, e, n);\n}\n\nfunction m(e) {\n  t.remove(e), t.remove(e, {\n    secure: !0,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !0,\n    sameSite: \"None\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"None\"\n  });\n}\n\nfunction l() {\n  m(s.accessTokenName), m(s.idTokenName), m(s.refreshTokenName), s.accessToken = void 0, s.idToken = void 0, s.refreshToken = void 0;\n}\n\nfunction f() {\n  s.accessToken = t.get(s.accessTokenName), s.idToken = t.get(s.idTokenName), s.refreshToken = t.get(s.refreshTokenName);\n}\n\nfunction w(e) {\n  h(e.access.value, e.access.cookieOptions, \"access\"), h(e.id.value, e.id.cookieOptions, \"id\"), h(e.refresh.value, e.refresh.cookieOptions, \"refresh\"), f();\n}\n\nlet p = !1;\nvar v = {\n  addInitCallback: function (e) {\n    e && \"function\" == typeof e && i.push(e);\n  },\n  accessToken: function () {\n    return s.accessToken = t.get(s.accessTokenName), s.accessToken;\n  },\n  getQueryAttr: c,\n  idToken: function () {\n    return s.idToken = t.get(s.idTokenName), s.idToken;\n  },\n  init: function (e) {\n    if (!e) return console.warn(\"Userfront initialized without tenant ID\");\n    s.tenantId = e, s.accessTokenName = \"access.\" + e, s.idTokenName = \"id.\" + e, s.refreshTokenName = \"refresh.\" + e, f();\n\n    try {\n      i.length > 0 && i.forEach(t => {\n        t && \"function\" == typeof t && t({\n          tenantId: e\n        });\n      }), i = [];\n    } catch (e) {}\n  },\n  isTestHostname: a,\n  login: function ({\n    method: t,\n    email: n,\n    username: o,\n    emailOrUsername: i,\n    password: a,\n    token: h,\n    uuid: m\n  }) {\n    try {\n      if (!t) throw new Error('Userfront.login called without \"method\" property');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (e) {\n            if (!e) throw new Error(\"Missing provider\");\n            const t = u(e);\n            window.location.assign(t);\n          }(t));\n\n        case \"password\":\n          return function ({\n            email: t,\n            username: n,\n            emailOrUsername: o,\n            password: i\n          }) {\n            try {\n              return Promise.resolve(e.post(r + \"auth/basic\", {\n                tenantId: s.tenantId,\n                emailOrUsername: t || n || o,\n                password: i\n              })).then(function ({\n                data: e\n              }) {\n                if (!e.tokens) throw new Error(\"Please try again.\");\n                w(e.tokens), d(c(\"redirect\") || e.redirectTo || \"/\");\n              });\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            email: n,\n            username: o,\n            emailOrUsername: i,\n            password: a\n          });\n\n        case \"link\":\n          return function (t, n) {\n            try {\n              return t || (t = c(\"token\")), n || (n = c(\"uuid\")), t && n ? Promise.resolve(e.put(r + \"auth/link\", {\n                token: t,\n                uuid: n,\n                tenantId: s.tenantId\n              })).then(function ({\n                data: e\n              }) {\n                if (!e.tokens) throw new Error(\"Problem logging in.\");\n                w(e.tokens), d(c(\"redirect\") || e.redirectTo || \"/\");\n              }) : Promise.resolve();\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }(h, m);\n\n        default:\n          throw new Error('Userfront.login called with invalid \"method\" property');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  logout: function () {\n    try {\n      if (!s.accessToken) return Promise.resolve(l());\n      const t = n(function () {\n        return Promise.resolve(e.get(r + \"auth/logout\", {\n          headers: {\n            authorization: \"Bearer \" + s.accessToken\n          }\n        })).then(function ({\n          data: e\n        }) {\n          l(), d(e.redirectTo);\n        });\n      }, function () {\n        l();\n      });\n      return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  redirectIfLoggedIn: function () {\n    try {\n      if (!s.accessToken) return Promise.resolve(l());\n      const t = n(function () {\n        return Promise.resolve(e.get(r + \"self\", {\n          headers: {\n            authorization: \"Bearer \" + s.accessToken\n          }\n        })).then(function ({\n          data: e\n        }) {\n          e.tenant && e.tenant.loginRedirectPath && d(e.tenant.loginRedirectPath);\n        });\n      }, function () {\n        l();\n      });\n      return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  registerUrlChangedEventListener: function () {\n    if (!p) {\n      p = !0;\n\n      try {\n        history.pushState = (e = history.pushState, function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"pushstate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        }), history.replaceState = (e => function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"replacestate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        })(history.replaceState), window.addEventListener(\"popstate\", () => {\n          window.dispatchEvent(new Event(\"urlchanged\"));\n        });\n      } catch (e) {}\n\n      var e;\n    }\n  },\n  resetPassword: function ({\n    uuid: t,\n    token: n,\n    password: o\n  }) {\n    try {\n      if (n || (n = c(\"token\")), t || (t = c(\"uuid\")), !n || !t) throw new Error(\"Missing token or uuid\");\n      return Promise.resolve(e.put(r + \"auth/reset\", {\n        tenantId: s.tenantId,\n        uuid: t,\n        token: n,\n        password: o\n      })).then(function ({\n        data: e\n      }) {\n        if (!e.tokens) throw new Error(\"There was a problem resetting your password. Please try again.\");\n        w(e.tokens), d(c(\"redirect\") || e.redirectTo || \"/\");\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendLoginLink: function (t) {\n    try {\n      return Promise.resolve(n(function () {\n        return Promise.resolve(e.post(r + \"auth/link\", {\n          email: t,\n          tenantId: s.tenantId\n        })).then(function ({\n          data: e\n        }) {\n          return e;\n        });\n      }, function () {\n        throw new Error(\"Problem sending link\");\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendResetLink: function (t) {\n    try {\n      return Promise.resolve(n(function () {\n        return Promise.resolve(e.post(r + \"auth/reset/link\", {\n          email: t,\n          tenantId: s.tenantId\n        })).then(function ({\n          data: e\n        }) {\n          return e;\n        });\n      }, function () {\n        throw new Error(\"Problem sending link\");\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  setMode: function () {\n    try {\n      const t = n(function () {\n        return Promise.resolve(e.get(`${r}tenants/${s.tenantId}/mode`)).then(function ({\n          data: e\n        }) {\n          s.mode = e.mode || \"test\";\n        });\n      }, function () {\n        s.mode = \"test\";\n      });\n      return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  setCookie: h,\n  signup: function ({\n    method: t,\n    username: n,\n    name: o,\n    email: i,\n    password: a\n  }) {\n    try {\n      if (!t) throw new Error('Userfront.signup called without \"method\" property');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (e) {\n            if (!e) throw new Error(\"Missing provider\");\n            const t = u(e);\n            window.location.assign(t);\n          }(t));\n\n        case \"password\":\n          return function ({\n            username: t,\n            name: n,\n            email: o,\n            password: i\n          }) {\n            try {\n              return Promise.resolve(e.post(r + \"auth/create\", {\n                tenantId: s.tenantId,\n                username: t,\n                name: n,\n                email: o,\n                password: i\n              })).then(function ({\n                data: e\n              }) {\n                if (!e.tokens) throw new Error(\"Please try again.\");\n                w(e.tokens), d(c(\"redirect\") || e.redirectTo || \"/\");\n              });\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            username: n,\n            name: o,\n            email: i,\n            password: a\n          });\n\n        default:\n          throw new Error('Userfront.signup called with invalid \"method\" property');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  store: s\n};\nexport default v;","map":{"version":3,"sources":["../src/index.js","../src/constants.js"],"names":["apiUrl","privateIPRegex","initCallbacks","isTestHostname","hn","hostname","window","location","match","err","store","mode","tenantId","console","warn","accessTokenName","idTokenName","refreshTokenName","setTokensFromCookies","length","forEach","cb","error","push","accessToken","Cookies","get","idToken","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","getProviderLink","provider","Error","origin","pathname","data","axios","method","username","name","email","password","signupWithSSO","signupWithPassword","url","assign","post","tokens","setCookiesAndTokens","redirectToPath","redirectTo","emailOrUsername","token","uuid","loginWithSSO","loginWithPassword","loginWithLink","put","removeAllCookies","headers","authorization","tenant","loginRedirectPath","pathOrUrl","el","document","createElement","hash","search","setCookie","value","options","type","cookieName","secure","sameSite","set","removeCookie","remove","undefined","refreshToken","access","cookieOptions","id","refresh","isRegistered","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","addInitCallback","init","login","logout","redirectIfLoggedIn","registerUrlChangedEventListener","resetPassword","sendLoginLink","sendResetLink","setMode","signup","_catch","body","recover","result","e","then"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import jwt from \"jsonwebtoken\";\n\nimport constants from \"./constants\";\nconst { apiUrl, privateIPRegex } = constants;\n\nlet initCallbacks = [];\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nconst isTestHostname = (hn) => {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n};\n\nconst store = {\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  setTokensFromCookies();\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n * Set and then return the access token\n */\nfunction accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nfunction idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nfunction getQueryAttr(attrName) {\n  if (\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\nfunction getProviderLink(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n  return `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}&pathname=${window.location.pathname}`;\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nasync function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function signup({ method, username, name, email, password }) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO(method);\n    case \"password\":\n      return signupWithPassword({ username, name, email, password });\n    default:\n      throw new Error('Userfront.signup called with invalid \"method\" property');\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function signupWithPassword({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: store.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO(method);\n    case \"password\":\n      return loginWithPassword({ email, username, emailOrUsername, password });\n    case \"link\":\n      return loginWithLink(token, uuid);\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction loginWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n}) {\n  const { data } = await axios.post(`${apiUrl}auth/basic`, {\n    tenantId: store.tenantId,\n    emailOrUsername: email || username || emailOrUsername,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n */\nasync function loginWithLink(token, uuid) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) return;\n\n  const { data } = await axios.put(`${apiUrl}auth/link`, {\n    token,\n    uuid,\n    tenantId: store.tenantId,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Problem logging in.\");\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nasync function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nasync function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\nasync function resetPassword({ uuid, token, password }) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n  const { data } = await axios.put(`${apiUrl}auth/reset`, {\n    tenantId: store.tenantId,\n    uuid,\n    token,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\n      \"There was a problem resetting your password. Please try again.\"\n    );\n  }\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nasync function redirectIfLoggedIn() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nfunction redirectToPath(pathOrUrl) {\n  if (!pathOrUrl) return;\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.href = path;\n  }\n}\n\n/**\n * Log a user out and redirect to the logout path.\n */\nasync function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nfunction setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nfunction removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nfunction setTokensFromCookies() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  store.idToken = Cookies.get(store.idTokenName);\n  store.refreshToken = Cookies.get(store.refreshTokenName);\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nfunction setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n\n/**\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\nexport default {\n  addInitCallback,\n  accessToken,\n  getQueryAttr,\n  idToken,\n  init,\n  isTestHostname,\n  login,\n  logout,\n  redirectIfLoggedIn,\n  registerUrlChangedEventListener,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  setMode,\n  setCookie,\n  signup,\n  store,\n};\n","export default {\n  apiUrl: `https://api.userfront.com/v0/`,\n  privateIPRegex: /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g,\n};\n"]},"metadata":{},"sourceType":"module"}