{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/UnitSelector.js\";\nimport { units } from \"../SC2Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\"\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\"\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n};\nexport const UnitSelector = () => {\n  return Object.entries(factions).map((key, item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), item.production ? Object.values(item.production).map((structure, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: structure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      }) : \"\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n};\n_c = UnitSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/UnitSelector.js"],"names":["units","factions","terran","icon","production","factory","barracks","zerg","protoss","roboticsFacility","UnitSelector","Object","entries","map","key","item","index","values","structure","idx"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,YAApB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,aADA;AAENC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,cADC;AAEVC,MAAAA,QAAQ,EAAE;AAFA;AAFN,GADO;AAQfC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAE;AADF,GARS;AAWfK,EAAAA,OAAO,EAAE;AACPL,IAAAA,IAAI,EAAE,aADC;AAEPC,IAAAA,UAAU,EAAE;AACVK,MAAAA,gBAAgB,EAAE;AADR;AAFL;AAXM,CAAjB;AAmBA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAEhC,SAAOC,MAAM,CAACC,OAAP,CAAeX,QAAf,EAAyBY,GAAzB,CAA6B,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,KAAsB;AACxD,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,IAAI,CAACZ;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,EAEGY,IAAI,CAACX,UAAL,GACDO,MAAM,CAACM,MAAP,CAAcF,IAAI,CAACX,UAAnB,EAA+BS,GAA/B,CAAmC,CAACK,SAAD,EAAWC,GAAX,KAAmB;AACpD,4BACE;AAAK,UAAA,GAAG,EAAED;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD,CADC,GAMD,EARF;AAAA,OAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBM,CAAP;AAmBD,CArBM;KAAMN,Y","sourcesContent":["import {units} from \"../SC2Data\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n}\n\nexport const UnitSelector = () => {\n\n  return Object.entries(factions).map((key, item, index) => {\n    return (\n      <div key={index}>\n        <img src={item.icon}></img>\n        {item.production ? \n        Object.values(item.production).map((structure,idx) => {\n          return (\n            <img src={structure}></img>\n          );\n        }):\n        \"\"\n      \n      }\n        </div>\n      \n    );\n  })\n  \n  \n}"]},"metadata":{},"sourceType":"module"}