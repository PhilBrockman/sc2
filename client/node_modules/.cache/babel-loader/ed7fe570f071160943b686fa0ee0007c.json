{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Middle.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DPS = ({\n  attacker,\n  defender,\n  aidx,\n  attackResearch,\n  shieldsResearch,\n  armorResearch,\n  setDefender\n}) => {\n  console.log(\"damage\", attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n  let d = new Damage(attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n  const backup = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(defender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n  const active = canAttackTargetDefender(attacker === null || attacker === void 0 ? void 0 : attacker.attacks[aidx], defender);\n  const cns = [\"button\"];\n  let text;\n\n  if (active) {\n    cns.push(\"active\");\n\n    if (d.oneShot()) {\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" Attack: \\u2694\\uFE0F \", d.oneShot().totalDamage]\n      }, void 0, true);\n    } else {\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Victory (reset)\"\n      }, void 0, false);\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\");\n\n      if (attacker.attacks.map(attack => {\n        return canAttackTargetDefender(attack, defender);\n      }).filter(item => item).length > 0) {\n        text = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Select a valid attack\"\n        }, void 0, false);\n      } else {\n        cns.push(\"invalid\");\n        text = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [attacker.name, \" can't attack \", defender.name]\n        }, void 0, true);\n      }\n    } else {\n      cns.push(\"inactive\");\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Awaiting...\"\n      }, void 0, false);\n    }\n  }\n\n  const resetDefender = () => {//   const units = useUnits();\n    //   if(defender?.name) {\n    //    setDefender(units.find(unit => unit.name === defender.name))\n    //    }\n  };\n\n  const updateHealth = () => {\n    let newValues = d.oneShot();\n    console.log('newValues', newValues);\n    let newDefender = defender;\n    console.log('aidx', aidx);\n\n    if (newValues && aidx !== undefined && aidx !== null) {\n      console.log('staritng for loop'); // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n      // console.log('looping', i)\n\n      if (newValues.health > 0 || true) {\n        console.log(\"updatinghealth\");\n        let newValues = d.oneShot();\n\n        if (newValues) {\n          newDefender = { ...newDefender,\n            base: { ...newDefender.base,\n              health: newValues.health,\n              shields: newValues.shields\n            }\n          };\n        }\n\n        console.log('newDefender', newDefender);\n        d = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(newDefender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n      } else {\n        console.log(\">>>>>failed health chi\");\n      } //  }\n\n\n      setDefender(newDefender);\n    } else {\n      resetDefender();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DPS\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cns.join(\" \"),\n        onClick: () => updateHealth(),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => resetDefender(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [backup.eliminate(), \" attacks to eliminate\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n_c = DPS;\n\nconst RandomButton = ({\n  position\n}) => {\n  _s();\n\n  const units = useUnits();\n  let button;\n\n  if (units) {\n    const randomUnit = units[Math.floor(Math.random() * units.length)];\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => position(randomUnit),\n      children: [\"random : \", randomUnit.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 14\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Loading Units...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-button\",\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n};\n\n_s(RandomButton, \"i38jzGIpdmeT2Zt1iS3f6gQkeUw=\", true);\n\n_c2 = RandomButton;\n\nconst Middle = ({\n  attacker,\n  defender,\n  aidx,\n  research,\n  setDefender,\n  setAttacker\n}) => {\n  _s2();\n\n  const units = useUnits();\n\n  if (!research || !units) {\n    return null;\n  } else {\n    var _units$find, _units$find$base, _units$find2;\n\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research;\n    const baseShields = defender ? (_units$find = units.find(unit => unit.name === (defender === null || defender === void 0 ? void 0 : defender.name))) === null || _units$find === void 0 ? void 0 : (_units$find$base = _units$find.base) === null || _units$find$base === void 0 ? void 0 : _units$find$base.shields : null;\n    console.log('units from Middle', units);\n    const baseHealth = (_units$find2 = units.find(unit => unit.name === (defender === null || defender === void 0 ? void 0 : defender.name))) === null || _units$find2 === void 0 ? void 0 : _units$find2.base.health;\n    const unitStats = defender ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Upgrade, {\n          researchKind: \"attack\",\n          updateResearch: setAttackResearch,\n          value: attackResearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), baseShields ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (defender === null || defender === void 0 ? void 0 : defender.research.shields) ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"shields\",\n            updateResearch: setShieldsResearch,\n            value: shieldsResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Upgrade, {\n          researchKind: \"armor\",\n          updateResearch: setArmorResearch,\n          value: armorResearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this) : null;\n\n    let vitality = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [baseShields ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83E\\uDDCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [defender.base.shields, \" / \", baseShields]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [defender ? defender.base.armor + armorResearch * defender.research.armor : null, \" \\uD83D\\uDEE1\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: defender ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"= \", defender.base.armor, \" + \", armorResearch]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u2665\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: defender ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [defender.base.health, \" / \", baseHealth]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n\n    const randomButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [attacker ? null : /*#__PURE__*/_jsxDEV(RandomButton, {\n        position: setAttacker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 24\n      }, this), defender ? null : /*#__PURE__*/_jsxDEV(RandomButton, {\n        position: setDefender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [vitality, /*#__PURE__*/_jsxDEV(DPS, {\n          attacker: attacker,\n          defender: defender,\n          aidx: aidx,\n          attackResearch: attackResearch,\n          armorResearch: armorResearch,\n          shieldsResearch: shieldsResearch,\n          setDefender: setDefender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Research\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), unitStats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: randomButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  } // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n  // return(\n  //   );\n\n};\n\n_s2(Middle, \"i38jzGIpdmeT2Zt1iS3f6gQkeUw=\", true);\n\n_c3 = Middle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DPS\");\n$RefreshReg$(_c2, \"RandomButton\");\n$RefreshReg$(_c3, \"Middle\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Middle.js"],"names":["DPS","attacker","defender","aidx","attackResearch","shieldsResearch","armorResearch","setDefender","console","log","d","Damage","backup","JSON","parse","stringify","active","canAttackTargetDefender","attacks","cns","text","push","oneShot","totalDamage","map","attack","filter","item","length","name","resetDefender","updateHealth","newValues","newDefender","undefined","health","base","shields","join","eliminate","RandomButton","position","units","useUnits","button","randomUnit","Math","floor","random","Middle","research","setAttacker","setAttackResearch","setShieldsResearch","setArmorResearch","baseShields","find","unit","baseHealth","unitStats","vitality","armor","randomButtons","display","flexDirection"],"mappings":"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","sourcesContent":["\n\nconst DPS = ({attacker, defender, aidx,  attackResearch, shieldsResearch, armorResearch, setDefender}) => {\n  console.log(\"damage\", attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n  let d = new Damage(attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n  const backup = new Damage(JSON.parse(JSON.stringify(attacker)),\n    JSON.parse(JSON.stringify(defender)), aidx,\n    [ attackResearch, shieldsResearch, armorResearch]\n    )\n  const active = canAttackTargetDefender(attacker?.attacks[aidx], defender)\n  const cns = [\"button\"];\n\n  let text\n  if(active){\n    cns.push(\"active\")\n    if(d.oneShot()){\n      text = <> Attack: ⚔️ {d.oneShot().totalDamage}</>\n    } else {\n      text = <>Victory (reset)</>\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\")\n      if(attacker.attacks.map(attack => {\n              return canAttackTargetDefender(attack, defender)\n            }).filter(item => item).length > 0){\n              text = <>Select a valid attack</>\n            }\n      else{\n        cns.push(\"invalid\")\n        text = <>{attacker.name} can't attack {defender.name}</>\n      }\n\n    } else {\n      cns.push(\"inactive\")\n      text =  <>Awaiting...</>\n    }\n  }\n\n  const resetDefender = () => {\n  //   const units = useUnits();\n  //   if(defender?.name) {\n  //    setDefender(units.find(unit => unit.name === defender.name))\n  //    }\n  }\n\n  const updateHealth = () => {\n    let newValues = d.oneShot();\n    console.log('newValues', newValues)\n    let newDefender = defender;\n    console.log('aidx', aidx)\n    if(newValues && aidx !== undefined && aidx !== null){\n      console.log('staritng for loop')\n      // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n        // console.log('looping', i)\n        if(newValues.health > 0 || true){\n        console.log(\"updatinghealth\")\n          let newValues = d.oneShot();\n          if(newValues){\n            newDefender = {\n              ...newDefender,\n              base: {\n                ...newDefender.base,\n                health: newValues.health,\n                shields: newValues.shields,\n              }\n            }\n            }\n            console.log('newDefender', newDefender)\n          d = new Damage(JSON.parse(JSON.stringify(attacker)),\n          JSON.parse(JSON.stringify(newDefender)), aidx,\n          [ attackResearch, shieldsResearch, armorResearch]\n            )\n            } else {\n              console.log(\">>>>>failed health chi\")\n            }\n    //  }\n     setDefender(newDefender)\n    } else {\n      resetDefender()\n    }\n  }\n\n  return <div className={\"DPS\"}>\n            <div><button className={cns.join(\" \")} onClick={() => updateHealth()}>{text}</button></div>\n            {active ? <>\n              <div> <button onClick={() => resetDefender()}>Reset</button> </div>\n              <div>{backup.eliminate()} attacks to eliminate</div>\n          </> : null}\n        </div>\n}\n\nconst RandomButton = ({ position }) => {\n  const units = useUnits();\n  let button;\n\n  if(units){\n    const randomUnit = units[Math.floor(Math.random() * units.length)] \n    button = <button onClick={() => position(randomUnit)}>random : {randomUnit.name}</button>\n  } else {\n    button = <button>Loading Units...</button>\n  }\n\n  return <div className={\"random-button\"}>\n      {button}\n    </div>\n}\n\nconst Middle = ({attacker, defender, aidx, research, setDefender, setAttacker}) => {\n  const units = useUnits();\n  if(!research || !units){\n    return null;\n  } else {\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research\n\n    const baseShields = defender ?\n      units.find(unit => unit.name === defender?.name)?.base?.shields:\n      null ;\n\n    console.log('units from Middle', units)\n    const baseHealth = units.find(unit => unit.name === defender?.name)?.base.health\n\n    const unitStats = defender ? \n    <div className={\"unit-stats\"}>\n\n        <div><Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} /></div>\n        {baseShields ?  \n        <>\n          <div>{defender?.research.shields?\n          <Upgrade researchKind={\"shields\"} updateResearch={setShieldsResearch} value={shieldsResearch} />\n          : null}</div>\n        </>: null }\n\n          \n          <div><Upgrade researchKind={\"armor\"} updateResearch={setArmorResearch} value={armorResearch} /></div>\n      </div> :\n    null;\n\n    let vitality = <>\n         {baseShields ? <>\n          <div>🧊</div>\n          <div>{defender.base.shields} / {baseShields}</div>\n          </>: null}\n          <div>{defender? defender.base.armor + armorResearch*defender.research.armor: null} 🛡</div>\n          <div>{defender? <>= {defender.base.armor} + {armorResearch}</>: null}</div>\n\n          <div>♥️</div>\n          <div>{defender? <>{defender.base.health} / {baseHealth}</> : null}</div>\n    </>\n\n    const randomButtons = <>\n     {attacker ? null: <RandomButton position={setAttacker} />}\n      {defender ? null: <RandomButton position={setDefender} />}\n      </> \n\n\n    return <div style={{display:\"flex\", flexDirection: \"column\"}}>\n      <div>\n      {vitality}\n            \n      <DPS attacker={attacker} defender={defender} aidx={aidx}\n          attackResearch={attackResearch} armorResearch={armorResearch} shieldsResearch={shieldsResearch}\n          setDefender={setDefender}/>\n      </div>\n\n\n      <div>\n        <h2>Research</h2>\n        {unitStats}\n        </div>\n      <div>{randomButtons}</div>\n\n      \n      </div>\n\n  }\n\n  // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n\n  // return(\n\n  //   );\n}"]},"metadata":{},"sourceType":"module"}