{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/UnitSelector.js\";\nimport { units } from \"../SC2Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\"\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {}\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n};\nexport const UnitSelector = () => {\n  return Object.entries(factions).map(([key, value]) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: value.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), Object.values(value.production).map((structure, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: structure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n};\n_c = UnitSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/UnitSelector.js"],"names":["units","factions","terran","icon","production","factory","barracks","zerg","protoss","roboticsFacility","UnitSelector","Object","entries","map","key","value","values","structure","idx"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,YAApB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,aADA;AAENC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,cADC;AAEVC,MAAAA,QAAQ,EAAE;AAFA;AAFN,GADO;AAQfC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAE,eADF;AAEJC,IAAAA,UAAU,EAAE;AAFR,GARS;AAcfI,EAAAA,OAAO,EAAE;AACPL,IAAAA,IAAI,EAAE,aADC;AAEPC,IAAAA,UAAU,EAAE;AACVK,MAAAA,gBAAgB,EAAE;AADR;AAFL;AAdM,CAAjB;AAsBA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAOC,MAAM,CAACC,OAAP,CAAeX,QAAf,EAAyBY,GAAzB,CAA8B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACrD,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACZ;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,EAGEQ,MAAM,CAACK,MAAP,CAAcD,KAAK,CAACX,UAApB,EAAgCS,GAAhC,CAAoC,CAACI,SAAD,EAAWC,GAAX,KAAmB;AACrD,4BACE;AAAK,UAAA,GAAG,EAAED;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD,CAHF;AAAA,OAAUH,GAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfM,CAAP;AAkBD,CAnBM;KAAMJ,Y","sourcesContent":["import {units} from \"../SC2Data\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      factory: \"/factory.png\",\n      barracks: \"/barracks.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {\n\n    }\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n}\n\nexport const UnitSelector = () => {\n  return Object.entries(factions).map( ([key, value]) => {\n    return (\n      <div key={key}>\n        <img src={value.icon}></img>\n{\n        Object.values(value.production).map((structure,idx) => {\n          return (\n            <img src={structure}></img>\n          );\n        })\n      \n      }\n        </div>\n      \n    );\n  })\n  \n  \n}"]},"metadata":{},"sourceType":"module"}