{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Attacker/Attacker.js\";\nimport React from 'react';\nimport { UnitSelector } from '../UnitSelector/UnitSelector';\nimport { groundAirTargetingValidation, canAttackTargetDefender } from \"./Damage\";\nimport \"./Attacker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AttackerErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrhap'\n          },\n          children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), this.state.errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nconst Bonus = ({\n  attack,\n  defender,\n  textstyle\n}) => {\n  return attack.bonuses.map((bonus, index) => {\n    let baseText = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Anti-\", bonus.to, \":\"]\n    }, void 0, true);\n\n    let bonusText = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [bonus.baseDamage, \" (+\", bonus.researchBonus, \")\"]\n    }, void 0, true);\n\n    let modifier;\n\n    if (!defender) {\n      modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n        children: bonusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this);\n    } else {\n      // const overlap = false;//groundAirTargetingValidation(attack, defender);\n      // if (overlap.length === 0){\n      //   modifier = <span> {bonusText} </span>\n      // }else{\n      if (defender.types.includes(bonus.to)) {\n        modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [bonusText, \" \\uD83C\\uDFAF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this);\n      } else {\n        modifier = /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: \"wavy line-through red\"\n          },\n          children: bonusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this);\n      } // }\n\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [baseText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: textstyle,\n        children: modifier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c = Bonus;\n\nconst Bullet = ({\n  animate,\n  display\n}) => {\n  if (display) {\n    if (animate) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bullet\",\n        children: \"\\u27A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u27A1\"\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = Bullet;\n\nconst WeaponDisplay = ({\n  available,\n  selected,\n  classes\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"\\\"weapon\\\"\"\n  }, void 0, false);\n  const cns = [];\n  cns.push(index === attacker.weapon ? \"main-weapon\" : \"other-choice\");\n  cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n  const attacks = [\"attack-name\"];\n  attacks.push(available ? \"alt-weapon\" : \"unavailable\");\n  attacks.push(available && defaultIndex === null ? \"pulse\" : \"\");\n  console.log('attacks', attacks);\n  console.log('defaultIndex', defaultIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => toggleIndex(index),\n    className: cns.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.join(\" \"),\n        children: [/*#__PURE__*/_jsxDEV(Bullet, {\n          animate: available && defaultIndex === null,\n          display: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), attack.name, \" \", attack.repeats > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"(x \", attack.repeats, \")\"]\n        }, void 0, true) : null, index === defaultIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Base Damage: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: cn,\n              children: [attack.baseDamage, \" (+\", attack.researchBonus, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Bonus, {\n            attack: attack,\n            defender: defender,\n            textstyle: cn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = WeaponDisplay;\n\nconst Attacks = ({\n  attacker,\n  defender,\n  setAttackingWeapon\n}) => {\n  const Attack = ({\n    attack\n  }) => {\n    const cns = [];\n    cns.push(index === attacker.weapon ? \"main-weapon\" : \"other-choice\");\n    cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n    const attacks = [\"attack-name\"];\n    attacks.push(available ? \"alt-weapon\" : \"unavailable\");\n    attacks.push(available && defaultIndex === null ? \"pulse\" : \"\");\n    console.log('attacks', attacks);\n    console.log('defaultIndex', defaultIndex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleIndex(index),\n      className: cns.join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.join(\" \"),\n          children: [/*#__PURE__*/_jsxDEV(Bullet, {\n            animate: available && defaultIndex === null,\n            display: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), attack.name, \" \", attack.repeats > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"(x \", attack.repeats, \")\"]\n          }, void 0, true) : null, index === defaultIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Base Damage: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: cn,\n                children: [attack.baseDamage, \" (+\", attack.researchBonus, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Bonus, {\n              attack: attack,\n              defender: defender,\n              textstyle: cn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }; // return \"attxs\"+JSON.stringify(attacks.l)\n\n\n  return attacker === null || attacker === void 0 ? void 0 : attacker.attacks.map(attack => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Attack, {\n        attack: attack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  });\n\n  if (!attacks) {\n    return \" no attacker\";\n  } // return \"Attacks\"\n\n\n  const toggleWeapon = index => {// if(index === defaultIndex){\n    //   setAttackingWeapon(null)\n    // } else {\n    //   setAttackingWeapon(index)\n    // }\n  }; // const attackMap = JSON.stringify(attacker)\n  // attacker?.attacks?.map((attack, index) => {\n  //   return <WeaponDisplay available={canAttackTargetDefender(attack, defender)}\n  //                          selected={index === attacker.weapon} />\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attacks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: attacks.length > 0 ? Attacks : \"pacifist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: JSON.stringify(attacks)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n};\n\n_c4 = Attacks;\nexport const Attacker = ({\n  attacker,\n  defender,\n  setAttacker,\n  units\n}) => {\n  const setAttackingWeapon = () => {\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(AttackerErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(UnitSelector, {\n      setUnit: setAttacker,\n      currentUnit: attacker,\n      units: units,\n      children: (attacker === null || attacker === void 0 ? void 0 : attacker.attacks.length) > 0 ? /*#__PURE__*/_jsxDEV(Attacks, {\n        attacks: attacker.attacks,\n        setAttackingWeapon: setAttackingWeapon,\n        defender: defender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this) : attacker ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"pacifist\"\n      }, void 0, false) : \"nonthing selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 10\n  }, this);\n};\n_c5 = Attacker;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Bonus\");\n$RefreshReg$(_c2, \"Bullet\");\n$RefreshReg$(_c3, \"WeaponDisplay\");\n$RefreshReg$(_c4, \"Attacks\");\n$RefreshReg$(_c5, \"Attacker\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Attacker/Attacker.js"],"names":["React","UnitSelector","groundAirTargetingValidation","canAttackTargetDefender","AttackerErrorBoundary","Component","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children","Bonus","attack","defender","textstyle","bonuses","map","bonus","index","baseText","to","bonusText","baseDamage","researchBonus","modifier","types","includes","textDecoration","Bullet","animate","display","WeaponDisplay","available","selected","classes","cns","push","attacker","weapon","attacks","defaultIndex","console","log","toggleIndex","join","name","repeats","cn","Attacks","setAttackingWeapon","Attack","toggleWeapon","length","JSON","stringify","Attacker","setAttacker","units"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { UnitSelector } from '../UnitSelector/UnitSelector'\nimport {groundAirTargetingValidation, canAttackTargetDefender} from \"./Damage\"\nimport \"./Attacker.css\"\n\nclass AttackerErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrhap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}\n\n\nconst Bonus = ({attack, defender, textstyle}) => {\n\n  return attack.bonuses.map((bonus, index) => {\n    let baseText = <>Anti-{bonus.to}:</>\n    let bonusText = <>{bonus.baseDamage} (+{bonus.researchBonus})</>;\n    let modifier;\n    \n    if(!defender){\n      modifier = <span>{bonusText}</span>\n    } else {\n      // const overlap = false;//groundAirTargetingValidation(attack, defender);\n      // if (overlap.length === 0){\n      //   modifier = <span> {bonusText} </span>\n      // }else{\n        if (defender.types.includes(bonus.to) ){\n          modifier=  <span>{bonusText} 🎯</span>\n        } else {\n          modifier= <span style={{textDecoration: \"wavy line-through red\"}}>{ bonusText}</span>\n        }\n      // }\n    }\n\n    return <div key={index}>\n      {baseText}\n      <span className={textstyle}>\n      {modifier}\n      </span>\n    </div>\n  })  \n}\n\nconst Bullet = ({animate, display}) => {\n  if(display){\n    if (animate){\n      return <span className={\"bullet\"}>➡</span>\n    } else {\n      return <>➡</>\n    }\n  } else {\n    return <></>\n  }\n}\n\nconst WeaponDisplay = ({available, selected, classes}) => {\n  return <>\"weapon\"</>\n  const cns = []\n  cns.push(index === attacker.weapon ? \"main-weapon\" : \"other-choice\");\n  cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n  const attacks = [\"attack-name\"]\n  attacks.push(available? \"alt-weapon\": \"unavailable\")\n  attacks.push(available && (defaultIndex === null) ? \"pulse\": \"\")\n  console.log('attacks', attacks)\n  console.log('defaultIndex', defaultIndex)\n  return <div key={index} onClick={() => toggleIndex(index)} className={cns.join(\" \")}>\n    <>\n      <div className={classes.join(\" \")} >\n        <Bullet animate={available && (defaultIndex === null)} display={(true)}/>\n            {attack.name} {attack.repeats > 1 ? <>(x {attack.repeats})</>: null}\n      {index === defaultIndex ?\n        <div>\n          <>Base Damage: <span className={cn}>{attack.baseDamage} (+{attack.researchBonus})</span></>\n          <Bonus attack={attack} defender={defender} textstyle={cn}/>\n        </div>\n        : null\n        }\n        </div>\n    </>\n  </div>\n}\n\nconst Attacks = ({attacker, defender, setAttackingWeapon}) => {\n  const Attack = ({attack}) => {\n    const cns = []\n    cns.push(index === attacker.weapon ? \"main-weapon\" : \"other-choice\");\n    cns.push(available ? \"attack-available\" : \"attack-unavailable\");\n    const attacks = [\"attack-name\"]\n    attacks.push(available? \"alt-weapon\": \"unavailable\")\n    attacks.push(available && (defaultIndex === null) ? \"pulse\": \"\")\n    console.log('attacks', attacks)\n    console.log('defaultIndex', defaultIndex)\n    return <div key={index} onClick={() => toggleIndex(index)} className={cns.join(\" \")}>\n      <>\n        <div className={classes.join(\" \")} >\n          <Bullet animate={available && (defaultIndex === null)} display={(true)}/>\n              {attack.name} {attack.repeats > 1 ? <>(x {attack.repeats})</>: null}\n        {index === defaultIndex ?\n          <div>\n            <>Base Damage: <span className={cn}>{attack.baseDamage} (+{attack.researchBonus})</span></>\n            <Bonus attack={attack} defender={defender} textstyle={cn}/>\n          </div>\n          : null\n          }\n          </div>\n      </>\n    </div>\n  }\n  // return \"attxs\"+JSON.stringify(attacks.l)\n  return attacker?.attacks.map(attack => {\n    return <>\n    <Attack attack={attack}/></>\n  }) \nif (!attacks ) {return \" no attacker\"}\n  // return \"Attacks\"\n  const toggleWeapon= (index) => {\n      // if(index === defaultIndex){\n      //   setAttackingWeapon(null)\n      // } else {\n      //   setAttackingWeapon(index)\n      // }\n    }\n  // const attackMap = JSON.stringify(attacker)\n  // attacker?.attacks?.map((attack, index) => {\n  //   return <WeaponDisplay available={canAttackTargetDefender(attack, defender)}\n  //                          selected={index === attacker.weapon} />\n    \n  \n  // })\n\n  return <div className={\"attacks\"}>\n    <h1>{attacks.length > 0 ? Attacks : \"pacifist\"}</h1>\n      {/* {attackMap} */}\n  <>{JSON.stringify(attacks)}</>\n  </div>\n}\n\nexport const Attacker = ({attacker, defender, setAttacker, units}) => {\n\n  const setAttackingWeapon = () => {\n    return null;\n  }\n  return <AttackerErrorBoundary>\n  <UnitSelector setUnit={setAttacker} currentUnit={attacker} units={units}> \n  {attacker?.attacks.length > 0 ? \n      <Attacks attacks={attacker.attacks} \n      setAttackingWeapon={setAttackingWeapon} defender={defender} />:\n        attacker ?\n          <>pacifist</>  :\n          \"nonthing selected\"}\n  </UnitSelector>\n  </AttackerErrorBoundary>\n}\n"]},"metadata":{},"sourceType":"module"}