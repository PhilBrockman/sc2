{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Middle.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Upgrade } from \"./Upgrade\";\nimport { canAttackTargetDefender, Damage } from \"./Attacker\";\nimport { useUnits, UnitImg } from './Unit';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DPS = ({\n  attacker,\n  defender,\n  aidx,\n  attackResearch,\n  shieldsResearch,\n  armorResearch,\n  setDefender\n}) => {\n  console.log(\"damage\", attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n  let d = new Damage(attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n  const backup = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(defender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n  const active = canAttackTargetDefender(attacker === null || attacker === void 0 ? void 0 : attacker.attacks[aidx], defender);\n  const cns = [\"button\"];\n  let text;\n\n  if (active) {\n    cns.push(\"active\");\n\n    if (d.oneShot()) {\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" Attack: \\u2694\\uFE0F \", d.oneShot().totalDamage]\n      }, void 0, true);\n    } else {\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Victory (reset)\"\n      }, void 0, false);\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\");\n\n      if (attacker.attacks.map(attack => {\n        return canAttackTargetDefender(attack, defender);\n      }).filter(item => item).length > 0) {\n        text = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Select a valid attack\"\n        }, void 0, false);\n      } else {\n        cns.push(\"invalid\");\n        text = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [attacker.name, \" can't attack \", defender.name]\n        }, void 0, true);\n      }\n    } else {\n      cns.push(\"inactive\");\n      text = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Awaiting...\"\n      }, void 0, false);\n    }\n  }\n\n  const resetDefender = () => {//   const units = useUnits();\n    //   if(defender?.name) {\n    //    setDefender(units.find(unit => unit.name === defender.name))\n    //    }\n  };\n\n  const updateHealth = () => {\n    let newValues = d.oneShot();\n    console.log('newValues', newValues);\n    let newDefender = defender;\n    console.log('aidx', aidx);\n\n    if (newValues && aidx !== undefined && aidx !== null) {\n      console.log('staritng for loop'); // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n      // console.log('looping', i)\n\n      if (newValues.health > 0 || true) {\n        console.log(\"updatinghealth\");\n        let newValues = d.oneShot();\n\n        if (newValues) {\n          newDefender = { ...newDefender,\n            base: { ...newDefender.base,\n              health: newValues.health,\n              shields: newValues.shields\n            }\n          };\n        }\n\n        console.log('newDefender', newDefender);\n        d = new Damage(JSON.parse(JSON.stringify(attacker)), JSON.parse(JSON.stringify(newDefender)), aidx, [attackResearch, shieldsResearch, armorResearch]);\n      } else {\n        console.log(\">>>>>failed health chi\");\n      } //  }\n\n\n      setDefender(newDefender);\n    } else {\n      resetDefender();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DPS\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cns.join(\" \"),\n        onClick: () => updateHealth(),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => resetDefender(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [backup.eliminate(), \" attacks to eliminate\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n\n_c = DPS;\n\nconst RandomButton = ({\n  position\n}) => {\n  _s();\n\n  const units = useUnits();\n  let button;\n\n  if (units) {\n    const randomUnit = units[Math.floor(Math.random() * units.length)];\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => position(randomUnit),\n      children: [\"random : \", randomUnit.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 14\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Loading Units...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-button\",\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n\n_s(RandomButton, \"i38jzGIpdmeT2Zt1iS3f6gQkeUw=\", false, function () {\n  return [useUnits];\n});\n\n_c2 = RandomButton;\nexport const Middle = ({\n  attacker,\n  defender,\n  aidx,\n  research,\n  setDefender,\n  setAttacker\n}) => {\n  _s2();\n\n  const units = useUnits();\n\n  if (!research || !units) {\n    return null;\n  } else {\n    var _units$find, _units$find$base, _units$find2;\n\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research;\n    let d = new Damage(attacker, defender, aidx, [attackResearch, shieldsResearch, armorResearch]);\n    const baseShields = defender ? (_units$find = units.find(unit => unit.name === (defender === null || defender === void 0 ? void 0 : defender.name))) === null || _units$find === void 0 ? void 0 : (_units$find$base = _units$find.base) === null || _units$find$base === void 0 ? void 0 : _units$find$base.shields : null;\n    console.log('units from Middle', units);\n    const baseHealth = (_units$find2 = units.find(unit => unit.name === (defender === null || defender === void 0 ? void 0 : defender.name))) === null || _units$find2 === void 0 ? void 0 : _units$find2.base.health;\n    const targetable = (attacker === null || attacker === void 0 ? void 0 : attacker.attacks.filter(attack => canAttackTargetDefender(attack, defender)).length) > 0;\n    const attackerDamage = d.oneShot().totalDamage ? d.oneShot().totalDamage : targetable ? \"aüëÄ\" : \"a‚åÄ\";\n\n    const unitStats = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: attacker ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: attacker,\n            label: \"‚öîÔ∏è\" + attackerDamage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 28\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: attacker ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"attack\",\n            updateResearch: setAttackResearch,\n            value: attackResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 30\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: baseShields ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [(defender === null || defender === void 0 ? void 0 : defender.research.shields) ? /*#__PURE__*/_jsxDEV(Upgrade, {\n              researchKind: \"shields\",\n              updateResearch: setShieldsResearch,\n              value: shieldsResearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this) : null, \" \"]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: baseShields && (defender === null || defender === void 0 ? void 0 : defender.research.shields) ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: defender,\n            label: shieldsResearch + \"üßä\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 60\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: defender ? /*#__PURE__*/_jsxDEV(Upgrade, {\n            researchKind: \"armor\",\n            updateResearch: setArmorResearch,\n            value: armorResearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: defender ? /*#__PURE__*/_jsxDEV(UnitImg, {\n            unit: defender,\n            label: defender.base.armor + armorResearch + \"üõ°\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 28\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n\n    let vitality = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [baseShields ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83E\\uDDCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [defender.base.shields, \" / \", baseShields]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [defender ? defender.base.armor + armorResearch * defender.research.armor : null, \" \\uD83D\\uDEE1\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: defender ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"= \", defender.base.armor, \" + \", armorResearch]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u2665\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: defender ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [defender.base.health, \" / \", baseHealth]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n\n    const randomButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [attacker ? null : /*#__PURE__*/_jsxDEV(RandomButton, {\n        position: setAttacker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 24\n      }, this), defender ? null : /*#__PURE__*/_jsxDEV(RandomButton, {\n        position: setDefender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [vitality, /*#__PURE__*/_jsxDEV(DPS, {\n          attacker: attacker,\n          defender: defender,\n          aidx: aidx,\n          attackResearch: attackResearch,\n          armorResearch: armorResearch,\n          shieldsResearch: shieldsResearch,\n          setDefender: setDefender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Research\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), unitStats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: randomButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  } // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n  // return(\n  //   );\n\n};\n\n_s2(Middle, \"i38jzGIpdmeT2Zt1iS3f6gQkeUw=\", false, function () {\n  return [useUnits];\n});\n\n_c3 = Middle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DPS\");\n$RefreshReg$(_c2, \"RandomButton\");\n$RefreshReg$(_c3, \"Middle\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Middle.js"],"names":["Upgrade","canAttackTargetDefender","Damage","useUnits","UnitImg","DPS","attacker","defender","aidx","attackResearch","shieldsResearch","armorResearch","setDefender","console","log","d","backup","JSON","parse","stringify","active","attacks","cns","text","push","oneShot","totalDamage","map","attack","filter","item","length","name","resetDefender","updateHealth","newValues","newDefender","undefined","health","base","shields","join","eliminate","RandomButton","position","units","button","randomUnit","Math","floor","random","Middle","research","setAttacker","setAttackResearch","setShieldsResearch","setArmorResearch","baseShields","find","unit","baseHealth","targetable","attackerDamage","unitStats","armor","vitality","randomButtons","display","flexDirection"],"mappings":"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","sourcesContent":["import {Upgrade} from \"./Upgrade\"\nimport {canAttackTargetDefender, Damage} from \"./Attacker\"\nimport { useUnits, UnitImg } from './Unit'\n\nconst DPS = ({attacker, defender, aidx,  attackResearch, shieldsResearch, armorResearch, setDefender}) => {\n  console.log(\"damage\", attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n  let d = new Damage(attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n  const backup = new Damage(JSON.parse(JSON.stringify(attacker)),\n    JSON.parse(JSON.stringify(defender)), aidx,\n    [ attackResearch, shieldsResearch, armorResearch]\n    )\n  const active = canAttackTargetDefender(attacker?.attacks[aidx], defender)\n  const cns = [\"button\"];\n\n  let text\n  if(active){\n    cns.push(\"active\")\n    if(d.oneShot()){\n      text = <> Attack: ‚öîÔ∏è {d.oneShot().totalDamage}</>\n    } else {\n      text = <>Victory (reset)</>\n    }\n  } else {\n    if (attacker && defender) {\n      cns.push(\"inactive\")\n      if(attacker.attacks.map(attack => {\n              return canAttackTargetDefender(attack, defender)\n            }).filter(item => item).length > 0){\n              text = <>Select a valid attack</>\n            }\n      else{\n        cns.push(\"invalid\")\n        text = <>{attacker.name} can't attack {defender.name}</>\n      }\n\n    } else {\n      cns.push(\"inactive\")\n      text =  <>Awaiting...</>\n    }\n  }\n\n  const resetDefender = () => {\n  //   const units = useUnits();\n  //   if(defender?.name) {\n  //    setDefender(units.find(unit => unit.name === defender.name))\n  //    }\n  }\n\n  const updateHealth = () => {\n    let newValues = d.oneShot();\n    console.log('newValues', newValues)\n    let newDefender = defender;\n    console.log('aidx', aidx)\n    if(newValues && aidx !== undefined && aidx !== null){\n      console.log('staritng for loop')\n      // for(var i = 0; i < attacker.attacks[aidx].repeats; i++){\n        // console.log('looping', i)\n        if(newValues.health > 0 || true){\n        console.log(\"updatinghealth\")\n          let newValues = d.oneShot();\n          if(newValues){\n            newDefender = {\n              ...newDefender,\n              base: {\n                ...newDefender.base,\n                health: newValues.health,\n                shields: newValues.shields,\n              }\n            }\n            }\n            console.log('newDefender', newDefender)\n          d = new Damage(JSON.parse(JSON.stringify(attacker)),\n          JSON.parse(JSON.stringify(newDefender)), aidx,\n          [ attackResearch, shieldsResearch, armorResearch]\n            )\n            } else {\n              console.log(\">>>>>failed health chi\")\n            }\n    //  }\n     setDefender(newDefender)\n    } else {\n      resetDefender()\n    }\n  }\n\n  return <div className={\"DPS\"}>\n            <div><button className={cns.join(\" \")} onClick={() => updateHealth()}>{text}</button></div>\n            {active ? <>\n              <div> <button onClick={() => resetDefender()}>Reset</button> </div>\n              <div>{backup.eliminate()} attacks to eliminate</div>\n          </> : null}\n        </div>\n}\n\nconst RandomButton = ({ position }) => {\n  const units = useUnits();\n  let button;\n\n  if(units){\n    const randomUnit = units[Math.floor(Math.random() * units.length)] \n    button = <button onClick={() => position(randomUnit)}>random : {randomUnit.name}</button>\n  } else {\n    button = <button>Loading Units...</button>\n  }\n\n  return <div className={\"random-button\"}>\n      {button}\n    </div>\n}\n\nexport const Middle = ({attacker, defender, aidx, research, setDefender, setAttacker}) => {\n  const units = useUnits();\n\n  if(!research || !units){\n    return null;\n  } else {\n    const [attackResearch, setAttackResearch, shieldsResearch, setShieldsResearch, armorResearch, setArmorResearch] = research\n    let d = new Damage(attacker, defender, aidx, [ attackResearch, shieldsResearch, armorResearch])\n    \n    const baseShields = defender ?\n      units.find(unit => unit.name === defender?.name)?.base?.shields:\n      null ;\n\n    console.log('units from Middle', units)\n    const baseHealth = units.find(unit => unit.name === defender?.name)?.base.health\n\n    const targetable = attacker?.attacks.filter(attack => canAttackTargetDefender(attack, defender)).length > 0\n\n    const attackerDamage = d.oneShot().totalDamage ? \n      d.oneShot().totalDamage :\n       targetable ?\n       \"aüëÄ\":\n       \"a‚åÄ\";\n\n\n    const unitStats = <>\n      <div className={\"unit-stats\"}>\n          <div>{attacker ? <UnitImg unit={attacker} label={\"‚öîÔ∏è\" + (attackerDamage)} /> : null}</div>\n            <div>{attacker ? <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} /> : null }</div>\n          <div></div>\n\n          <div></div>\n          <div>\n            {baseShields ?  <>\n              {defender?.research.shields?\n              <Upgrade researchKind={\"shields\"} updateResearch={setShieldsResearch} value={shieldsResearch} />\n              : null} </>\n             :null }\n          </div>\n          <div>{baseShields && defender?.research.shields? <UnitImg unit={defender} label={shieldsResearch+\"üßä\"}/>: null}</div>\n\n          <div></div>\n            <div>{defender? <Upgrade researchKind={\"armor\"} updateResearch={setArmorResearch} value={armorResearch} /> : null }</div>\n          <div>{defender ? <UnitImg unit={defender} label={(defender.base.armor+armorResearch)+\"üõ°\"}/>: null}</div>\n        </div> \n      </>\n\n    let vitality = <>\n         {baseShields ? <>\n          <div>üßä</div>\n          <div>{defender.base.shields} / {baseShields}</div>\n          </>: null}\n          <div>{defender? defender.base.armor + armorResearch*defender.research.armor: null} üõ°</div>\n          <div>{defender? <>= {defender.base.armor} + {armorResearch}</>: null}</div>\n\n          <div>‚ô•Ô∏è</div>\n          <div>{defender? <>{defender.base.health} / {baseHealth}</> : null}</div>\n    </>\n\n    const randomButtons = <>\n     {attacker ? null: <RandomButton position={setAttacker} />}\n      {defender ? null: <RandomButton position={setDefender} />}\n      </> \n\n\n    return <div style={{display:\"flex\", flexDirection: \"column\"}}>\n      <div>\n      {vitality}\n            \n      <DPS attacker={attacker} defender={defender} aidx={aidx}\n          attackResearch={attackResearch} armorResearch={armorResearch} shieldsResearch={shieldsResearch}\n          setDefender={setDefender}/>\n      </div>\n\n\n      <div>\n        <h2>Research</h2>\n        {unitStats}\n        </div>\n      <div>{randomButtons}</div>\n\n      \n      </div>\n\n  }\n\n  // console.log('attacker', attacker)\n  // console.log('defender', defender)\n  // console.log('research', research)\n\n  // return(\n\n  //   );\n}"]},"metadata":{},"sourceType":"module"}