{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/src/components/Attacker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Unit } from \"./Unit\";\nimport { Upgrade } from \"./Upgrade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bonus = ({\n  attack,\n  defender,\n  style\n}) => {\n  return attack.bonuses.map((bonus, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"anti-\", bonus.to, style === \"main\" ? defender.types.includes(bonus.to) ? `| ${bonus.baseDamage} + (${bonus.researchBonus})` : \"\" : \"\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  });\n};\n\n_c = Bonus;\n\nconst Attacks = ({\n  unit,\n  defender,\n  defaultIndex,\n  setDefaultIndex\n}) => {\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main\" : \"default\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setDefaultIndex(index),\n      className: style,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [attack.baseDamage, \" + (\", unit.research.attack, \")\", /*#__PURE__*/_jsxDEV(Bonus, {\n          attack: attack,\n          defender: defender,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c2 = Attacks;\nexport const Attacker = ({\n  unit,\n  defender,\n  setOutputDamage,\n  defaultAttackResearch = 0,\n  defaultAttackIndex = 0\n}) => {\n  _s();\n\n  const [attackResearch, setAttackResearch] = React.useState(defaultAttackResearch);\n  const [attack, setAttack] = React.useState(defaultAttackIndex);\n  React.useEffect(() => {\n    const bonusDamage = () => {\n      return unit.attacks[attack].bonuses.filter(bonus => defender.types.includes(bonus.to)).reduce((total, amount) => {\n        return total + amount.baseDamage + amount.researchBonus * attackResearch;\n      }, 0);\n    };\n\n    const damageDealt = () => {\n      return unit.attacks[attack].baseDamage + attackResearch * unit.attacks[attack].researchBonus + bonusDamage();\n    };\n\n    setOutputDamage(damageDealt());\n  }, [attack, attackResearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Unit, {\n        type: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Attacks, {\n        unit: unit,\n        defaultIndex: attack,\n        setDefaultIndex: setAttack,\n        defender: defender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upgrades\",\n      children: /*#__PURE__*/_jsxDEV(Upgrade, {\n        researchKind: \"attack\",\n        updateResearch: setAttackResearch,\n        value: attackResearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Attacker, \"69a88G/dfoWN1MjWsK1ZR2S/A4w=\");\n\n_c3 = Attacker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Bonus\");\n$RefreshReg$(_c2, \"Attacks\");\n$RefreshReg$(_c3, \"Attacker\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/src/components/Attacker.js"],"names":["React","Unit","Upgrade","Bonus","attack","defender","style","bonuses","map","bonus","index","to","types","includes","baseDamage","researchBonus","Attacks","unit","defaultIndex","setDefaultIndex","attacks","research","Attacker","setOutputDamage","defaultAttackResearch","defaultAttackIndex","attackResearch","setAttackResearch","useState","setAttack","useEffect","bonusDamage","filter","reduce","total","amount","damageDealt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Unit} from \"./Unit\"\nimport {Upgrade} from \"./Upgrade\"\n\nconst Bonus = ({attack, defender, style}) => {\n  return attack.bonuses.map((bonus, index) => {\n    return <>\n      <div key={index}>\n        anti-{bonus.to}\n        {style === \"main\" ?\n        defender.types.includes(bonus.to) ?\n        `| ${bonus.baseDamage} + (${bonus.researchBonus})`: \"\"\n      : \"\"}\n      </div>\n    </>;\n  })\n}\n\nconst Attacks = ({unit, defender, defaultIndex, setDefaultIndex}) => {\n  return unit.attacks.map((attack, index) => {\n    const style = index === defaultIndex ? \"main\" : \"default\";\n    return <div key={index} onClick={() => setDefaultIndex(index)} className={style}>\n      <>\n        {attack.baseDamage} + ({unit.research.attack})\n        <Bonus attack={attack} defender={defender} style={style}/>\n      </>\n    </div>\n  })\n}\n\n\nexport const Attacker = ({unit, defender, setOutputDamage, defaultAttackResearch=0, defaultAttackIndex=0}) => {\n  const [attackResearch, setAttackResearch] = React.useState(defaultAttackResearch);\n  const [attack, setAttack] = React.useState(defaultAttackIndex);\n\n\n  React.useEffect(() => {\n    const bonusDamage = () => {\n      return unit.attacks[attack].bonuses.filter(bonus => defender.types.includes(bonus.to)).reduce((total, amount) => {\n        return total+amount.baseDamage+amount.researchBonus*attackResearch\n      }, 0)\n    }\n  \n    const damageDealt = () => {\n      return unit.attacks[attack].baseDamage + attackResearch*unit.attacks[attack].researchBonus + bonusDamage()\n    }\n\n    setOutputDamage(damageDealt())\n  }, [attack, attackResearch]);\n\n  return <div className={\"unit\"}>\n    <div>\n      <Unit type={unit} />\n      <Attacks unit={unit} defaultIndex={attack} setDefaultIndex={setAttack} defender={defender}/>\n    </div>\n    <div className={\"upgrades\"}>\n      <Upgrade researchKind={\"attack\"} updateResearch={setAttackResearch} value={attackResearch} />\n    </div>\n  </div>\n}"]},"metadata":{},"sourceType":"module"}