{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/UnitSelector.js\",\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useUnits, Unit } from \"./Unit\"; // import { useSpring, animated } from 'react-spring'\n\nimport \"./UnitSelector.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      barracks: \"/barracks.png\",\n      factory: \"/factory.png\",\n      starport: \"/starport.png\"\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {}\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n};\n\nconst camel2str = str => {\n  // adding space between strings\n  const result = str.replace(/([A-Z])/g, ' $1'); // converting first character to uppercase and join it to the final string\n\n  const final = result.charAt(0).toUpperCase() + result.slice(1);\n  return final;\n};\n\nexport const RandomButton = ({\n  display,\n  randomize,\n  randomText\n}) => {\n  let button;\n\n  if (display) {\n    button = /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => randomize(),\n      children: randomText || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\uD83C\\uDFB2\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Loading Units...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-button\",\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_c = RandomButton;\n\nconst ResetButton = ({\n  unit,\n  setUnit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-button\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setUnit(null),\n      children: \"\\uD83D\\uDCA3 clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 8\n  }, this);\n};\n\n_c2 = ResetButton;\n\nconst ButtonGroup = ({\n  unit,\n  setUnit,\n  randomizeUnit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group\",\n    children: [/*#__PURE__*/_jsxDEV(RandomButton, {\n      randomize: randomizeUnit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), unit ? /*#__PURE__*/_jsxDEV(ResetButton, {\n      setUnit: setUnit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = ButtonGroup;\nexport const UnitSelector = props => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [setUnit, currentUnit] = [props.setUnit, props.currentUnit];\n  const [loadingUnits, units] = useUnits();\n  const [searchText, setSearchText] = React.useState(\"\");\n\n  const inputText = /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"unit-search\",\n    placeholder: \"...unit name\",\n    onChange: e => setSearchText(e.target.value),\n    value: searchText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n\n  const showUnits = subUnits => {\n    const classes = [\"unit-selection\"]; // activeUnit = ? \"#367180\": \"#\";\n\n    return subUnits.map((unit, index) => {\n      let tmpClasses = classes;\n      let inlineStyle = {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'right',\n        backgroundImage: `url(${unit.img})`\n      };\n\n      if ((currentUnit === null || currentUnit === void 0 ? void 0 : currentUnit.name) === unit.name) {\n        tmpClasses = [...classes, \"active-unit\"];\n      } else {\n        tmpClasses = classes;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setUnit(unit),\n        className: tmpClasses.join(\" \"),\n        style: inlineStyle,\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: unit.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const Production = ({\n    structure,\n    path,\n    animations\n  }) => {\n    _s();\n\n    const [hidden, setHidden] = React.useState(true);\n    const units = useUnits();\n    const subUnits = units ? units.filter(unit => unit.structure === structure) : null;\n    let display = hidden ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"units-selector\",\n      children: showUnits(subUnits)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n    let inlineStyle = {\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      backgroundImage: `url(${path})`\n    };\n    if (!units) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"production-facility\",\n        style: inlineStyle,\n        onClick: () => setHidden(!hidden),\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: camel2str(structure)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(Production, \"1rdbtq2Y3+v4QysDHU49PT9EXVk=\", false, function () {\n    return [useUnits];\n  });\n\n  const Faction = ({\n    data,\n    label\n  }) => {\n    _s2();\n\n    const [hidden, setHidden] = React.useState(true);\n    const imgBackground = {\n      width: \"100%\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: imgBackground,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setHidden(!hidden),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), hidden ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(data.production).map(([structure, path]) => {\n          return /*#__PURE__*/_jsxDEV(Production, {\n            structure: structure,\n            path: path\n          }, structure, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s2(Faction, \"AHukDmvlvAKpCWxJH/sCJAE9HAk=\");\n\n  console.log('units', units);\n\n  const randomElement = arr => {\n    return arr[Math.floor(Math.random() * arr.length)];\n  };\n\n  const randomizeUnit = () => {\n    setUnit(randomElement(units));\n  };\n\n  React.useEffect(() => {\n    console.log(\"loaded units\");\n  }, [units]);\n\n  const inputArea = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [inputText, \" \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        unit: currentUnit,\n        setUnit: setUnit,\n        randomizeUnit: randomizeUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Unit, {\n        unit: currentUnit,\n        setUnit: setUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 21\n  }, this);\n\n  if (searchText.length > 0) {\n    let subUnits = units.filter(unit => unit.name.toLowerCase().includes(searchText.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: inputArea\n      }, void 0, false), showUnits(subUnits)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [inputArea, Object.entries(factions).map(([key, value]) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"faction\",\n          children: /*#__PURE__*/_jsxDEV(Faction, {\n            data: value,\n            label: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true);\n  }\n};\n\n_s3(UnitSelector, \"MFrmNHXvI9P9+XtKwKMWRqbdMlA=\", false, function () {\n  return [useUnits];\n});\n\n_c4 = UnitSelector;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RandomButton\");\n$RefreshReg$(_c2, \"ResetButton\");\n$RefreshReg$(_c3, \"ButtonGroup\");\n$RefreshReg$(_c4, \"UnitSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/UnitSelector/UnitSelector.js"],"names":["React","useUnits","Unit","factions","terran","icon","production","barracks","factory","starport","zerg","protoss","roboticsFacility","camel2str","str","result","replace","final","charAt","toUpperCase","slice","RandomButton","display","randomize","randomText","button","ResetButton","unit","setUnit","ButtonGroup","randomizeUnit","UnitSelector","props","currentUnit","loadingUnits","units","searchText","setSearchText","useState","inputText","e","target","value","showUnits","subUnits","classes","map","index","tmpClasses","inlineStyle","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","img","name","join","Production","structure","path","animations","hidden","setHidden","filter","Faction","data","label","imgBackground","width","Object","entries","console","log","randomElement","arr","Math","floor","random","length","useEffect","inputArea","children","toLowerCase","includes","key"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {useUnits, Unit} from \"./Unit\"\n// import { useSpring, animated } from 'react-spring'\n\nimport \"./UnitSelector.css\"\n\nconst factions = {\n  terran: {\n    icon: \"/marine.png\",\n    production: {\n      barracks: \"/barracks.png\",\n      factory: \"/factory.png\",\n      starport: \"/starport.png\",\n    }\n  },\n  zerg: {\n    icon: \"/zergling.png\",\n    production: {\n\n    }\n  },\n  protoss: {\n    icon: \"/zealot.png\",\n    production: {\n      roboticsFacility: \"/robo.png\"\n    }\n  }\n}\n\nconst camel2str = (str) => {\n   // adding space between strings\n  const result = str.replace(/([A-Z])/g,' $1');\n\n  // converting first character to uppercase and join it to the final string\n  const final = result.charAt(0).toUpperCase()+result.slice(1);\n  return final\n}\n\n\n\nexport const RandomButton = ({display, randomize, randomText }) => {\n  let button;\n\n  if(display){\n    button = <span onClick={() => randomize()}>\n                {randomText || <>🎲</>}\n            </span>\n  } else {\n    button = <button>Loading Units...</button>\n  }\n\n  return <div className={\"random-button\"}>\n      {button}\n    </div>\n}\n\nconst ResetButton = ({unit, setUnit}) => {\nreturn <div className={\"reset-button\"}>\n        <span onClick={() => setUnit(null)}>💣 clear</span>\n      </div>\n}\n\nconst ButtonGroup = ({unit, setUnit, randomizeUnit}) => {\n  return <div className={\"button-group\"}> \n    <RandomButton randomize={randomizeUnit} /> \n    {unit ? <ResetButton setUnit={setUnit} /> : null}\n  </div>\n}\n\nexport const UnitSelector = (props) => {\n  const [setUnit, currentUnit] = [props.setUnit, props.currentUnit]\n  \n  const [loadingUnits, units] = useUnits();\n  const [searchText, setSearchText] = React.useState(\"\")\n  const inputText = <input type={\"unit-search\"} placeholder={\"...unit name\"} onChange={(e) => setSearchText(e.target.value)} value={searchText}/>\n\n  const showUnits = (subUnits) => {\n    const classes = [\"unit-selection\"]\n\n    // activeUnit = ? \"#367180\": \"#\";\n    return subUnits.map((unit,index) => {\n      let tmpClasses = classes\n      let inlineStyle = {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'right',\n        backgroundImage: `url(${ unit.img})`,\n      };\n      if( currentUnit?.name === unit.name){\n        tmpClasses = [...classes, \"active-unit\"]\n      } else {\n        tmpClasses = classes\n      }\n      return <div key={index} onClick={() => setUnit(unit)} className={tmpClasses.join(\" \")} style={inlineStyle}>\n        <header><h1>{unit.name}</h1></header>\n      </div>\n    })\n  }\n\n  const Production = ({structure, path, animations}) => {\n    const [hidden, setHidden] = React.useState(true)\n    const units = useUnits();\n    const subUnits = units ? units.filter(unit => unit.structure === structure) : null;\n\n    let display = hidden? <></> :\n      <div className={\"units-selector\"}>{showUnits(subUnits)}</div>;\n\n    let inlineStyle = {\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      backgroundImage: `url(${ path})`,\n    };\n\n    if(!units) return null;\n\n    return <div>\n        <div className={\"production-facility\"} style={inlineStyle} onClick={() => setHidden(!hidden)}>\n          <header><h1>{camel2str(structure)}</h1></header>\n        </div>\n\n        <div>{display}</div>\n    </div>\n  }\n\n  const Faction = ({data, label}) => {\n    const [hidden, setHidden] = React.useState(true);\n\n    const imgBackground = ({\n      width:\"100%\",\n    })\n\n    return <div style={imgBackground} >\n      \n      <div onClick={() => setHidden(!hidden)}>\n        <div>{}</div>\n        <img src={data.icon} ></img>\n        </div>\n        {hidden ? null : \n        <div>\n          {\n            Object.entries(data.production).map(([structure, path]) => {\n              return <Production \n                        key={structure} \n                        structure={structure} \n                        path={path} />\n            })\n          }\n        </div>\n      }\n      </div>\n  }\n\n  console.log('units', units)\n\n  const randomElement = (arr) => {\n    return arr[Math.floor(Math.random()*arr.length)]\n  }\n  \n  const randomizeUnit = () => {\n    setUnit(randomElement(units))\n  }\n\n  React.useEffect(() => {console.log(\"loaded units\")}, [units])\n\n  const inputArea = <div>\n    <div className={\"input-area\"}>{inputText} <ButtonGroup unit={currentUnit} setUnit={setUnit} randomizeUnit={randomizeUnit}/></div>\n    <div>\n      <Unit unit={currentUnit} setUnit={setUnit}></Unit>\n      {props.children}\n    </div>\n  </div>\n\n\n  if(searchText.length > 0){\n    let subUnits = units.filter(unit => unit.name.toLowerCase().includes(searchText.toLowerCase()))\n    return <>\n    <>{inputArea}</>\n      {showUnits(subUnits)}\n    </>\n  } else {\n    return <>\n      {inputArea}\n      {Object.entries(factions).map( ([key, value]) => {\n      return (\n        <div key={key} className={\"faction\"}>\n          <Faction data={value} label={key} />\n        </div>\n      );\n    })}\n    </>\n  }\n\n  \n  \n  \n}"]},"metadata":{},"sourceType":"module"}