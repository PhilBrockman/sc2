{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/sc2/client/src/components/Unit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useUnits = () => {\n  _s();\n\n  const [response, setResponse] = React.useState(null);\n\n  const getUnits = async () => {\n    fetch('http://localhost:5000/api/units').then(res => res.json()).then(res => {\n      setResponse(res);\n    }).catch(err => {\n      console.error(\"error fetching\", err);\n    });\n  };\n\n  React.useEffect(() => {\n    getUnits();\n  }, []);\n  return response;\n};\n\n_s(useUnits, \"UzygO7jZ75H4HW8mRsa6teov5jY=\");\n\nexport const Unit = ({\n  unit,\n  weaknesses = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-name\",\n      children: unit.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-profile\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: unit.img,\n        alt: `portrait for ${unit.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), unit.types.map((type, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = Unit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Unit\");","map":{"version":3,"sources":["/Users/philbrockman/coding/sc2/client/src/components/Unit.js"],"names":["React","useUnits","response","setResponse","useState","getUnits","fetch","then","res","json","catch","err","console","error","useEffect","Unit","unit","weaknesses","name","img","types","map","type","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,QAAQ,GAAG,YAAW;AAC1BC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAK;AACZL,MAAAA,WAAW,CAACK,GAAD,CAAX;AACD,KAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCF,GAAhC;AACD,KAPH;AAQD,GATD;;AAUAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBT,IAAAA,QAAQ;AACT,GAFD,EAEG,EAFH;AAIA,SAAOH,QAAP;AACD,CAlBM;;GAAMD,Q;;AAoBb,OAAO,MAAMc,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAU,GAAC;AAAlB,CAAD,KAA2B;AAE7C,sBAAO;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,4BACH;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,gBAA8BD,IAAI,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEF,IAAI,CAACG,GAAf;AAAoB,QAAA,GAAG,EAAG,gBAAeH,IAAI,CAACE,IAAK;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFG,EAMFF,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAgB,CAAEC,IAAF,EAAQC,KAAR,KAAmB;AAC/B,0BAAO;AAAA,kBACND;AADM,SAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KAJH,CANE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaD,CAfM;KAAMR,I","sourcesContent":["import React from \"react\"\n\nexport const useUnits = () => {\n  const [response, setResponse] = React.useState(null)\n\n  const getUnits = async () =>{\n    fetch('http://localhost:5000/api/units')\n      .then(res => res.json())\n      .then(res =>  {\n        setResponse(res)\n      })\n      .catch(err => {\n        console.error(\"error fetching\", err)\n      })\n  }\n  React.useEffect(() => {\n    getUnits()\n  }, [])\n\n  return response\n}\n\nexport const Unit = ({unit, weaknesses=[]}) => {\n\n  return <div className={\"unit-card\"}>\n      <div className={\"unit-name\"}>{unit.name}</div>\n      <div className={\"unit-profile\"}>\n        <img src={unit.img} alt={`portrait for ${unit.name}`}></img>\n         \n      </div>\n      {unit.types.map((( type, index ) => {\n           return <div key = {index}> \n           {type}\n           </div>\n         }))}\n      \n  </div>\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}